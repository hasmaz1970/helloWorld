{
    "swagger": "2.0", 
    "info": {
        "title": "Resource Ordering Management", 
        "description": "This is Swagger UI environment generated for the TMF Resource Ordering Management specification", 
        "version": "2.0"
    }, 
    "host": "serverRoot", 
    "basePath": "/tmf-api/resourceOrderingManagement/v2/", 
    "schemes": [
        "https"
    ], 
    "consumes": [
        "application/json"
    ], 
    "produces": [
        "application/json"
    ], 
    "paths": {
        "/resourceOrder": {
            "get": {
                "operationId": "listResourceOrder", 
                "summary": "List or find 'ResourceOrder' objects", 
                "tags": [
                    "resourceOrder"
                ], 
                "parameters": [
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "fields", 
                        "description": "Comma separated properties to display in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "offset", 
                        "description": "Requested index for start of resources to be provided in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "limit", 
                        "description": "Requested number of resources to be provided in response"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ResourceOrder"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "post": {
                "operationId": "createResourceOrder", 
                "summary": "Creates a 'ResourceOrder'", 
                "tags": [
                    "resourceOrder"
                ], 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ResourceOrder_Create"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "resourceOrder", 
                        "description": "The Resource Order to be created"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/ResourceOrder"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/resourceOrder/{id}": {
            "get": {
                "operationId": "retrieveResourceOrder", 
                "summary": "Retrieves a 'ResourceOrder' by Id", 
                "tags": [
                    "resourceOrder"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Resource Order"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ResourceOrder"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "patch": {
                "operationId": "patchResourceOrder", 
                "summary": "Updates partially a 'ResourceOrder' by Id", 
                "tags": [
                    "resourceOrder"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Resource Order"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ResourceOrder_Update"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "resourceOrder", 
                        "description": "The Resource Order to be updated"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Updated", 
                        "schema": {
                            "$ref": "#/definitions/ResourceOrder"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "delete": {
                "operationId": "deleteResourceOrder", 
                "summary": "Deletes a 'ResourceOrder' by Id", 
                "tags": [
                    "resourceOrder"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Resource Order"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/hub": {
            "post": {
                "operationId": "registerListener", 
                "summary": "Register a listener", 
                "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.", 
                "tags": [
                    "events subscription"
                ], 
                "parameters": [
                    {
                        "name": "data", 
                        "schema": {
                            "$ref": "#/definitions/EventSubscriptionInput"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "description": "Data containing the callback endpoint to deliver the information"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Subscribed", 
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/hub/{id}": {
            "delete": {
                "operationId": "unregisterListener", 
                "summary": "Unregister a listener", 
                "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.", 
                "tags": [
                    "events subscription"
                ], 
                "parameters": [
                    {
                        "name": "id", 
                        "type": "string", 
                        "required": true, 
                        "in": "path", 
                        "description": "The id of the registered listener"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }, 
                    "405": {
                        "description": "Method not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "400": {
                        "description": "Bad request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    }, 
    "definitions": {
        "ResourceOrder": {
            "type": "object", 
            "description": "A Resource Order is a request to provision a set of Resources (logical and physical) triggered by the request to provision a Service through a Service Order", 
            "properties": {
                "@baseType": {
                    "type": "string", 
                    "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
                }, 
                "@type": {
                    "type": "string", 
                    "description": "Generic attribute containing the name of the resource class type"
                }, 
                "category": {
                    "type": "string", 
                    "description": "Used to categorize the order from a business perspective that can be useful for the OM system."
                }, 
                "completionDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date when the order was completed"
                }, 
                "corelationId": {
                    "type": "string", 
                    "description": "ID given by the consumer and only understandable by him (to facilitate his searches afterwards)"
                }, 
                "description": {
                    "type": "string", 
                    "description": "free-text description of the Resource Order"
                }, 
                "href": {
                    "type": "string", 
                    "description": "Hyperlink to access the order"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Identifier of an instance of the Resource Order. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                }, 
                "name": {
                    "type": "string", 
                    "description": "A string used to give a name to the Resource Order"
                }, 
                "orderDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date when the order was created"
                }, 
                "priority": {
                    "$ref": "#/definitions/int", 
                    "description": "A way that can be used by consumers to prioritize orders in OM system (from 0 to 4 : 0 is the highest priority, and 4 the lowest)"
                }, 
                "requestedCompletionDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Requested delivery date from the requestor perspective"
                }, 
                "requestedStartDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Order start date wished by the requestor"
                }, 
                "state": {
                    "type": "string", 
                    "description": "The life cycle state of the resource."
                }, 
                "type": {
                    "type": "string", 
                    "description": "Name of the Resource Order type"
                }, 
                "orderRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/ResourceOrderRelationship"
                    }
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "note": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Note"
                    }
                }
            }
        }, 
        "ResourceOrder_Create": {
            "type": "object", 
            "description": "A Resource Order is a request to provision a set of Resources (logical and physical) triggered by the request to provision a Service through a Service Order\nSkipped properties: id,href", 
            "properties": {
                "@baseType": {
                    "type": "string", 
                    "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
                }, 
                "@type": {
                    "type": "string", 
                    "description": "Generic attribute containing the name of the resource class type"
                }, 
                "category": {
                    "type": "string", 
                    "description": "Used to categorize the order from a business perspective that can be useful for the OM system."
                }, 
                "completionDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date when the order was completed"
                }, 
                "corelationId": {
                    "type": "string", 
                    "description": "ID given by the consumer and only understandable by him (to facilitate his searches afterwards)"
                }, 
                "description": {
                    "type": "string", 
                    "description": "free-text description of the Resource Order"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A string used to give a name to the Resource Order"
                }, 
                "orderDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date when the order was created"
                }, 
                "priority": {
                    "$ref": "#/definitions/int", 
                    "description": "A way that can be used by consumers to prioritize orders in OM system (from 0 to 4 : 0 is the highest priority, and 4 the lowest)"
                }, 
                "requestedCompletionDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Requested delivery date from the requestor perspective"
                }, 
                "requestedStartDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Order start date wished by the requestor"
                }, 
                "state": {
                    "type": "string", 
                    "description": "The life cycle state of the resource."
                }, 
                "type": {
                    "type": "string", 
                    "description": "Name of the Resource Order type"
                }, 
                "orderRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/ResourceOrderRelationship"
                    }
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "note": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Note"
                    }
                }
            }
        }, 
        "ResourceOrder_Update": {
            "type": "object", 
            "description": "A Resource Order is a request to provision a set of Resources (logical and physical) triggered by the request to provision a Service through a Service Order\nSkipped properties: id,href,id,href,corelationId,orderDate,completionDate", 
            "properties": {
                "@baseType": {
                    "type": "string", 
                    "description": "Generic attribute indicating the base class type of the extension class of the current object. Useful only when the class type of the current  object is unknown to the implementation."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "Generic attribute containing the link to the schema that defines the structure of the class type of the current object."
                }, 
                "@type": {
                    "type": "string", 
                    "description": "Generic attribute containing the name of the resource class type"
                }, 
                "category": {
                    "type": "string", 
                    "description": "Used to categorize the order from a business perspective that can be useful for the OM system."
                }, 
                "description": {
                    "type": "string", 
                    "description": "free-text description of the Resource Order"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A string used to give a name to the Resource Order"
                }, 
                "priority": {
                    "$ref": "#/definitions/int", 
                    "description": "A way that can be used by consumers to prioritize orders in OM system (from 0 to 4 : 0 is the highest priority, and 4 the lowest)"
                }, 
                "requestedCompletionDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Requested delivery date from the requestor perspective"
                }, 
                "requestedStartDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Order start date wished by the requestor"
                }, 
                "state": {
                    "type": "string", 
                    "description": "The life cycle state of the resource."
                }, 
                "type": {
                    "type": "string", 
                    "description": "Name of the Resource Order type"
                }, 
                "orderRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/ResourceOrderRelationship"
                    }
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "note": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Note"
                    }
                }
            }
        }, 
        "ResourceOrderRelationship": {
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": "The type of related order item, can be:\n<ul>\n <li><ul>\n <li>\"dependency\" if the order item needs to be \"not started\" until another order item is complete </li>\n <li>\"cross-reference\" to keep track of the source order (service order)</li>\n</ul>\n</li>\n</ul>\n<ul>\n <li><ul>\n <li>\n</li>\n</ul>\n</li>\n</ul>"
                }, 
                "resourceOrder": {
                    "$ref": "#/definitions/ResourceOrderRef"
                }, 
                "serviceOrder": {
                    "$ref": "#/definitions/ServiceOrderRef"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "RelatedPartyRef": {
            "type": "object", 
            "description": "RelatedParty reference. A related party defines party or party role linked to a specific entity.", 
            "required": [
                "id OR href OR name"
            ], 
            "properties": {
                "@referredType": {
                    "type": "string", 
                    "description": "Generic attribute indicating the name of the class type of the referred resource entity."
                }, 
                "href": {
                    "type": "string", 
                    "description": "Reference of the related party, could be a party reference or a party role reference"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of a related party"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the related party"
                }, 
                "role": {
                    "type": "string", 
                    "description": "Role of the related party."
                }
            }
        }, 
        "Note": {
            "type": "object", 
            "description": "Extra information about a given entity", 
            "required": [
                "text"
            ], 
            "properties": {
                "author": {
                    "type": "string", 
                    "description": "Author of the note"
                }, 
                "date": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date of the note"
                }, 
                "text": {
                    "type": "string", 
                    "description": "Text of the note"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }
            }
        }, 
        "ResourceOrderRef": {
            "type": "object", 
            "properties": {
                "@referredType": {
                    "type": "string", 
                    "description": "Generic attribute indicating the name of the class type of the referred resource entity."
                }, 
                "href": {
                    "type": "string", 
                    "description": "Hyperlink to access the related Resource Order"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The unique identifier of the related resource order"
                }
            }
        }, 
        "ServiceOrderRef": {
            "type": "object", 
            "description": "Service Order reference. Useful to understand the which was the Service order trough which the service was instantiated in the service inventory", 
            "properties": {
                "@referredType": {
                    "type": "string", 
                    "description": "Generic attribute indicating the name of the class type of the referred resource entity."
                }, 
                "href": {
                    "type": "string", 
                    "description": "Reference of the Service Order"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the Service Order"
                }, 
                "serviceOrderItemId": {
                    "type": "string"
                }
            }
        }, 
        "EventSubscription": {
            "required": [
                "id", 
                "callback"
            ], 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "Id of the listener"
                }, 
                "callback": {
                    "type": "string", 
                    "description": "The callback being registered."
                }, 
                "query": {
                    "type": "string", 
                    "description": "additional data to be passed"
                }
            }
        }, 
        "EventSubscriptionInput": {
            "required": [
                "callback"
            ], 
            "properties": {
                "callback": {
                    "type": "string", 
                    "description": "The callback being registered."
                }, 
                "query": {
                    "type": "string", 
                    "description": "additional data to be passed"
                }
            }
        }, 
        "Error": {
            "required": [
                "code", 
                "reason"
            ], 
            "properties": {
                "code": {
                    "type": "integer", 
                    "description": "Application related code."
                }, 
                "reason": {
                    "type": "integer", 
                    "description": "Text that explains the reason for error."
                }, 
                "message": {
                    "type": "string", 
                    "description": "(optional) Text that provide more details and corrective actions related to the error."
                }, 
                "status": {
                    "type": "integer", 
                    "description": "(optional) http error code extension like 400-2"
                }, 
                "referenceError": {
                    "type": "string", 
                    "description": "(optional) A URL to online documentation that provides more information about the error."
                }, 
                "@type": {
                    "type": "string", 
                    "description": "(optional) The class type of a REST resource."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "(optional) A link to the schema describing a REST resource."
                }
            }
        }
    }
}