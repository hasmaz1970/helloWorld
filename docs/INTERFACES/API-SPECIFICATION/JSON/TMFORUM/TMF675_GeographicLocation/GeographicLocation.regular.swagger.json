
{
  "swagger": "2.0",
  "info": {
    "description": "## TMF API Reference : TMF 675 - Geographic Location\n### Release : 17.5 - January 2018\n\nThe geographic location API provides a standardized client interface to a location management system. A Geographic Location is a point, a surface or a volume defined by geographic point(s). These points should be associated with an accuracy and a spatial reference.\n\n### Resources\n- GeographicLocation\n- RetrieveGeographicLocation\n- RetrieveLocationRelation\n- Hub\n\n### Operations\nGeographic Location API performs the following operations :\n- Retrieve a geographic location or a collection of geographic locations\n- Retrieve a retrieve geographic location or a collection of retrieve geographic locations\n- Create a retrieve geographic location\n- Retrieve a retrieve location relation or a collection of retrieve location relations\n- Create a retrieve location relation\n- Notify events on these resources",
    "version": "1.0.0",
    "title": "API GeographicLocation"
  },
  
  "host": "serverRoot",
  "basePath":	"/tmf-api/geographicLocation/v1/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json;charset=utf-8"
  ],
  "produces": [
    "application/json;charset=utf-8"
  ],
  "tags": [
  
    {
      "name": "GeographicLocation",
      "description": ""
    },
    {
      "name": "RetrieveGeographicLocation",
      "description": ""
    },
    {
      "name": "RetrieveLocationRelation",
      "description": ""
    },
    {
      "name": "Hub",
      "description": ""
    }
  ],
  "paths": {
      "/geographicLocation": {
      "get": {
        "tags": [
           "GeographicLocation"
        ],        
        "operationId": "geographicLocationFind",
        "summary": "List geographic locations",
        "description": "This operation list geographic location entities.\nAttribute selection is enabled for all first level attributes. \nFiltering may be available depending on the compliance level supported by an implementation.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Attribute selection",
            
              "type": "string"
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Requested index to start of resources to be provided in response requested by client",
            
              "type": "integer",
              "format": "int32"
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Requested number of resources to be provided in response requested by client",
            
              "type": "integer",
              "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
              "$ref": "#/definitions/GeographicLocation"
              }
            },
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items matching criteria",
              "type": "integer",
              "format": "int32"
              },
              "X-Result-Count": {
                "description": "Actual number of items returned in the response body",
              "type": "integer",
              "format": "int32"
              }
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      }
    },
      "/geographicLocation/{geographicLocationId}": {
      "get": {
        "tags": [
           "GeographicLocation"
        ],        
        "operationId": "geographicLocationGet",
        "summary": "Retrieve a geographic location",
        "description": "This operation retrieves a geographic location entity.\nAttribute selection is enabled for all first level attributes.\nFiltering on sub-resources may be available depending on the compliance level supported by an implementation.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "geographicLocationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique identifier of the geographic location"
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Attribute selection",
            
              "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GeographicLocation"
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      }
    },
      "/retrieveGeographicLocation": {
      "post": {
        "tags": [
           "RetrieveGeographicLocation"
        ],        
        "operationId": "retrieveGeographicLocationCreate",
        "summary": "Create a retrieve geographic location entity",
        "description": "This operation creates a retrieve geographic location entity.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "RetrieveGeographicLocation",
            "required": true,
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/POST_REQ_RetrieveGeographicLocation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveGeographicLocation"
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      },
      "get": {
        "tags": [
           "RetrieveGeographicLocation"
        ],        
        "operationId": "retrieveGeographicLocationFind",
        "summary": "List retrieve geographic location entities",
        "description": "This operation list retrieveGeographicLocation entities.\nAttribute selection is enabled for all first level attributes.\nFiltering may be available depending on the compliance level supported by an implementation.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Attribute selection",
            
              "type": "string"
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Requested index to start of resources to be provided in response requested by client",
            
              "type": "integer",
              "format": "int32"
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Requested number of resources to be provided in response requested by client",
            
              "type": "integer",
              "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
              "$ref": "#/definitions/RetrieveGeographicLocation"
              }
            },
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items matching criteria",
              "type": "integer",
              "format": "int32"
              },
              "X-Result-Count": {
                "description": "Actual number of items returned in the response body",
              "type": "integer",
              "format": "int32"
              }
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      }
    },
      "/retrieveGeographicLocation/{retrieveGeographicLocationId}": {
      "get": {
        "tags": [
           "RetrieveGeographicLocation"
        ],        
        "operationId": "retrieveGeographicLocationGet",
        "summary": "Retrieve a retrieve geographic location entity",
        "description": "This operation retrieves a retrieve geographic location entity.\nAttribute selection is enabled for all first level attributes.\nFiltering on sub-resources may be available depending on the compliance level supported by an implementation.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "retrieveGeographicLocationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique identifier of the retrieve geographic location task"
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Attribute selection",
            
              "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveGeographicLocation"
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      }
    },
      "/retrieveLocationRelation": {
      "post": {
        "tags": [
           "RetrieveLocationRelation"
        ],        
        "operationId": "retrieveLocationRelationCreate",
        "summary": "Create a retrieve location relation entity",
        "description": "This operation creates a retrieve location relation entity\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "RetrieveLocationRelation",
            "required": true,
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/POST_REQ_RetrieveLocationRelation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveLocationRelation"
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      },
      "get": {
        "tags": [
           "RetrieveLocationRelation"
        ],        
        "operationId": "retrieveLocationRelationFind",
        "summary": "List retrieve location relation entities",
        "description": "This operation list retrieve location relation entities.\nAttribute selection is enabled for all first level attributes.\nFiltering may be available depending on the compliance level supported by an implementation.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Attribute selection",
            
              "type": "string"
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Requested index to start of resources to be provided in response requested by client",
            
              "type": "integer",
              "format": "int32"
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Requested number of resources to be provided in response requested by client",
            
              "type": "integer",
              "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
              "$ref": "#/definitions/RetrieveLocationRelation"
              }
            },
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items matching criteria",
              "type": "integer",
              "format": "int32"
              },
              "X-Result-Count": {
                "description": "Actual number of items returned in the response body",
              "type": "integer",
              "format": "int32"
              }
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      }
    },
      "/retrieveLocationRelation/{retrieveLocationRelationId}": {
      "get": {
        "tags": [
           "RetrieveLocationRelation"
        ],        
        "operationId": "retrieveLocationRelationGet",
        "summary": "Retrieve a retrieve location relation entity",
        "description": "This operation retrieves a retrieve location relation entity.\nAttribute selection is enabled for all first level attributes.\nFiltering on sub-resources may be available depending on the compliance level supported by an implementation.\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "retrieveLocationRelationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique identifier of the retrieve location relation task"
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Attribute selection",
            
              "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveLocationRelation"
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      }
    },
      "/hub": {
      "post": {
        "tags": [
           "Hub"
        ],        
        "operationId": "hubCreate",
        "summary": "Register a listener",
        "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "data",
            "required": true,
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/HubInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Hub"
            }

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      }
    },
      "/hub/{hubId}": {
      "delete": {
        "tags": [
           "Hub"
        ],        
        "operationId": "hubDelete",
        "summary": "Unregister a listener",
        "description": "Clears the communication endpoint address that was set by creating the Hub\n\nSpecific business errors for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n",
        "deprecated": false,
        
        "parameters": [
          
          {
            "name": "hubId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique identifier of the Hub"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"

          },
          "400": {
            
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "404": {
            
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "405": {
            
            "description": "Method Not Allowed\n\nList of supported error codes:\n- 61: Method not allowed",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "422": {
            
            "description": "Unprocessable entity\n\nFunctional error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          },
          "500": {
            
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error",
            "schema": {
            
              "$ref": "#/definitions/ErrorRepresentation"
            }
          }
        }
      }
    }
  },
"definitions": {
  

    "ErrorRepresentation": {
      "description": "Standard tmf error representation",

      
      "required": [
          
            "code",
            "reason"
      ],
      "type": "object",
      "properties": {
        "code": {
          "description": "Application related code (as defined in the API or from a common list)",
              "type": "integer",
              "format": "int32"
        },
        "reason": {
          "description": "Text that explains the reason for error. This can be shown to a client user.",
              "type": "string"
        },
        "message": {
          "description": "Text that provides more details and corrective actions related to the error. This can be shown to a client user.",
              "type": "string"
        },
        "status": {
          "description": "http error code extension like 400-2",
              "type": "string"
        },
        "referenceError": {
          "description": "url ponting to documentation describing the error",
              "type": "string"
        },
        "@type": {
          "description": "Type of the REST resource",
              "type": "string"
        },
        "@schemaLocation": {
          "description": "Link to the schema describing the REST resource",
              "type": "string"
        }
      }
      
    },

    "GeographicPoint": {
      "description": "A GeoPoint defines a geographic point through coordinates",

      
      "required": [
          
            "x",
            "y"
      ],
      "type": "object",
      "properties": {
        "x": {
          "description": "x coordinate (usually latitude)",
              "type": "string"
        },
        "y": {
          "description": "y coordinate (usually longitude)",
              "type": "string"
        },
        "z": {
          "description": "z coordinate (usually elevation)",
              "type": "string"
        }
      }
      
    },

    "GeographicLocation": {
      "description": "Structured textual way of describing a geographic location. A geographic location allows describing through coordinate(s), a point, a line or a space.",

      
      "required": [
          
            "name",
            "geometryType",
            "spatialRef",
            "accuracy",
            "geometry"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the geographic location",
              "type": "string"
        },
        "href": {
          "description": "An URI used to access to the geographic location resource",
              "type": "string"
        },
        "name": {
          "description": "Name of the geo location",
              "type": "string"
        },
        "geometryType": {
          "description": "Type of the geographic location - one of: point, line, graph, ring polygon",
              "type": "string"
        },
        "spatialRef": {
          "description": "Geocoding referential",
              "type": "string"
        },
        "accuracy": {
          "description": "Accuracy of the coordinate specified",
              "type": "string"
        },
        "geometry": {
          
          "type": "array",
          "items": {
              "$ref": "#/definitions/GeographicPoint"
          }
        },
        "@baseType": {
          "description": "Indicates the base type of the resource. Here can be 'geographicLocation'.",
              "type": "string"
        },
        "@type": {
          "description": "Indicates the type of the resource",
              "type": "string"
        },
        "@schemaLocation": {
          "description": "A link to the schema describing this REST Resource",
              "type": "string"
        }
      }
      
    },

    "POST_REQ_GeographicLocation": {
      "description": "",

      
      "required": [
          
            "name",
            "geometryType",
            "spatialRef",
            "accuracy",
            "geometry"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the geo location",
              "type": "string"
        },
        "geometryType": {
          "description": "Type of the geographic location - one of: point, line, graph, ring polygon",
              "type": "string"
        },
        "spatialRef": {
          "description": "",
              "type": "string"
        },
        "accuracy": {
          "description": "",
              "type": "string"
        },
        "@baseType": {
          "description": "Indicates the base type of the resource. Here can be 'geographicLocation'.",
              "type": "string"
        },
        "@type": {
          "description": "Indicates the type of the resource",
              "type": "string"
        },
        "@schemaLocation": {
          "description": "A link to the schema describing this REST Resource",
              "type": "string"
        },
        "geometry": {
          
          "type": "array",
          "items": {
              "$ref": "#/definitions/GeographicPoint"
          }
        }
      }
      
    },

    "PATCH_REQ_GeographicLocation": {
      "description": "",

      
      "required": [
          
            "name",
            "geometryType",
            "geometry"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the geographic location",
              "type": "string"
        },
        "name": {
          "description": "Name of the geo location",
              "type": "string"
        },
        "geometryType": {
          "description": "Type of the geographic location - one of: point, line, graph, ring polygon",
              "type": "string"
        },
        "@baseType": {
          "description": "Indicates the base type of the resource. Here can be 'geographicLocation'.",
              "type": "string"
        },
        "@type": {
          "description": "Indicates the type of the resource",
              "type": "string"
        },
        "@schemaLocation": {
          "description": "A link to the schema describing this REST Resource",
              "type": "string"
        },
        "geometry": {
          
          "type": "array",
          "items": {
              "$ref": "#/definitions/GeographicPoint"
          }
        }
      }
      
    },

    "RetrieveGeographicLocation": {
      "description": "This resource is used to manage the request and response to retrieve a thing (any object)",

      
      "required": [
          
            "thing"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the retrieve task",
              "type": "string"
        },
        "href": {
          "description": "An URI used to access to the task resource",
              "type": "string"
        },
        "status": {
          "description": "Status of the task (inProgress, terminatedWithErrror, done)",
              "type": "string"
        },
        "requestedAccuracy": {
          "description": "Requested accuracy of the retrieval",
              "type": "number",
              "format": "float"
        },
        "time": {
          "description": "Timestamp of end of task execution",
              "type": "string",
              "format": "date-time"
        },
        "thing": {
          
              "$ref": "#/definitions/Object"
        },
        "geographicLocation": {
          
              "$ref": "#/definitions/GeographicLocationReferred"
        }
      }
      
    },

    "Object": {
      "description": "",

      
      "required": [
          
            "type",
            "uri"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "",
              "type": "string"
        },
        "uri": {
          "description": "",
              "type": "string"
        }
      }
      
    },

    "GeographicLocationReferred": {
      "description": "",

      
      "required": [
          
            "name",
            "geometryType",
            "spatialRef",
            "accuracy",
            "geometry"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the geographic location",
              "type": "string"
        },
        "href": {
          "description": "An URI used to access to the geographic location resource",
              "type": "string"
        },
        "name": {
          "description": "Name of the geo location",
              "type": "string"
        },
        "geometryType": {
          "description": "Type of the geographic location - one of: point, line, graph, ring polygon",
              "type": "string"
        },
        "spatialRef": {
          "description": "Geocoding referential",
              "type": "string"
        },
        "accuracy": {
          "description": "Accuracy of the coordinate specified",
              "type": "string"
        },
        "@type": {
          "description": "Indicates the type of the resource",
              "type": "string"
        },
        "geometry": {
          
          "type": "array",
          "items": {
              "$ref": "#/definitions/GeographicPointReferred"
          }
        }
      }
      
    },

    "POST_REQ_RetrieveGeographicLocation": {
      "description": "",

      
      "required": [
          
            "thing"
      ],
      "type": "object",
      "properties": {
        "requestedAccuracy": {
          "description": "",
              "type": "number",
              "format": "float"
        },
        "thing": {
          
              "$ref": "#/definitions/Object"
        }
      }
      
    },

    "GeographicLocationRef": {
      "description": "",

      
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the geographic location",
              "type": "string"
        },
        "href": {
          "description": "An URI used to access to the geographic location resource",
              "type": "string"
        }
      }
      
    },

    "RetrieveLocationRelation": {
      "description": "This resource is used to manage the request and response to retrieve the relation between two geographic locations",

      
      "required": [
          
            "distance",
            "time",
            "geographicLocation",
            "intersection"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the retrieve task",
              "type": "string"
        },
        "href": {
          "description": "An URI used to access to the task resource",
              "type": "string"
        },
        "status": {
          "description": "Status of the task (inProgress, terminatedWithErrror, done)",
              "type": "string"
        },
        "distance": {
          "description": "Calculated distance between location A and location B",
              "type": "string"
        },
        "time": {
          "description": "Timestamp of end of task execution",
              "type": "string",
              "format": "date-time"
        },
        "geographicLocation": {
          
          "type": "array",
          "items": {
              "$ref": "#/definitions/GeographicLocationRef"
          },
          "minItems": 2,
          "maxItems": 2
        },
        "intersection": {
          
          "type": "array",
          "items": {
              "$ref": "#/definitions/GeographicLocationReferred"
          }
        }
      }
      
    },

    "POST_REQ_RetrieveLocationRelation": {
      "description": "",

      
      "required": [
          
            "geographicLocation"
      ],
      "type": "object",
      "properties": {
        "geographicLocation": {
          
          "type": "array",
          "items": {
              "$ref": "#/definitions/GeographicLocationRef"
          },
          "minItems": 2,
          "maxItems": 2
        }
      }
      
    },

    "GeographicPointReferred": {
      "description": "",

      
      "required": [
          
            "x",
            "y"
      ],
      "type": "object",
      "properties": {
        "x": {
          "description": "x coordinate (usually latitude)",
              "type": "string"
        },
        "y": {
          "description": "y coordinate (usually longitude)",
              "type": "string"
        },
        "z": {
          "description": "z coordinate (usually elevation)",
              "type": "string"
        }
      }
      
    },

    "Hub": {
      "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics",

      
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the Hub",
              "type": "string"
        },
        "callback": {
          "description": "The calback being registered",
              "type": "string"
        },
        "query": {
          "description": "Additional data to be passed",
              "type": "string"
        }
      }
      
    },

    "HubInput": {
      "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics",

      
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the Hub",
              "type": "string"
        },
        "callback": {
          "description": "The calback being registered",
              "type": "string"
        },
        "query": {
          "description": "Additional data to be passed",
              "type": "string"
        }
      }
      
    }
  }
}
	