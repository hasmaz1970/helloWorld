{
    "swagger": "2.0", 
    "info": {
        "title": "Agreement Management", 
        "description": "This is Swagger UI environment generated for the TMF Agreement Management specification", 
        "version": "2.0"
    }, 
    "host": "serverRoot", 
    "basePath": "/tmf-api/agreementManagement/v2/", 
    "schemes": [
        "https"
    ], 
    "consumes": [
        "application/json"
    ], 
    "produces": [
        "application/json"
    ], 
    "paths": {
        "/agreement": {
            "get": {
                "operationId": "listAgreement", 
                "summary": "List or find 'Agreement' objects", 
                "tags": [
                    "agreement"
                ], 
                "parameters": [
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "fields", 
                        "description": "Comma separated properties to display in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "offset", 
                        "description": "Requested index for start of resources to be provided in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "limit", 
                        "description": "Requested number of resources to be provided in response"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Agreement"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "post": {
                "operationId": "createAgreement", 
                "summary": "Creates a 'Agreement'", 
                "tags": [
                    "agreement"
                ], 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Agreement_Create"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "agreement", 
                        "description": "The Agreement to be created"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/Agreement"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/agreement/{id}": {
            "get": {
                "operationId": "retrieveAgreement", 
                "summary": "Retrieves a 'Agreement' by Id", 
                "tags": [
                    "agreement"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Agreement"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Agreement"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "patch": {
                "operationId": "patchAgreement", 
                "summary": "Updates partially a 'Agreement' by Id", 
                "tags": [
                    "agreement"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Agreement"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/Agreement_Update"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "agreement", 
                        "description": "The Agreement to be updated"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Updated", 
                        "schema": {
                            "$ref": "#/definitions/Agreement"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "delete": {
                "operationId": "deleteAgreement", 
                "summary": "Deletes a 'Agreement' by Id", 
                "tags": [
                    "agreement"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Agreement"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/agreementSpecification": {
            "get": {
                "operationId": "listAgreementSpecification", 
                "summary": "List or find 'AgreementSpecification' objects", 
                "tags": [
                    "agreementSpecification"
                ], 
                "parameters": [
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "fields", 
                        "description": "Comma separated properties to display in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "offset", 
                        "description": "Requested index for start of resources to be provided in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "limit", 
                        "description": "Requested number of resources to be provided in response"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AgreementSpecification"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "post": {
                "operationId": "createAgreementSpecification", 
                "summary": "Creates a 'AgreementSpecification'", 
                "tags": [
                    "agreementSpecification"
                ], 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/AgreementSpecification_Create"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "agreementSpecification", 
                        "description": "The Agreement Specification to be created"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/AgreementSpecification"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/agreementSpecification/{id}": {
            "get": {
                "operationId": "retrieveAgreementSpecification", 
                "summary": "Retrieves a 'AgreementSpecification' by Id", 
                "tags": [
                    "agreementSpecification"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Agreement Specification"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AgreementSpecification"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "patch": {
                "operationId": "patchAgreementSpecification", 
                "summary": "Updates partially a 'AgreementSpecification' by Id", 
                "tags": [
                    "agreementSpecification"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Agreement Specification"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/AgreementSpecification_Update"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "agreementSpecification", 
                        "description": "The Agreement Specification to be updated"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Updated", 
                        "schema": {
                            "$ref": "#/definitions/AgreementSpecification"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "delete": {
                "operationId": "deleteAgreementSpecification", 
                "summary": "Deletes a 'AgreementSpecification' by Id", 
                "tags": [
                    "agreementSpecification"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Agreement Specification"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/hub": {
            "post": {
                "operationId": "registerListener", 
                "summary": "Register a listener", 
                "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.", 
                "tags": [
                    "events subscription"
                ], 
                "parameters": [
                    {
                        "name": "data", 
                        "schema": {
                            "$ref": "#/definitions/EventSubscriptionInput"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "description": "Data containing the callback endpoint to deliver the information"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Subscribed", 
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    }, 
                    "405": {
                        "description": "Method Not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "409": {
                        "description": "Conflict", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/hub/{id}": {
            "delete": {
                "operationId": "unregisterListener", 
                "summary": "Unregister a listener", 
                "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.", 
                "tags": [
                    "events subscription"
                ], 
                "parameters": [
                    {
                        "name": "id", 
                        "type": "string", 
                        "required": true, 
                        "in": "path", 
                        "description": "The id of the registered listener"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }, 
                    "405": {
                        "description": "Method not allowed", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "403": {
                        "description": "Forbidden", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "401": {
                        "description": "Unauthorized", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "400": {
                        "description": "Bad request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    }, 
    "definitions": {
        "Agreement": {
            "type": "object", 
            "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.", 
            "required": [
                "name"
            ], 
            "properties": {
                "agreementPeriod": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "The time period during which the Agreement is in effect."
                }, 
                "completionDate": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "Date at which the agreement is completed"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Narrative that explains the agreement and details about the it , such as why the agreement is taking place."
                }, 
                "documentNumber": {
                    "type": "integer", 
                    "description": "A reference number assigned to an Agreement that follows a prescribed numbering system."
                }, 
                "href": {
                    "type": "string", 
                    "description": "Unique url identifying the agreement as a resource"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier for the agreement"
                }, 
                "initialDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date at which the agreement was initialized"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A human-readable name for the agreement"
                }, 
                "statementOfIntent": {
                    "type": "string", 
                    "description": "An overview and goals of the Agreement."
                }, 
                "status": {
                    "type": "string", 
                    "description": "The current status of the agreement. Typical values are: in process, approved and rejected."
                }, 
                "type": {
                    "type": "string", 
                    "description": "The type of the agreement. For example \"commercial\"."
                }, 
                "version": {
                    "type": "string", 
                    "description": "A string identifying the version of the agreement."
                }, 
                "agreementSpecification": {
                    "$ref": "#/definitions/AgreementSpecificationRef"
                }, 
                "agreementItem": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementItem"
                    }
                }, 
                "engagedPartyRole": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/PartyRoleRef"
                    }
                }, 
                "agreementAuthorization": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementAuthorization"
                    }
                }, 
                "characteristic": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                }, 
                "associatedAgreement": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementRef"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "Agreement_Create": {
            "type": "object", 
            "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.\nSkipped properties: id,href", 
            "required": [
                "name", 
                "type", 
                "engagedPartyRole", 
                "agreementItem"
            ], 
            "properties": {
                "agreementPeriod": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "The time period during which the Agreement is in effect."
                }, 
                "completionDate": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "Date at which the agreement is completed"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Narrative that explains the agreement and details about the it , such as why the agreement is taking place."
                }, 
                "documentNumber": {
                    "type": "integer", 
                    "description": "A reference number assigned to an Agreement that follows a prescribed numbering system."
                }, 
                "initialDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date at which the agreement was initialized"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A human-readable name for the agreement"
                }, 
                "statementOfIntent": {
                    "type": "string", 
                    "description": "An overview and goals of the Agreement."
                }, 
                "status": {
                    "type": "string", 
                    "description": "The current status of the agreement. Typical values are: in process, approved and rejected."
                }, 
                "type": {
                    "type": "string", 
                    "description": "The type of the agreement. For example \"commercial\"."
                }, 
                "version": {
                    "type": "string", 
                    "description": "A string identifying the version of the agreement."
                }, 
                "agreementSpecification": {
                    "$ref": "#/definitions/AgreementSpecificationRef"
                }, 
                "agreementItem": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementItem"
                    }
                }, 
                "engagedPartyRole": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/PartyRoleRef"
                    }
                }, 
                "agreementAuthorization": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementAuthorization"
                    }
                }, 
                "characteristic": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                }, 
                "associatedAgreement": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementRef"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "Agreement_Update": {
            "type": "object", 
            "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.\nSkipped properties: id,href,id,href,completionDate", 
            "properties": {
                "agreementPeriod": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "The time period during which the Agreement is in effect."
                }, 
                "description": {
                    "type": "string", 
                    "description": "Narrative that explains the agreement and details about the it , such as why the agreement is taking place."
                }, 
                "documentNumber": {
                    "type": "integer", 
                    "description": "A reference number assigned to an Agreement that follows a prescribed numbering system."
                }, 
                "initialDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date at which the agreement was initialized"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A human-readable name for the agreement"
                }, 
                "statementOfIntent": {
                    "type": "string", 
                    "description": "An overview and goals of the Agreement."
                }, 
                "status": {
                    "type": "string", 
                    "description": "The current status of the agreement. Typical values are: in process, approved and rejected."
                }, 
                "type": {
                    "type": "string", 
                    "description": "The type of the agreement. For example \"commercial\"."
                }, 
                "version": {
                    "type": "string", 
                    "description": "A string identifying the version of the agreement."
                }, 
                "agreementSpecification": {
                    "$ref": "#/definitions/AgreementSpecificationRef"
                }, 
                "agreementItem": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementItem"
                    }
                }, 
                "engagedPartyRole": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/PartyRoleRef"
                    }
                }, 
                "agreementAuthorization": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementAuthorization"
                    }
                }, 
                "characteristic": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                }, 
                "associatedAgreement": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementRef"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "AgreementSpecification": {
            "type": "object", 
            "description": "A template of an agreement that can be used when establishing partnerships.", 
            "required": [
                "name"
            ], 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "A narrative that explains in detail what the agreement specification is about."
                }, 
                "href": {
                    "type": "string", 
                    "description": "Reference of the agreement specification"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the agreement specification"
                }, 
                "isBundle": {
                    "type": "boolean", 
                    "description": "Indicates that this agreement specification is a grouping of other agreement specifications. The list of bundled agreement specifications is provided via the specificationRelationship property."
                }, 
                "lastUpdate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date and time of the last update"
                }, 
                "lifecycleStatus": {
                    "type": "string", 
                    "description": "Indicates the current lifecycle status"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the agreement specification"
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "The period for which the agreement specification is valid"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Agreement specification version"
                }, 
                "serviceCategory": {
                    "$ref": "#/definitions/CategoryRef"
                }, 
                "specCharacteristic": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementSpecCharacteristic"
                    }
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "attachment": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementAttachment"
                    }
                }, 
                "specificationRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementSpecificationRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "AgreementSpecification_Create": {
            "type": "object", 
            "description": "A template of an agreement that can be used when establishing partnerships.\nSkipped properties: id,href", 
            "required": [
                "name", 
                "attachment"
            ], 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "A narrative that explains in detail what the agreement specification is about."
                }, 
                "isBundle": {
                    "type": "boolean", 
                    "description": "Indicates that this agreement specification is a grouping of other agreement specifications. The list of bundled agreement specifications is provided via the specificationRelationship property."
                }, 
                "lastUpdate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date and time of the last update"
                }, 
                "lifecycleStatus": {
                    "type": "string", 
                    "description": "Indicates the current lifecycle status"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the agreement specification"
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "The period for which the agreement specification is valid"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Agreement specification version"
                }, 
                "serviceCategory": {
                    "$ref": "#/definitions/CategoryRef"
                }, 
                "specCharacteristic": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementSpecCharacteristic"
                    }
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "attachment": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementAttachment"
                    }
                }, 
                "specificationRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementSpecificationRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "AgreementSpecification_Update": {
            "type": "object", 
            "description": "A template of an agreement that can be used when establishing partnerships.\nSkipped properties: id,href,id,href", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "A narrative that explains in detail what the agreement specification is about."
                }, 
                "isBundle": {
                    "type": "boolean", 
                    "description": "Indicates that this agreement specification is a grouping of other agreement specifications. The list of bundled agreement specifications is provided via the specificationRelationship property."
                }, 
                "lastUpdate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date and time of the last update"
                }, 
                "lifecycleStatus": {
                    "type": "string", 
                    "description": "Indicates the current lifecycle status"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the agreement specification"
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "The period for which the agreement specification is valid"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Agreement specification version"
                }, 
                "serviceCategory": {
                    "$ref": "#/definitions/CategoryRef"
                }, 
                "specCharacteristic": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementSpecCharacteristic"
                    }
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "attachment": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementAttachment"
                    }
                }, 
                "specificationRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementSpecificationRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "TimePeriod": {
            "type": "object", 
            "description": "A base / value business entity used to represent a period of time between two timepoints.", 
            "properties": {
                "endDateTime": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "An instant of time, ending at the TimePeriod."
                }, 
                "startDateTime": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "An instant of time, starting at the TimePeriod"
                }
            }
        }, 
        "AgreementSpecificationRef": {
            "type": "object", 
            "description": "AgreementSpecification reference. An AgreementSpecification represents a template of an agreement that can be used when establishing partnerships.", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "A narrative that explains in detail what the agreement specification is about."
                }, 
                "href": {
                    "type": "string", 
                    "description": "Reference URL of the agreement specification"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the agreement specification"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the agreement specification"
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "AgreementItem": {
            "type": "object", 
            "description": "A part of the agreement expressed in terms of a product offering and possibly including specific terms and conditions.", 
            "properties": {
                "productOffering": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/ProductOfferingRef"
                    }
                }, 
                "termOrCondition": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementTermOrCondition"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }
            }
        }, 
        "PartyRoleRef": {
            "type": "object", 
            "description": "Party role reference. A party role represents the part played by a party in a given context.", 
            "required": [
                "id", 
                "name"
            ], 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of the product"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the product"
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the referred party role."
                }, 
                "partyId": {
                    "type": "string", 
                    "description": "The identifier of the engaged party that is linked to the PartyRole object."
                }, 
                "partyName": {
                    "type": "string", 
                    "description": "The name of the engaged party that is linked to the PartyRole object."
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "AgreementAuthorization": {
            "type": "object", 
            "description": "A business participant that is responsible for approving the agreement.", 
            "properties": {
                "date": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "The date associated with the authorization state."
                }, 
                "signatureRepresentation": {
                    "type": "string", 
                    "description": "Indication that represents whether the signature is a physical paper signature or a digital signature."
                }, 
                "state": {
                    "type": "string", 
                    "description": "Current status of the authorization, for example in process, approved, rejected."
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }
            }
        }, 
        "Characteristic": {
            "type": "object", 
            "description": "Describes a given characteristic of an object or entity through a name/value pair.", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the characteristic"
                }, 
                "value": {
                    "type": "string", 
                    "description": "Value of the characteristic"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }
            }
        }, 
        "AgreementRef": {
            "type": "object", 
            "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.", 
            "required": [
                "id", 
                "href"
            ], 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of the agreement"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Identifier of the agreement"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the agreement"
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "ProductOfferingRef": {
            "type": "object", 
            "description": "ProductOffering reference. A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of the product offering"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the product offering"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the product offering"
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "AgreementTermOrCondition": {
            "type": "object", 
            "description": "Aspects of the agreement not formally specified elsewhere in the agreement and that cannot be captured elsewhere in a formal notation, or automatically monitored and require a more human level of management.", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "Text that explains the term or condition of the agreement."
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique number assigned for reference."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "The period of time during which the term or condition of the agreement applies."
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }
            }
        }, 
        "CategoryRef": {
            "type": "object", 
            "description": "The category for grouping recommendations", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Hypertext Reference of the category"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of category"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the category."
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "AgreementSpecCharacteristic": {
            "type": "object", 
            "description": "A characteristic quality or distinctive feature of an agreement.", 
            "properties": {
                "configurable": {
                    "type": "boolean", 
                    "description": "If true, the Boolean indicates that the characteristic is configurable"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A narrative that explains in detail what the characteristic is"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the characteristic being specified."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "The period for which the specification characteristic is valid"
                }, 
                "valueType": {
                    "type": "string", 
                    "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                }, 
                "specCharacteristicValue": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementSpecCharacteristicValue"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }
            }
        }, 
        "RelatedPartyRef": {
            "type": "object", 
            "description": "RelatedParty reference. A related party defines party or party role linked to a specific entity.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of the related party, could be a party reference or a party role reference"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of a related party"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the related party"
                }, 
                "role": {
                    "type": "string", 
                    "description": "Role of the related party."
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "AgreementAttachment": {
            "type": "object", 
            "description": "Represents a complementary piece of information to describe the agreement. Could be a document, picture, a video or any kind of multimedia content.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of the attachment"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the attachment"
                }, 
                "type": {
                    "type": "string", 
                    "description": "Attachment type such as video, picture"
                }, 
                "url": {
                    "type": "string", 
                    "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }
            }
        }, 
        "AgreementSpecificationRelationship": {
            "type": "object", 
            "description": "A relationship between agreement specifications. Typical relationships are substitution and dependency.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of an agreement specification."
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the related agreement specification."
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of relationship such as, substitution or dependency."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "The period for which the relationship is valid"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }
            }
        }, 
        "AgreementSpecCharacteristicValue": {
            "type": "object", 
            "description": "A number or text that can be assigned to an agreement specification characteristic.", 
            "properties": {
                "default": {
                    "type": "boolean", 
                    "description": "Indicates if the value is the default value for a characteristic"
                }, 
                "unitOfMeasure": {
                    "type": "string", 
                    "description": "Unit of measure for the characteristic, such as minutes, gigabytes (GB) and so on."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "The period of time for which a value is applicable"
                }, 
                "value": {
                    "type": "string", 
                    "description": "A discrete value that the characteristic can take on"
                }, 
                "valueFrom": {
                    "type": "string", 
                    "description": "The low range value that a characteristic can take on"
                }, 
                "valueTo": {
                    "type": "string", 
                    "description": "The upper range value that a characteristic can take on"
                }, 
                "valueType": {
                    "type": "string", 
                    "description": "A kind of value that the characteristic can take on, such as numeric, text, and so forth"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }
            }
        }, 
        "EventSubscription": {
            "required": [
                "id", 
                "callback"
            ], 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "Id of the listener"
                }, 
                "callback": {
                    "type": "string", 
                    "description": "The callback being registered."
                }, 
                "query": {
                    "type": "string", 
                    "description": "additional data to be passed"
                }
            }
        }, 
        "EventSubscriptionInput": {
            "required": [
                "callback"
            ], 
            "properties": {
                "callback": {
                    "type": "string", 
                    "description": "The callback being registered."
                }, 
                "query": {
                    "type": "string", 
                    "description": "additional data to be passed"
                }
            }
        }, 
        "Error": {
            "required": [
                "code", 
                "reason"
            ], 
            "properties": {
                "code": {
                    "type": "integer", 
                    "description": "Application related code."
                }, 
                "reason": {
                    "type": "integer", 
                    "description": "Text that explains the reason for error."
                }, 
                "message": {
                    "type": "string", 
                    "description": "(optional) Text that provide more details and corrective actions related to the error."
                }, 
                "status": {
                    "type": "integer", 
                    "description": "(optional) http error code extension like 400-2"
                }, 
                "referenceError": {
                    "type": "string", 
                    "description": "(optional) A URL to online documentation that provides more information about the error."
                }, 
                "@type": {
                    "type": "string", 
                    "description": "(optional) The class type of a REST resource."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "(optional) A link to the schema describing a REST resource."
                }
            }
        }
    }
}