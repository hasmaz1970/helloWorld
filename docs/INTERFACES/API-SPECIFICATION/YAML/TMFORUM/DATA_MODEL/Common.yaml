#############################################################################
## 1. OPENAPI
#############################################################################
openapi: 3.0.2

#############################################################################
## 2. INFO
#############################################################################
info:
  version: 1.0.0
  title: TMFORUM Common Schema (Data Type) Definitions for APIs
  contact:
    name: MonetizeHub.IO Project Support
    
  license:
    name: TMFORUM RAND
    url: https://github.com/tmforum-rand/RAND-LICENSE 
  description: |
    <!-- Note that this description is a MARKDOWN Block -->

    **This Open API specification does NOT contain any valid PATHS/OPERATIONS!!!. It ONLY contains COMMON SCHEMA (TYPE) DEFINITIONS referred by other API specifications.**

    Thus, in this context COMMON SCHEMA (TYPE) DEFINITIONS mean shared entity models or baseline objects that can be reused with or without extension.
    
#############################################################################
## 3. SERVERS
#############################################################################
servers:
  - url: https://monetizehub.io/demos/current/apis/private/
    description: MonE Private APIs and Schemas Specification

#############################################################################
## 4. PATHS
#############################################################################
paths:
  /readMe:
    get:
      summary: This is a placeholder nouse operation. (to bypass Swagger UI limitation of a specification with ONLY data models without operation)
      operationId: readMe
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string


#############################################################################
## 5. COMPONENTS
#############################################################################
components:
  schemas:


    NetworkFunction:
      type: "object"
      properties:
        href:
          type: "string"
        id:
          type: "string"


    TimePeriod:
      description: |
        A period of time, either as a deadline (endDateTime only) a startDateTime only, or both"
      type: object
      properties:
        startDateTime:
          description: "Start of the time period, using IETC-RFC-3339 format. If you\
            \ define a start, you must also define an end"
          type: "string"
          format: "date-time"
          example:
          - "1985-04-12T23:20:50.52Z"
          - "2018-09-21T09:13:16-07:00"
        endDateTime:
          description: "End of the time period, using IETC-RFC-3339 format"
          type: "string"
          format: "date-time"
          example:
          - "1985-04-12T23:20:50.52Z"
          - "2018-09-21T09:13:16-07:00"
      allOf:
        - $ref: '#/components/schemas/Entity'


    Money:
      description: "A base / value business entity used to represent money"
      type: "object"
      properties:
        unit:
          type: "string"
          description: "Currency (ISO4217 norm uses 3 letters to define the currency)"
        value:
          type: "number"
          format: "float"
          description: "A positive floating point number"
      allOf:
      - $ref: '#/components/schemas/Entity'


    GeographicSiteRef:
      type: "object"
      properties:
        href:
          type: "integer"
        id:
          type: "integer"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '#/components/schemas/Entity'


    RelatedGeographicAddressRefOrValue:
      description: "#TODO"
      type: "object"
      properties:
        role:
          type: "string"
      required:
      - "role"
      allOf:
      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'


    DocumentRelationship:
      description: "Another document that is related to the current document;"
      type: "object"
      properties:
        relationshipType:
          type: "string"
          description: "The type of relationship"
        documentRef:
          $ref: '#/components/schemas/DocumentRef'
      allOf:
      - $ref: '#/components/schemas/Entity'


    AssociationSpecRef:
      description: "reference to an AssociationSpecification object"
      type: "object"
      properties:
        href:
          type: "string"
          description: "Hyperlink reference to the target AssociationSpecification"
        id:
          type: "string"
          description: "reference id to the target AssociationSpecification"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '#/components/schemas/Entity'


    ExternalReference:
      type: "object"
      description: "External reference of the individual or reference in other system"
      properties:
        externalReferenceType:
          type: "string"
          description: "Type of the external reference"
        name:
          type: "string"
          description: "External reference name"
      allOf:
      - $ref: '#/components/schemas/Entity'


    AlternateGeographicAddress:
      type: "object"
      properties:
        href:
          type: "string"
          description: "An URI used to access to the address resource"
        id:
          type: "string"
          description: "Unique identifier of the address"
        name:
          type: "string"
          description: "A user-friendly name for the place, such as [Paris Store], [London\
            \ Store], [Main Home]"
        role:
          type: "string"
          description: "Role of the place, such as: [home delivery], [shop retrieval])"
        city:
          type: "string"
          description: "City that the address is in"
        country:
          type: "string"
          description: "Country that the address is in"
        locality:
          type: "string"
          description: "An area of defined or undefined boundaries within a local authority\
            \ or other legislatively defined area, usually rural or semi rural in nature.\
            \ [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or\
            \ shire principally of urban character [ANZLICSTREET]"
        postcode:
          type: "string"
          description: "descriptor for a postal delivery area, used to speed and simplify\
            \ the delivery of mail (also know as zipcode)"
        stateOrProvince:
          type: "string"
          description: "the State or Province that the address is in"
        streetName:
          type: "string"
          description: "Name of the street or other street type"
        streetNr:
          type: "string"
          description: "Number identifying a specific property on a public street. It\
            \ may be combined with streetNrLast for ranged addresses"
        streetNrLast:
          type: "string"
          description: "Last number in a range of street numbers allocated to a property"
        streetNrLastSuffix:
          type: "string"
          description: "Last street number suffix for a ranged address"
        streetNrSuffix:
          type: "string"
          description: "the first street number suffix"
        streetSuffix:
          type: "string"
          description: "A modifier denoting a relative direction"
        streetType:
          type: "string"
          description: "alley, avenue, boulevard, brae, crescent, drive, highway, lane,\
            \ terrace, parade, place, tarn, way, wharf "
        geographicLocation:
          $ref: '#/components/schemas/GeographicLocation'
        geographicSubAddress:
          type: "array"
          items:
            $ref: '#/components/schemas/GeographicSubAddress'
      allOf:
      - $ref: '#/components/schemas/Entity'


    AssociationRole:
      description: "This embedded object represents the role and type of each entity\
        \ involved in a relationship."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Hyperlink reference to the endpoint plays this association role"
        id:
          type: "string"
          description: "The identifier of the endpoint plays this role"
        isSource:
          type: "boolean"
          description: "A flag indicating if the participant involved in a uni-directional\
            \ relationship is the source or not. this flag is true If the association\
            \ is bi-directional (both end points are navigable)"
        name:
          type: "string"
          description: "Name of the endpoint which plays this association role"
        role:
          type: "string"
          description: "The association role of this relationship participant as defined\
            \ in the associationRoleSpec"
      allOf:
      - $ref: '#/components/schemas/Entity'


    EntityCatalog:
      description: "The root entity for entity catalog management. An entity catalog\
        \ can be defined as a collection of entity catalog items and arranging them\
        \ in a particular manner based on the need.\nIn comparison to Product, Service\
        \ and Resource catalogs, the entity catalog is intended for the purpose of providing\
        \ any SID entity to consumers via a catalog, with its specification and policy\
        \ providing governance over its content. Even Entity catalog may have an overlap\
        \ with Product, Service or Resource catalog, it does not replace them. It is\
        \ primarily intended to address those SID entities which may not be addressed\
        \ by any of Product, Service or Resource catalog.\nAn entity catalog comprises\
        \ of a list of RootEntities made available through EntityCatalogItems. This\
        \ API addresses only RootEntity extended items as EntitySpecification. An entity\
        \ catalog typically includes name, description and time period that it is valid\
        \ for."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description of this catalog"
        href:
          type: "string"
          description: "Unique reference of the catalog"
        id:
          type: "string"
          description: "Unique identifier of the Catalog"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date and time of the last update"
        lifecycleStatus:
          type: "string"
          description: "Used to indicate the current lifecycle status"
        name:
          type: "string"
          description: "Name of the catalog"
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "The period for which the catalog is valid"
        version:
          type: "string"
          description: "Catalog version"
      allOf:
      - $ref: '#/components/schemas/Entity'


    GeographicPoint:
      description: "A GeographicPoint defines a geographic point through coordinates."
      type: "object"
      properties:
        x:
          type: "string"
          description: "x coordinate (usually latitude)"
        y:
          type: "string"
          description: "y coordinate (usually longitude)"
        z:
          type: "string"
          description: "z coordinate (usually elevation)"
      allOf:
      - $ref: '#/components/schemas/Entity'


    StringCharacteristic:
      description: "A characteristic which value is a string"
      type: "object"
      properties:
        name:
          type: "string"
          description: "Name of the characteristic"
        valueType:
          type: "string"
          description: "Data type of the value of the characteristic"
        value:
          type: "string"
          description: "Value of the characteristic"


    EntityCategory:
      description: "The (entity) category resource is used to group entity catalog items\
        \ in logical containers. Categories can contain other categories."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description of the category"
        href:
          type: "string"
          description: "Hyperlink reference to the category"
        id:
          type: "string"
          description: "Unique identifier of the category"
        isRoot:
          type: "boolean"
          description: "If true, this Boolean indicates that the category is a root\
            \ of categories"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date and time of the last update"
        lifecycleStatus:
          type: "string"
          description: "Used to indicate the current lifecycle status"
        name:
          type: "string"
          description: "Name of the category"
        parentId:
          type: "string"
          description: "Unique identifier of the parent category"
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "The period for which the category is valid"
        version:
          type: "string"
          description: "Category version"
      allOf:
      - $ref: '#/components/schemas/Entity'


    RelatedPlaceRefOrValue:
      description: "Related Entity reference. A related place defines a place described\
        \ by reference or by value linked to a specific entity. The polymorphic attributes\
        \ @type, @schemaLocation & @referredType are related to the place entity and\
        \ not the RelatedPlaceRefOrValue class itself"
      type: "object"
      properties:
        role:
          type: "string"
      required:
      - "role"
      allOf:
      - $ref: '#/components/schemas/PlaceRef'
      - $ref: '#/components/schemas/Place'


    DocumentAttachment:
      description: "Attachment refers to extensions or additional parts that is or may\
        \ be attached to something (agreements, contracts, appointments) to perform\
        \ a particular function. They can be communication attachments, documents and\
        \ other."
      type: "object"
      properties:
        description:
          type: "string"
          description: "The description of the binary attachment"
        id:
          type: "string"
          description: "Identifier of the binary attachment"
        mimeType:
          type: "string"
          description: "mimeType of the Attachment, such as: application/pdf"
        name:
          type: "string"
          description: "Name of the binary attachment"
        size:
          type: "integer"
          description: "The size of the document or attachment. If this component contains\
            \ the embedded data then the size is the size of the embedded data; if it\
            \ is a reference without the data then it is the size of the referenced\
            \ document"
        sizeUnit:
          type: "string"
          description: "The unit of measure for the size"
        attachmentType:
          type: "string"
          description: "Identifies the sub-type of the instance of binary attachment"
        URL:
          type: "string"
          format: "uri"
          description: "URL of the Attachment"
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "Validity period of the Attachment"
      allOf:
      - $ref: '#/components/schemas/Entity'


    ChangeRequest:
      description: "Change Request is a type of request which can be used for the management\
        \ and control of Change Management \nprocess between a customer and a service\
        \ provider or between a service provider and a partner and vice versa."
      type: "object"
      properties:
        actualEndTime:
          type: "string"
          format: "date-time"
          description: "Date and time when the change implementation actually finished"
        actualStartTime:
          type: "string"
          format: "date-time"
          description: "Date and time when the change implementation actually started"
        budget:
          type: "string"
          description: "The budget reserved for the change"
        channel:
          type: "string"
          description: "A channel represents the way the Change Request was created"
        completionDate:
          type: "string"
          format: "date-time"
          description: "Date and time when the change request is confirmed to be completed"
        currency:
          type: "string"
          description: "The used currency related with cost"
        description:
          type: "string"
          description: "Description of the change request"
        externalId:
          type: "string"
          description: "ID given by the requestor to facilitate the relationship set\
            \ up and subsequent searches"
        href:
          type: "string"
          description: "Hyperlink to access a change request"
        id:
          type: "string"
          description: "Identifier of a Change Request. It is created on repository\
            \ side (a Change Management system)"
        impact:
          type: "string"
          description: "Indicates the impact of this change"
        plannedEndTime:
          type: "string"
          format: "date-time"
          description: "Date and time when the change implementation is planned to be\
            \ finished"
        plannedStartTime:
          type: "string"
          format: "date-time"
          description: "Date and time when the change implementation is planned to be\
            \ started"
        priority:
          type: "string"
          description: "Used by consumers to prioritize a change request in Change Management\
            \ system"
        requestDate:
          type: "string"
          format: "date-time"
          description: "Date and time when the change request is raised"
        requestType:
          type: "string"
          description: "Indicates the type of the change request"
        risk:
          type: "string"
          description: "The risk to implement this change request"
        riskMitigationPlan:
          type: "string"
          description: "The risk mitigation plan"
        riskValue:
          type: "string"
          description: "The additional cost if the risk will happen"
        scheduledDate:
          type: "string"
          format: "date-time"
          description: "Date and time that the schedule is made"
        status:
          type: "string"
          description: "Status of the change request and its sub-state"
        attachment:
          type: "array"
          items:
            $ref: '#/components/schemas/Attachment'
          description: "The attachments of the communication message (when it is email\
            \ type)"
        workLog:
          $ref: '#/components/schemas/WorkLog'
        incident:
          type: "array"
          items:
            $ref: '#/components/schemas/Incident'
        changeRequestSpecification:
          $ref: '#/components/schemas/ChangeRequestSpecification'
        impactEntity:
          type: "array"
          items:
            $ref: '#/components/schemas/ImpactEntityRef'
        changeRequestCharacteristic:
          type: "array"
          items:
            $ref: '#/components/schemas/ChangeRequestCharacteristic'
        targetEntity:
          type: "array"
          items:
            $ref: '#/components/schemas/TargetEntityRef'
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
          description: "The parties involved in the change request"
        resolution:
          $ref: '#/components/schemas/Resolution'
        sla:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/SLARef'
        relateChangeRequest:
          type: "array"
          items:
            $ref: '#/components/schemas/RelatedChangeRequestRef'
        category:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/CategoryRef'
        note:
          type: "array"
          items:
            $ref: '#/components/schemas/Note'
        location:
          $ref: '#/components/schemas/GeographicAddressRef'
          description: "The place at which the change request occurred"
      allOf:
      - $ref: '#/components/schemas/Entity'


    GeographicAddress:
      description: "Structured textual way of describing how to find a Property in an\
        \ urban area (country properties are often defined differently).\nNote : Address\
        \ corresponds to SID UrbanPropertyAddress"
      type: "object"
      properties:
        city:
          type: "string"
          description: "City that the address is in"
        country:
          type: "string"
          description: "Country that the address is in"
        locality:
          type: "string"
          description: "An area of defined or undefined boundaries within a local authority\
            \ or other legislatively defined area, usually rural or semi rural in nature.\
            \ [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or\
            \ shire principally of urban character [ANZLICSTREET]"
        postcode:
          type: "string"
          description: "descriptor for a postal delivery area, used to speed and simplify\
            \ the delivery of mail (also know as zipcode)"
        stateOrProvince:
          type: "string"
          description: "the State or Province that the address is in"
        streetName:
          type: "string"
          description: "Name of the street or other street type"
        streetNr:
          type: "string"
          description: "Number identifying a specific property on a public street. It\
            \ may be combined with streetNrLast for ranged addresses"
        streetNrLast:
          type: "string"
          description: "Last number in a range of street numbers allocated to a property"
        streetNrLastSuffix:
          type: "string"
          description: "Last street number suffix for a ranged address"
        streetNrSuffix:
          type: "string"
          description: "the first street number suffix"
        streetSuffix:
          type: "string"
          description: "A modifier denoting a relative direction"
        streetType:
          type: "string"
          description: "alley, avenue, boulevard, brae, crescent, drive, highway, lane,\
            \ terrace, parade, place, tarn, way, wharf "
        geographicLocation:
          $ref: '#/components/schemas/GeographicLocation'
        geographicSubAddress:
          type: "array"
          items:
            $ref: '#/components/schemas/GeographicSubAddress'
      allOf:
      - $ref: '#/components/schemas/Place'


    TicketRelationship:
      type: "object"
      description: "Represents a relationship between trouble tickets"
      properties:
        relationshipType:
          type: "string"
          description: "Type of the trouble ticket relationship can be isChiled, dependent\
            \ etc..."
        product:
          $ref: '#/components/schemas/TroubleTicketRef'
      allOf:
      - $ref: '#/components/schemas/Entity'


    Error:
      description: "Used when an API throws an Error, typically with a HTTP error response-code\
        \ (3xx, 4xx, 5xx)"
      type: "object"
      required:
      - "code"
      - "reason"
      properties:
        code:
          type: "integer"
          description: "Application relevant detail, defined in the API or a common\
            \ list"
          example:
          - "1"
          - "2"
        reason:
          type: "string"
          description: "Explanation of the reason for the error which can be shown to\
            \ a client user"
          example:
          - "This customer does not exist"
          - "The service is not available at this location"
        message:
          type: "string"
          description: "More details and corrective actions related to the error which\
            \ can be shown to a client user"
          example:
          - "Please use a valid password"
          - "Please enter a smaller quantity"
        status:
          type: "string"
          description: "HTTP Error code extension"
          example:
          - "400-2"
          - "500-4"
        referenceError:
          type: "string"
          format: "uri"
          description: "URI of documentation describing the error"
          example:
          - "https://docs.microsoft.com/en-us/windows/desktop/wmdm/error-codes"
          - "https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html"
      allOf:
      - $ref: '#/components/schemas/Entity'


    RelatedObject:
      description: "Defines objects linked with trouble ticket."
      type: "object"
      properties:
        involvement:
          type: "string"
          description: "Consequence of the ticket on the related object (for instance\
            \ disputed, adjusted...)"
        reference:
          type: "string"
          description: "Reference of object"
      allOf:
      - $ref: '#/components/schemas/Entity'


    SpecCharacteristicValue:
      description: "A number or text that can be assigned to a SpecCharacteristic"
      type: "object"
      properties:
        isDefault:
          type: "boolean"
          description: "If true, the Boolean Indicates if the value is the default value\
            \ for a characteristic"
        rangeInterval:
          type: "string"
          description: "An indicator that specifies the inclusion or exclusion of the\
            \ valueFrom and valueTo attributes. If applicable, possible values are \"\
            open\", \"closed\", \"closedBottom\" and \"closedTop\"."
        regex:
          type: "string"
          description: "A regular expression constraint for given value"
        unitOfMeasure:
          type: "string"
          description: "unit of measure for the valueCould be minutes, GB, etc"
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "The period for which this object is valid"
        value:
          $ref: '#/components/schemas/Object'
          description: "the  value that the characteristic can take on."
        valueFrom:
          type: "integer"
          description: "The low range value that a characteristic can take on"
        valueTo:
          type: "integer"
          description: "The upper range value that a characteristic can take on"
        valueType:
          type: "string"
          description: "A kind of value that the characteristic value can take on, such\
            \ as numeric, text and so forth"
      allOf:
      - $ref: '#/components/schemas/Entity'


    ProcessFlowStateType:
      type: "string"
      description: "Valid values for the lifecycle state of the processFlow"
      enum:
      - "active"
      - "cancelled"
      - "hold"
      - "completed"


    Hub:
      description: "A Hub is used to subscribe to an event notification"
      type: "object"
      required:
      - "id"
      - "callback"
      properties:
        id:
          type: "string"
          description: "The unique-id for your subscription - referenced when updating\
            \ or deleting a subscription"
          example:
          - "4aafacbd-11ff-4dc8-b445-305f2215715f"
          - "2334bc59-726e-4d34-ab96-f50e0561412f"
        callback:
          type: "string"
          format: "uri"
          description: "The URI that will be POSTed to when a notification is triggered"
          example:
          - "http://host/resource/id/listener"
        query:
          type: "string"
          description: "This is a query string used to filter notifications in the context\
            \ of the notifier"
          example:
          - "status=active"
      allOf:
      - $ref: '#/components/schemas/Entity'


    TaskFlowRef:
      type: "object"
      properties:
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
        href:
          type: "string"
          description: "Reference of the related entity."
        id:
          type: "string"
          description: "Unique identifier of a related entity."
      allOf:
      - $ref: '#/components/schemas/Entity'


    ConstraintRef:
      type: "object"
      description: "Constraint reference. The Constraint resource represents a policy/rule\
        \ applied to an entity or entity spec."
      properties:
        '@referredType':
          type: "string"
          description: "The (class) type of the referred constraint"
        href:
          type: "string"
          description: "Hyperlink reference to the target constraint"
        id:
          type: "string"
          description: "reference id to the target constraint"
        name:
          type: "string"
          description: "Name given to the constraint"
        version:
          type: "string"
          description: "constraint version"
      allOf:
      - $ref: '#/components/schemas/Entity'


    CommunicationMessage:
      description: "Communication message means a notification approach in the format\
        \ of a message which can be dispatched (sent) to the certain user by the system\
        \ with the content which can be felt and understood by the recipient. The user\
        \ can be either a final customer or a customer service agent. The message can\
        \ reach the customer in different interaction channels, including: email, short\
        \ message, mobile app notification (push)."
      type: "object"
      properties:
        callbackFlag:
          type: "boolean"
          description: "Do you want a callback on delivery of communication message?"
        content:
          type: "string"
          description: "The content of the communication message"
        description:
          type: "string"
          description: "Description for the whole object"
        href:
          type: "string"
          description: "Hypertext Reference of the Communication Message"
        id:
          type: "string"
          description: "Unique identifier of Communication Message"
        logFlag:
          type: "boolean"
        priority:
          type: "string"
          description: "The priority of the communication message.\nSmall number means\
            \ higher priority."
        sendTime:
          type: "string"
          format: "date-time"
          description: "The time of sending communication message"
        sendTimeComplete:
          type: "string"
          format: "date-time"
          description: "The time of completion of sending communication message"
        status:
          type: "string"
          description: "Status of communication message"
        subject:
          type: "string"
          description: "The title of the message, necessary for the email and mobile\
            \ app push"
        tryTimes:
          type: "integer"
          description: "How many times do you want to retry the delivery of this message?"
        messageType:
          type: "string"
          description: "The type of message, such as: SMS, Email, Mobile app push notification"
        attachment:
          type: "array"
          description: "Any attachment associated with this message"
          items:
            $ref: '#/components/schemas/Attachment'
        receiver:
          type: "array"
          description: "The receiver(s) of this message"
          items:
            $ref: '#/components/schemas/Receiver'
        sender:
          $ref: '#/components/schemas/Sender'
          description: "The sender of this message"
        characteristic:
          type: "array"
          description: "Any additional characteristic(s) of this message"
          items:
            $ref: '#/components/schemas/CommunicationRequestCharacteristic'
      allOf:
      - $ref: '#/components/schemas/Entity'


    ChangeRequestRef:
      type: "object"
      description: "Reference to a Change Request"
      properties:
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
        href:
          type: "string"
          description: "The reference link to the change request"
        id:
          type: "string"
          description: "The identifier of the change request"
      allOf:
      - $ref: '#/components/schemas/Entity'


    AssociationSpecification:
      description: "AssociationSpecification is an association class that describes\
        \ a type of relationship between two entities. This is a generic construct that\
        \ may be used to describe relationship types and roles. The role and type of\
        \ each entity in the relationship is given by an association role specification.\
        \ Two role specifications are embedded in the association specification."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description of the specification"
        href:
          type: "string"
          description: "Hyperlink reference to this specification"
        id:
          type: "string"
          description: "unique identifier of the association specification"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "The last modified date of this specification"
        lifecycleStatus:
          type: "string"
          description: "Indicates the current lifecycle status"
        name:
          type: "string"
          description: "Name given to this association specification"
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "The period for which this specification is valid"
        version:
          type: "string"
          description: "Version of this association"
        constraint:
          type: "array"
          items:
            $ref: '#/components/schemas/ConstraintRef'
        associationRoleSpec:
          $ref: '#/components/schemas/AssociationRoleSpec'
      allOf:
      - $ref: '#/components/schemas/Entity'


    GeographicSite:
      type: "object"
      properties:
        code:
          type: "string"
          description: "A code that may be used for some addressing schemes eg: [ANSI\
            \ T1.253-1999]"
        description:
          type: "string"
          description: "Text describing additional information regarding the site"
        href:
          type: "string"
          description: "An URI used to access to the site"
        id:
          type: "string"
          description: "Unique identifier of the site within the server"
        name:
          type: "string"
          description: "The name that the site is known by"
        status:
          type: "string"
          description: "The condition of the GeographicSite, such as active, inactive,\
            \ planned address"
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        calendar:
          type: "array"
          items:
            $ref: '#/components/schemas/CalendarPeriod'
        geographicLocation:
          $ref: '#/components/schemas/GeographicLocation'
        address:
          $ref: '#/components/schemas/GeographicAddress'
        siteRelationship:
          type: "array"
          items:
            $ref: '#/components/schemas/SiteRelationship'
        role:
          type: "string"
          description: "Role of the place, such as: [home delivery], [shop retrieval])"
      allOf:
      - $ref: '#/components/schemas/Entity'


    EntityRef:
      description: "Entity reference schema to be use for all entityRef class."
      type: object
      properties:
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."        
        id:
          type: "string"
          description: "Unique identifier of a related entity."
        href:
          type: "string"
          description: "Reference of the related entity."
        name:
          type: "string"
          description: "Name of the related entity."
      allOf:
        - $ref: '#/components/schemas/Entity'


    Area:
      description: "Area corresponds to a geographic area as a city, a locality, a district,\
        \ etc."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier of an Area"
        name:
          type: "string"
          description: "The defined name of the municipality"
        areaType:
          type: "string"
          description: "SUBURB, LOCALITY, CITY, TOWN, BOROUGH, ..."
        characteristic:
          type: "array"
          description: "Any additional characterization of the Area, defined for the\
            \ Area type"
          items:
            $ref: '#/components/schemas/LocationCharacteristic'
      allOf:
      - $ref: '#/components/schemas/Entity'

## MonE: Specific Update: Any set to String
    Any:
      type: "string"


    CalendarPeriod:
      type: "object"
      properties:
        day:
          type: "string"
          description: "Day where the calendar status applies (e.g.: monday, mon-to-fri,\
            \ weekdays, weekend, all week, ...)"
        status:
          type: "string"
          description: "Indication of the availability of the site (e.g.: open)"
        timeZone:
          type: "string"
          description: "Indication of the timezone applicable to the calendar information\
            \ (e.g.: Paris, GMT+1)"
        hourPeriod:
          type: "array"
          items:
            $ref: '#/components/schemas/HourPeriod'
      allOf:
      - $ref: '#/components/schemas/Entity'


    Entity:
      type: "object"
      description: "Base entity schema for use in TMForum Open-APIs"
## MonE: Comment out     
##      discriminator: '@type'
      properties:
        '@schemaLocation':
          type: "string"
          format: "uri"
          description: "A URI to a JSON-Schema file that defines additional attributes\
            \ and relationships"
        '@baseType':
          type: "string"
          description: "When sub-classing, this defines the super-class"
        '@type':
          type: "string"
          description: "When sub-classing, this defines the sub-class entity name"
## MonE: Comment out
##      dependencies:
##        '@schemaLocation':
##        - "@baseType"
##        - "@type"


    CommunicationRequestCharacteristic:
      description: "The values of parameters which are used in the content if the content\
        \ contains them."
      type: "object"
      properties:
        name:
          type: "string"
          description: "Content parameter identifier"
        value:
          type: "string"
          description: "Content parameter value"
      allOf:
      - $ref: '#/components/schemas/Entity'


    TroubleTicketRef:
      description: "TroubleTicket reference, for when a Trouble Ticket is used by other\
        \ entities"
      type: "object"
      properties: {}
      allOf:
      - $ref: '#/components/schemas/EntityRef'


    DocumentRef:
      type: "object"
      properties:
        href:
          type: "string"
          description: "The URI for the object itself."
        id:
          type: "string"
          description: "Identifier of the document"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '#/components/schemas/Entity'


    AttachmentRef:
      description: "Attachment reference. An attachment complements the description\
        \ of an element (for instance a product) through video, pictures"
      type: "object"
      properties:
        description:
          type: "string"
          description: "A narrative text describing the content of the attachment"
        href:
          type: "string"
          description: "URL serving as reference for the attachment resource"
          format: "uri"
        id:
          description: "Unique-Identifier for this attachment"
          type: "string"
        url:
          description: "Link to the attachment media/content"
          type: "string"
          format: "uri"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '#/components/schemas/EntityRef'


    SpecCharRelationship:
      description: "An aggregation, migration, substitution, dependency or exclusivity\
        \ relationship between/among productSpecCharacteristics."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Hyperlink reference to the target entity specification"
        id:
          type: "string"
          description: "Unique identifier of the target entity specification"
        name:
          type: "string"
          description: "Name of the target specCharacteristic"
        relationshipType:
          type: "string"
          description: "Type of relationship such as aggregation, migration, substitution,\
            \ dependency, exclusivity"
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "The period for which the SpecCharRelationship is valid"
      allOf:
      - $ref: '#/components/schemas/Entity'


    Attachment:
      description: "Complements the description of an element (for instance a product)\
        \ through video, pictures..."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for this particular attachment"
          example:
          - "4aafacbd-11ff-4dc8-b445-305f2215715f"
          - "2334bc59-726e-4d34-ab96-f50e0561412f"
        href:
          type: "string"
          format: "uri"
          description: "URI for this Attachment"
          example:
          - "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
        name:
          type: "string"
          description: "The name of the attachment"
        description:
          type: "string"
          description: "A narrative text describing the content of the attachment"
          example:
          - "Photograph of the Product"
          - "Explanation Video"
        attachmentType:
          type: "string"
          description: "Attachment type such as video, picture"
          example:
          - "video"
          - "picture"
        url:
          type: "string"
          format: "uri"
          description: "Uniform Resource Locator, is a web page address (a subset of\
            \ URI)"
          example:
          - "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
        mimeType:
          type: "string"
          description: "Attachment mime type such as extension file for video, picture\
            \ and document"
        content:
          type: "string"
          format: "base64"
          description: "The actual contents of the attachment object, if embedded, encoded\
            \ as base64"
        size:
          $ref: '#/components/schemas/Quantity'
          description: "The size of the attachment."
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "The period of time for which the attachment is valid"
      allOf:
      - $ref: '#/components/schemas/Entity'


    Ticket:
      description: "A trouble ticket represents a record used for reporting and managing\
        \ the resolution of resource problems"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Additional identifier coming from an external system"
        creationDate:
          type: "string"
          format: "date-time"
          description: "The date on which the trouble was discovered"
        description:
          type: "string"
          description: "Description of the trouble"
        href:
          type: "string"
          description: "Reference of the trouble ticket"
        id:
          type: "string"
          description: "Unique identifier of the trouble ticket"
        resolutionDate:
          type: "string"
          format: "date-time"
          description: "The date on which the service was brought back to its original\
            \ condition"
        severity:
          type: "string"
          description: "The severity of the trouble. It can be for example : minor,\
            \ major, critical"
        status:
          type: "string"
          description: "The current status of the Trouble Ticket"
        statusChangeDate:
          type: "string"
          format: "date-time"
          description: "The date of state change"
        statusChangeReason:
          type: "string"
          description: "The reason of state change"
        subStatus:
          type: "string"
          description: "The current sub status of the Trouble Ticket"
        targetResolutionDate:
          type: "string"
          format: "date-time"
          description: "Foreseen trouble resolution date"
        ticketType:
          type: "string"
          description: "Type of trouble ticket"
        relatedObject:
          type: "array"
          description: "Any object(s) associated with this trouble ticket"
          items:
            $ref: '#/components/schemas/RelatedObject'
        note:
          type: "array"
          description: "Any note(s) associated with this trouble ticket"
          items:
            $ref: '#/components/schemas/Note'
        relatedParty:
          type: "array"
          description: "Any Party/Parties associated with this trouble ticket"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
      allOf:
      - $ref: '#/components/schemas/Entity'


    TroubleTicketStatusType:
      type: "string"
      description: "Possible values for the status of the trouble ticket"
      enum:
      - "acknowledged"
      - "rejected"
      - "pending"
      - "held"
      - "inProgress"
      - "cancelled"
      - "closed"
      - "resolved"


    ContactMedium:
      description: "Indicates the contact medium that could be used to contact the party."
      type: "object"
      properties:
        preferred:
          type: "boolean"
          description: "If true, indicates that is the preferred contact medium"
        mediumType:
          type: "string"
          description: "Type of the contact medium, such as: email address, telephone\
            \ number, postal address"
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "The time period that the contact medium is valid for"
        characteristic:
          $ref: '#/components/schemas/MediumCharacteristic'
          description: "Any additional characteristic(s) of this contact medium"
      allOf:
      - $ref: '#/components/schemas/Entity'


    Topic:
      description: "Is a event channel provided by the Event Streaming API"
      type: "object"
      properties:
        id:
          type: "string"
          description: "The identifier of the notification."
        name:
          type: "string"
          description: "use to identify grouping of events, per domain, per event types,\
            \ per access control-right and so on."
        href:
          type: "string"
          description: "Reference of the related entity."
        headerQuery:
          type: "string"
          description: "is the filter that will be applied on the Event header properties."
        contentQuery:
          type: "string"
          description: "is the filter that will be applied on the content of the Event."
      allOf:
      - $ref: '#/components/schemas/Entity'


    EventRef:
      type: "object"
      description: "Events linked with service problem"
      properties:
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
        eventTime:
          type: "string"
          format: "date-time"
          description: "Time the event occurred"
        eventType:
          type: "string"
          description: "Type of the event"
        href:
          type: "string"
          description: "event reference"
        id:
          type: "string"
          description: "ID of the event"
      allOf:
      - $ref: '#/components/schemas/Entity'


    TaxDefinition:
      type: "object"
      description: "Reference of a tax definition. A tax is levied by an authorized\
        \ tax jurisdiction. There are many different types of tax (Federal Tax levied\
        \ by the US Government, State Tax levied by the State of California,…)."
      properties:
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
        id:
          type: "string"
          description: "Unique identifier of the tax."
        name:
          type: "string"
          description: "Tax name."
        taxType:
          type: "string"
          description: "Type of  the tax."
      allOf:
      - $ref: '#/components/schemas/Entity'


    ReceiverRef:
      description: "Receiver reference. The receiver is the party role who will receive\
        \ the settlement note."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the receiver"
        id:
          type: "string"
          description: "Identifier of the receiver"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '#/components/schemas/Entity'


    WorkLog:
      description: "A record of the work performed on the change request during the\
        \ investigation and resolution process."
      type: "object"
      properties:
        createDateTime:
          type: "string"
          format: "date-time"
          description: "Date and time of worklog generated."
        description:
          type: "string"
          description: "The description of the worklog."
        lastUpdateDateTime:
          type: "string"
          description: "Date and time when the worklog updated."
        record:
          type: "array"
          items:
            $ref: '#/components/schemas/Record'
      allOf:
      - $ref: '#/components/schemas/Entity'


    AddressRef:
      type: "object"
      allOf:
      - $ref: '#/components/schemas/EntityRef'


    GeographicSubAddress:
      description: "Representation of a GeographicSubAddress \nIt is used for addressing\
        \ within a property in an urban area (country properties are often defined differently).\
        \ It may refer to a building, a building cluster, or a floor of a multistory\
        \ building."
      type: "object"
      properties:
        buildingName:
          type: "string"
          description: "allows for buildings that have well-known names"
        href:
          type: "string"
          description: "Link to the subAddress"
        id:
          type: "string"
          description: "Unique Identifier of the subAddress"
        levelNumber:
          type: "string"
          description: "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\
            \ 2"
        levelType:
          type: "string"
          description: "describes level types within a building"
        name:
          type: "string"
          description: "Name of the subAddress to identify it with a meaningful identification"
        privateStreetName:
          type: "string"
          description: "private streets internal to a property (e.g. a university) may\
            \ have internal names that are not recorded by the land title office."
        privateStreetNumber:
          type: "string"
          description: "private streets numbers internal to a private street"
        subUnitNumber:
          type: "string"
          description: "the discriminator used for the subunit\noften just a simple\
            \ number e.g. FLAT 5, may also be a range"
        subUnitType:
          type: "string"
          description: "the type of subunit\ne.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\
            \ UNIT, WHARF"
        subAddressType:
          type: "string"
          description: "Type of subAddress : it can be a subunit or a private street"
      allOf:
      - $ref: '#/components/schemas/Entity'


    GeographicLocationRef:
      type: "object"
      properties: {}
      allOf:
      - $ref: '#/components/schemas/EntityRef'


    ContentType:
      type: "object"
      description: "Base64 content structure."
      properties:
        type:
          type: "string"
          description: "Content type."
        contentEncoding:
          type: "string"
          format: "byte"
          description: "Base64 encoded content."
        description:
          type: "string"
          description: "Content description."
      required:
      - "contentEncoding"


    IntegerCharacteristic:
      description: "A characteristic which value is a integer number"
      type: "object"
      properties:
        name:
          type: "string"
          description: "Name of the characteristic"
        valueType:
          type: "string"
          description: "Data type of the value of the characteristic"
        value:
          type: "integer"
          description: "Value of the characteristic"


    Monitor:
      type: "object"
      description: "Monitoring of resources"
      properties:
        href:
          type: "string"
          description: "reference to this monitor"
        id:
          type: "string"
          description: "Identifier of an instance of the monitor. Required to be unique\
            \ within the resource type.  Used in URIs as the identifier for specific\
            \ instances of a type"
        request:
          description: "Represents the request"
          $ref: '#/components/schemas/Request'
        response:
          description: "Represents the response"
          $ref: '#/components/schemas/Response'
        sourceHref:
          type: "string"
          description: "The monitored resource href"
        state:
          type: "string"
          description: "The Monitor state of the resource.  InProgress, InError, Completed"
      allOf:
      - $ref: '#/components/schemas/Entity'


    Channel:
      description: "The channel to which the resource reference to. e.g. channel for\
        \ selling product offerings, channel for opening a trouble ticket etc.."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the channel"
        id:
          type: "string"
          description: "Unique identifier of the channel"
        name:
          type: "string"
          description: "Name of the channel"
      allOf:
      - $ref: '#/components/schemas/Entity'


    StatusChange:
      type: "object"
      description: "Holds the status notification reasons and associated date the status\
        \ changed, populated by the server"
      properties:
        changeDate:
          type: "string"
          format: "date-time"
          description: "The date and time the status changed."
        changeReason:
          type: "string"
          description: "The reason why the status changed."
        status:
          type: "string"
          description: "The status of the trouble ticket"
      allOf:
      - $ref: '#/components/schemas/Entity'


    FloatCharacteristic:
      description: "A characteristic which value is a float number"
      type: "object"
      properties:
        name:
          type: "string"
          description: "Name of the characteristic"
        valueType:
          type: "string"
          description: "Data type of the value of the characteristic"
        value:
          type: "number"
          format: "float"
          description: "Value of the characteristic"


    Street:
      description: "A street is a road in a city or locality that has buildings that\
        \ are usually close together along one or both sides"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier of the Street"
        name:
          type: "string"
          description: "The defined name of the street"
        streetType:
          type: "string"
          description: "Alley, avenue, etc."
        characteristic:
          type: "array"
          items:
            $ref: '#/components/schemas/LocationCharacteristic'
        address:
          type: "array"
          items:
            $ref: '#/components/schemas/AddressRef'
      allOf:
      - $ref: '#/components/schemas/Entity'


    ImportJob:
      description: "Represents a task used to import resources from a file"
      type: "object"
      properties:
        completionDate:
          type: "string"
          format: "date-time"
          description: "Date at which the job was completed"
        contentType:
          type: "string"
          description: "Indicates the format of the imported data"
        creationDate:
          type: "string"
          format: "date-time"
          description: "Date at which the job was created"
        errorLog:
          type: "string"
          description: "Reason for failure if status is failed"
        href:
          type: "string"
          description: "Reference of the import job"
        id:
          type: "string"
          description: "Identifier of the import job"
        path:
          type: "string"
          description: "URL of the root resource where the content of the file specified\
            \ by the import job must be applied"
        status:
          description: "Status of the import job (not started, running, succeeded, failed)"
          $ref: '#/components/schemas/JobStateType'
        url:
          type: "string"
          format: "uri"
          description: "URL of the file containing the data to be imported"
      allOf:
      - $ref: '#/components/schemas/Entity'


    ChangeRequestSpecification:
      description: "Defines a set of attributes related to Change Request."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description of the specification"
        href:
          type: "string"
          description: "Hyperlink to access the specification."
        id:
          type: "string"
          description: "Identifier of the specification."
        name:
          type: "string"
          description: "Name of the specification."
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      allOf:
      - $ref: '#/components/schemas/Entity'


    Value:
      type: "object"
      properties: {}
      allOf:
      - $ref: '#/components/schemas/Entity'


    TimePeriodType:
      description: "Representation of a time period"
      properties:
        endDateTime:
          type: "string"
          format: "date-time"
          description: "End date of the period"
        startDateTime:
          type: "string"
          format: "date-time"
          description: "Start date of the period"
      required:
      - "startDateTime"
      type: "object"


    TroubleTicketRelationship:
      type: "object"
      description: "Represents a relationship between trouble Trouble Tickets"
      properties:
        id:
          type: "string"
          description: "Unique identifier of the Trouble Ticket"
        href:
          type: "string"
          description: "Reference of the Trouble Ticket"
        name:
          type: "string"
          description: "Name of the Trouble Ticket"
        relationshipType:
          type: "string"
          description: "Type of the  Trouble Ticket relationship can be isChiled, dependent\
            \ etc..."
      allOf:
      - $ref: '/INTERFACES/ERROR#/components/schemas//Entity'


    TaskFlow:
      type: "object"
      properties:
        channel:
          type: "array"
          items:
            $ref: '#/components/schemas/ChannelRef'
          description: "A list of channel(s) where this taskFlow is executed"
        characteristic:
          type: "array"
          items:
            $ref: '#/components/schemas/Characteristic'
          description: "A list of characteristic(s) associated to this taskFlow"
        completionMethod:
          type: "string"
          description: "TaskFlow completion method."
        href:
          type: "string"
          description: "Reference of the taskFlow"
        id:
          type: "string"
          description: "Identifier of the taskFlow"
        isMandatory:
          type: "boolean"
          description: "Indicate mandatory TaskFlow."
        priority:
          type: "integer"
          description: "TaskFlow priority."
        relatedEntity:
          type: "array"
          items:
            $ref: '#/components/schemas/RelatedEntity'
          description: "A list of related entity(ies) to this taskFlow"
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
          description: "A list of related party(ies) to this task"
        state:
          $ref: '#/components/schemas/TaskFlowStateType'
          description: "State of the taskFlow: described in the state machine diagram."
        taskFlowRelationship:
          type: "array"
          items:
            $ref: '#/components/schemas/TaskFlowRelationship'
          description: "A list of taskFlows related to this taskFlow"
        taskFlowSpecification:
          type: "string"
          description: "Specification of the taskFlow."
      allOf:
      - $ref: '#/components/schemas/Entity'


    ProcessFlowRef:
      description: "Process Flow ref class is used to provide process main information\
        \ from Task sub resource."
      type: "object"
      properties:
        state:
          description: "The life cycle state of the processFlow"
          $ref: '#/components/schemas/ProcessFlowStateType'
      allOf:
      - $ref: '#/components/schemas/EntityRef'


    ProcessFlow:
      type: "object"
      properties:
        channel:
          type: "array"
          items:
            $ref: '#/components/schemas/ChannelRef'
          description: "A list of channel(s) where this processFlow is executed"
        characteristic:
          type: "array"
          items:
            $ref: '#/components/schemas/Characteristic'
          description: "A list of characteristic(s) associated to this processFlow"
        href:
          type: "string"
          description: "Reference of the ProcessFlow"
        id:
          type: "string"
          description: "Identifier of the Process flow"
        processFlowDate:
          type: "string"
          format: "date-time"
          description: "Is the date when the processFlow was created in basse (timestamp)"
        processFlowSpecification:
          type: "string"
          description: "Specification of the processFlow."
        relatedEntity:
          type: "array"
          items:
            $ref: '#/components/schemas/RelatedEntity'
          description: "A list of related entity(ies) to this processFlow"
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
          description: "A list of related party(ies) to this processFlow"
        state:
          $ref: '#/components/schemas/ProcessFlowStateType'
          description: "State of the ProcessFlow: described in the state machine diagram."
        taskFlow:
          type: "array"
          items:
            $ref: '#/components/schemas/TaskFlowRef'
          description: "A list of taskflow related to this processFlow"
      allOf:
      - $ref: '#/components/schemas/Entity'


    ChannelRef:
      type: "object"
      description: "The channel to which the resource reference to. e.g. channel for\
        \ selling product offerings, channel for opening a trouble ticket etc.."
      properties:
        name:
          type: "string"
          description: "Name of the channel."
      allOf:
      - $ref: '#/components/schemas/EntityRef'


    SubAddress:
      description: "Representation of a SubAddress \nIt is used for addressing within\
        \ a property in an urban area (country properties are often defined differently).\
        \ It may refer to a building, a building cluster, or a floor of a multistory\
        \ building."
      type: "object"
      properties:
        buildingName:
          type: "string"
          description: "Allows for buildings that have well-known names"
        href:
          type: "string"
        id:
          type: "string"
          description: "Unique ID for this SubAddress"
        levelNumber:
          type: "string"
          description: "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\
            \ 2"
        levelType:
          type: "string"
          description: "Describes level types within a building"
        name:
          type: "string"
          description: "Name of the subAddress to identify it with a meaningful identification"
        privateStreetName:
          type: "string"
          description: "Private streets internal to a property (e.g. a university) may\
            \ have internal names that are not recorded by the land title office."
        privateStreetNumber:
          type: "string"
          description: "Private streets numbers internal to a private street"
        subUnitNumber:
          type: "string"
          description: "The discriminator of the subunit, often just a simple number\
            \ e.g. FLAT 5, may also be a range"
        subUnitType:
          type: "string"
          description: "The type of subunit, such as BERTH, FLAT, PIER, SUITE, SHOP,\
            \ TOWER, UNIT, WHARF"
        subAddressType:
          type: "string"
          description: "The type of subaddress : it can be a subunit or a private street"
      allOf:
      - $ref: '#/components/schemas/Entity'


    GeographicAddressRef:
      description: "The place at which the change request has occurred."
      type: "object"
      properties:
        href:
          type: "string"
          description: "The detail address of the location."
        id:
          type: "string"
          description: "The post code of an address."
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '#/components/schemas/Entity'


    HourPeriod:
      type: "object"
      properties:
        endHour:
          type: "string"
          description: "The time when the status ends applying"
        startHour:
          type: "string"
          description: "The time when the status starts applying"
      allOf:
      - $ref: '#/components/schemas/Entity'


    QualificationRef:
      type: "object"
      description: "It could be a serviceQualification or a productOfferingQualification\
        \ that has been executed previously and captured in the productOrder to provide\
        \ eligibility information"
      properties:
        qualificationItemId:
          type: "string"
          description: "Id of an item of a qualification"
      allOf:
      - $ref: '#/components/schemas/EntityRef'


    GeographicAddressValidation:
      description: "This resource is used to manage address validation request and response"
      type: "object"
      properties:
        href:
          type: "string"
          description: "An URI used to access to the address validation resource"
        id:
          type: "string"
          description: "Unique identifier of the Address Validation"
        provideAlternative:
          type: "boolean"
          description: "Indicator provided by the requester to specify if alternate\
            \ addresses must be provided in case of partial or fail result."
        status:
          type: "string"
          description: "Status of the address validation (inProgress, terminatedWithError,\
            \ done)"
        validationDate:
          type: "string"
          format: "date-time"
          description: "Date when the address validation is performed"
        validationResult:
          type: "string"
          description: "Result of the address validation (success, partial, fail)"
        validAddress:
          $ref: '#/components/schemas/GeographicAddress'
        alternateGeographicAddress:
          type: "array"
          items:
            $ref: '#/components/schemas/GeographicAddress'
      allOf:
      - $ref: '#/components/schemas/Entity'


    DocumentCharacteristic:
      description: "is a list of name value pairs that define the document characteristics."
      type: "object"
      properties:
        name:
          type: "string"
          description: "name of the characteristic"
        value:
          type: "string"
      allOf:
      - $ref: '#/components/schemas/Entity'


    RelatedChangeRequestRef:
      description: "An existing Change Request that has some form of correlation with\
        \ the given Change Request."
      type: "object"
      properties:
        correlation:
          type: "string"
          description: "The correlation between two change requests"
        description:
          type: "string"
          description: "Description of a change request."
        href:
          type: "string"
          description: "Hyper link to access a change request."
        id:
          type: "string"
          description: "Identifier of an Change Request"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '#/components/schemas/Entity'


    Request:
      type: "object"
      description: "A response to a request"
      properties:
        body:
          description: "The body of the request. For example for an HTTP request might\
            \ contain content of a form ."
          type: "string"
        header:
          type: "array"
          description: "Items included in the header of the request. For example for\
            \ an HTTP request might contain requested locale, basic authentication."
          items:
            $ref: '#/components/schemas/HeaderItem'
          title: "header"
        method:
          description: "The protocol of the request, e.g. http"
          type: "string"
        to:
          description: "The target of the request, e.g. a URL for an HTTP request"
          type: "string"
      required:
      - "body"
      - "header"


    EntityCatalogItemRef:
      description: "reference to EntityCatalogItem object"
      type: "object"
      properties:
        href:
          type: "string"
          description: "Hyperlink reference to the target EntityCatalogItem"
        id:
          type: "string"
          description: "reference id to the target EntityCatalogItem"
        name:
          type: "string"
          description: "Name given to the EntityCatalogItem"
        version:
          type: "string"
          description: "EntityCatalogItem version"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '#/components/schemas/Entity'


    RelatedEntityRef:
      description: "A reference to an entity, where the type of the entity is not known\
        \ in advance."
      type: "object"
      properties:
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
        id:
          type: "string"
          description: "The identifier of an entity."
        href:
          type: "string"
          description: "The hyperlink to access an entity."
        name:
          type: "string"
          description: "The name of an entity."
      allOf:
      - $ref: '#/components/schemas/Entity'


    EntityCatalogItem:
      description: "An EntityCatalogItem is an entity that allows any ProductOffering,\
        \ ServiceCandidate, ResourceCandidate, or even any object inheriting from RootEntity,\
        \ to be available to a catalog. The CatalogSpecification and Policy of the catalog\
        \ governs the content of the EntityCatalogItem. This API addresses only EntitySpecification\
        \ items extended from RootEntity as EntityCatalogItem.\nThe EntityCatalogItem\
        \ resource (JSON format) represents a set of characteristics that define the\
        \ values given by the EntityCatalogItem."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description of this REST resource"
        href:
          type: "string"
          description: "Hyperlink reference to this REST resource"
        id:
          type: "string"
          description: "Unique identifier of this REST resource"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date and time of the last update of this REST resource"
        lifecycleStatus:
          type: "string"
          description: "Used to indicate the current lifecycle status of this catalog\
            \ item"
        name:
          type: "string"
          description: "Name given to this REST resource"
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "The period for which this REST resource is valid"
        version:
          type: "string"
          description: "EntityCatalogItem version"
      allOf:
      - $ref: '#/components/schemas/Entity'


    StreetSegment:
      description: "StreetSegment corresponds to a part of a street referenced by a\
        \ number or a set of number. Sometimes a suffix is added."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier of the Street Segment"
        number:
          type: "string"
          description: "number identifying a specific property on a public street. It\
            \ may be combined with streetNrLast for ranged addresses"
        numberLast:
          type: "string"
          description: "the last number in a range of street numbers allocated to a\
            \ property"
        numberLastSuffix:
          type: "string"
          description: "the last street number suffix for a ranged address"
        numberSuffix:
          type: "string"
          description: "the first street number suffix"
        address:
          $ref: '#/components/schemas/AddressRef'
      allOf:
      - $ref: '#/components/schemas/Entity'


    ChangeRequestCharacteristic:
      description: "Characteristics of the change request to instantiate or to modify"
      type: "object"
      properties:
        name:
          type: "string"
          description: "Name of the characteristic."
        value:
          type: "string"
          description: "Value of the characteristic."
      allOf:
      - $ref: '#/components/schemas/Entity'


    Record:
      description: "A record in a worklog."
      type: "object"
      properties:
        dateTime:
          type: "string"
          format: "date-time"
          description: "The date time that a record is generated."
        description:
          type: "string"
          description: "The detail description in a record."
        supportPerson:
          type: "string"
          description: "The person who logged that record."
      allOf:
      - $ref: '#/components/schemas/Entity'


    Object:
      type: "object"
      properties:
        objectType:
          type: "string"
          description: "The type of object"
        uri:
          type: "string"
          format: "uri"
      allOf:
      - $ref: '#/components/schemas/Entity'


    TaskFlowRelationship:
      description: "Describes relationship between taskFlow"
      type: "object"
      required:
      - "relationshipType"
      - "taskFlow"
      properties:
        relationshipType:
          type: "string"
          description: "The type of taskFlow relationship (requires, triggers, etc.)"
        taskFlow:
          description: "The taskFlow being referred to"
          $ref: '#/components/schemas/TaskFlowRef'


    RelatedGeographicLocationRefOrValue:
      description: "#TODO"
      type: "object"
      properties:
        role:
          type: "string"
      required:
      - "role"
      allOf:
      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'


    HeaderItem:
      type: "object"
      description: "An item typically included in a request or response"
      properties:
        name:
          description: "The name of the header item, e.g. locale"
          type: "string"
        value:
          description: "The value of the header item, e.g. en-us"
          type: "string"
      required:
      - "name"
      - "value"


    AttachmentRefOrValue:
      type: "object"
      description: "An attachment by value or by reference. For AttachmentRefOrValue,\
        \ the attribute type,schemaLocation and referredType are related to the contained\
        \ entity and not to AttchmentRefOrValue itself"
      allOf:
      - $ref: '#/components/schemas/AttachmentRef'
      - $ref: '#/components/schemas/Attachment'


    Duration:
      type: "object"
      description: "A time interval in a given unit of time"
      properties:
        amount:
          type: "integer"
          description: "Time interval (number of seconds, minutes, hours, etc.)"
        units:
          type: "string"
          description: "Unit of time (seconds, minutes, hours, etc.)"


    Document:
      description: "Document is a tangible output from an activity"
      type: "object"
      properties:
        creationDate:
          type: "string"
          format: "date-time"
          description: "The date and time the document was created. A date and time\
            \ formatted in compliance with the ISO8601 standard must be used."
        description:
          type: "string"
          description: "Free-text description of the document"
        href:
          type: "string"
          format: "uri"
          description: "The URI for the object itself"
        id:
          type: "string"
          description: "Identifier of an instance of the document. Required to be unique\
            \ within the document type.  Used in URIs as the identifier for specific\
            \ instances of a type."
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "The date and time the document was last modified. A date and\
            \ time formatted in compliance with the ISO8601 standard must be used."
        lifecycleState:
          type: "string"
          description: "The life cycle state of the document"
        name:
          type: "string"
          description: "A string used to give a name to the document"
        documentType:
          type: "string"
          description: "The specific type of this document"
        version:
          type: "string"
          description: "A particular form or variety of an artefact that is different\
            \ from others or from the original. The form represents differences in properties\
            \ that characterize an artefact, that are not enough to warrant creating\
            \ a new artefact"
        characteristic:
          type: "array"
          description: "Any additional characteristic(s) specific to this Document"
          items:
            $ref: '#/components/schemas/DocumentCharacteristic'
        relatedParty:
          type: "array"
          description: "Any Parties related to this Document (eg: author)"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        documentSpecification:
          description: "The specification or this Document"
          $ref: '#/components/schemas/DocumentSpecification'
        binaryAttachment:
          type: "array"
          items:
            $ref: '#/components/schemas/DocumentAttachment'
        category:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/CategoryRef'
        documentRelationship:
          type: "array"
          items:
            $ref: '#/components/schemas/DocumentRelationship'
        relatedObject:
          $ref: '#/components/schemas/RelatedObject'
      allOf:
      - $ref: '#/components/schemas/Entity'


    TargetEntityRef:
      description: "The entity which will be changed or configured while the change\
        \ request is executed."
      type: "object"
      properties:
        description:
          type: "string"
          description: "The description to the related party."
        href:
          type: "string"
          description: "Hyperlink to access the target entity."
        id:
          type: "string"
          description: "Identifier of target entity"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '#/components/schemas/Entity'


    Place:
      description: "Place reference. Place defines the places where the products are\
        \ sold or delivered."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Unique reference of the place"
        id:
          type: "string"
          description: "Unique identifier of the place"
        name:
          type: "string"
          description: "A user-friendly name for the place, such as [Paris Store], [London\
            \ Store], [Main Home]"
      allOf:
      - $ref: '#/components/schemas/Entity'


    RelatedChannel:
      type: "object"
      description: "Related channel to another entity. May be online web, mobile app,\
        \ social ,etc."
      properties:
        name:
          type: "string"
          description: "Name of the channel."
        role:
          type: "string"
          description: "Role playing by the channel."
      allOf:
      - $ref: '#/components/schemas/EntityRef'


    RetrieveGeographicLocation:
      type: "object"
      properties:
        href:
          type: "string"
        id:
          type: "string"
        requestedAccuracy:
          type: "number"
          format: "float"
        status:
          type: "string"
        time:
          type: "string"
          format: "date-time"
        geographicLocation:
          $ref: '#/components/schemas/GeographicLocation'
        thing:
          $ref: '#/components/schemas/Object'
      allOf:
      - $ref: '#/components/schemas/Entity'


    TaskStateType:
      type: "string"
      description: "Possible values for the state of a task"
      enum:
      - "acknowledged"
      - "terminatedWithError"
      - "inProgress"
      - "done"


    TroubleTicket:
      type: "object"
      description: "A trouble ticket is a record of an issue that is created, tracked,\
        \ and managed by a trouble ticket management system"
      properties:
        attachment:
          type: "array"
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
          description: "File(s) attached to the trouble ticket. e.g. pictur of broken\
            \ device, scaning of a bill or charge"
        channel:
          $ref: '#/components/schemas/ChannelRef'
          description: "The channel that origin the trouble ticket"
        creationDate:
          type: "string"
          format: "date-time"
          description: "The date on which the trouble ticket was created"
        description:
          type: "string"
          description: "Description of the trouble or issue"
        expectedResolutionDate:
          type: "string"
          format: "date-time"
          description: "The expected resolution date determined by the trouble ticket\
            \ system"
        externalId:
          type: "string"
          description: "Additional identifier coming from an external system"
        href:
          type: "string"
          description: "Hyperlink, a reference to the trouble ticket entity"
        id:
          type: "string"
          description: "Unique identifier of the trouble ticket"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "The date and time that the trouble ticked was last updated"
        name:
          type: "string"
          description: "Name of the trouble ticket, typically a short description provided\
            \ by the user that create the ticket"
        note:
          type: "array"
          items:
            $ref: '#/components/schemas/Note'
          description: "The note(s) that are associated to the ticket."
        priority:
          type: "string"
          description: "The priority of the trouble ticket and how quickly the issue\
            \ should be resolved. Example: Critical, High, Medium, Low. The value is\
            \ set by the ticket management system considering the severity, ticket type\
            \ etc..."
        relatedEntity:
          type: "array"
          items:
            $ref: '#/components/schemas/RelatedEntity'
          description: "An entity that is related to the ticket such as a bill, a product,\
            \ etc. The entity against which the ticket is associated."
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
          description: "The related party(ies) that are associated to the ticket."
        requestedResolutionDate:
          type: "string"
          format: "date-time"
          description: "The resolution date requested by the user"
        resolutionDate:
          type: "string"
          format: "date-time"
          description: "The date and time the trouble ticket was resolved"
        severity:
          type: "string"
          description: "The severity of the issue. Indicate the implication of the issue\
            \ on the expected functionality e.g. of a system, application, service etc..\
            \ \nSeverity values can be for example : Critical, Major, Minor"
        status:
          $ref: '#/components/schemas/TroubleTicketStatusType'
          description: "The current status of the trouble ticket"
        statusChange:
          type: "array"
          items:
            $ref: '#/components/schemas/StatusChange'
          description: "The status change history that are associated to the ticket.Populated\
            \ by the server"
        statusChangeDate:
          type: "string"
          format: "date-time"
          description: "The date and time the status changed."
        statusChangeReason:
          type: "string"
          description: "The reason for changing the status"
        troubleTicketRelationship:
          type: "array"
          items:
            $ref: '#/components/schemas/TroubleTicketRelationship'
          description: "A list of trouble ticket relationships (TroubleTicketRelationship\
            \ [*]). Represents a relationship between trouble tickets"
        ticketType:
          type: "string"
          description: "represent a business type of the trouble ticket e.g. incident,\
            \ complain, request"
      allOf:
      - $ref: '#/components/schemas/Entity'


    Receiver:
      description: "Receivers of the communication message."
      type: "object"
      properties:
        appUserId:
          type: "string"
          description: "ID of the mobile app user"
        email:
          type: "string"
          description: "Receiver address of email, if the communication type is email"
        id:
          type: "string"
          description: "ID of the receiver"
        ip:
          type: "string"
          description: "IP address of the receiver"
        name:
          type: "string"
          description: "Name of the receiver"
        phoneNumber:
          type: "string"
          description: "Phone number of the receiver, if the communication type is SMS."
        party:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
      allOf:
      - $ref: '#/components/schemas/Entity'


    GeographicLocation:
      description: "A GeographicLocation allows to describe through coordinate(s) a\
        \ point, a line or a space"
      type: "object"
      properties:
        accuracy:
          type: "string"
        geometryType:
          type: "string"
          description: "Type allows to describe the GeoLocation form: it could be a\
            \ point, a line, a polygon, a cylinder, etc"
        spatialRef:
          type: "string"
        geometry:
          type: "array"
          items:
            $ref: '#/components/schemas/GeographicPoint'
      allOf:
      - $ref: '#/components/schemas/Place'


    Notification:
      description: "The notification is sent to each listener who has subscribed to\
        \ receive it."
      type: "object"
      properties:
        eventId:
          type: "string"
          description: "Identifier of the event"
        eventTime:
          type: "string"
          format: "date-time"
          description: "Creation date of the event"
        eventType:
          type: "string"
          description: "Type of event"
        fieldPath:
          type: "string"
          description: "details which field is missing, its structure is quite similar\
            \ to GET filter criteria"
        resourcePath:
          type: "string"
          description: "To indicate which entity is concerned"
      allOf:
      - $ref: '#/components/schemas/Entity'


    DocumentSpecification:
      description: "A document specification reference"
      type: "object"
      properties:
        href:
          type: "string"
          description: "The URI for the object itself."
        id:
          type: "string"
          description: "Identifier of the DocumentSpecification"
        name:
          type: "string"
          description: "a String. Name of the DocumentSpecification"
        URL:
          type: "string"
          format: "uri"
          description: "URL of the Document Specification"
        version:
          type: "string"
          description: "A string, a version of the DocumentSpecification."
      allOf:
      - $ref: '#/components/schemas/Entity'


    Note:
      description: "Extra information about a given entity"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Identifier of the note within its containing entity (may or\
            \ may not be globally unique, depending on provider implementation)"
        author:
          type: "string"
          description: "Author of the note"
        date:
          type: "string"
          format: "date-time"
          description: "Date of the note"
        text:
          type: "string"
          description: "Text of the note"
      allOf:
      - $ref: '#/components/schemas/Entity'


    ImpactEntityRef:
      description: "Defines the entities (product, service, resource, and other related\
        \ objects) which will be impacted while the change \nrequest is executed."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description and analysis of the impact of the change request\
            \ on the Product, Service or Resource."
        href:
          type: "string"
          description: "Hyperlink to access the impacted party, it could be a party\
            \ reference or a party role reference."
        id:
          type: "string"
          description: "Identifier of impacted entity."
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '#/components/schemas/Entity'


    RelatedPlace:
      description: "A  Place and an associated role as installation adress, delivery\
        \ address, etc...."
      type: "object"
      properties:
        role:
          type: "string"
          description: "Role of the place, such as: [home delivery], [shop retrieval])"
        href:
          type: "string"
          description: "Unique reference of the place"
        id:
          type: "string"
          description: "Unique identifier of the place"
        name:
          type: "string"
          description: "A user-friendly name for the place, such as [Paris Store], [London\
            \ Store], [Main Home]"
      allOf:
      - $ref: '#/components/schemas/Entity'


    Sender:
      description: "Sender of the communication message."
      type: "object"
      properties:
        email:
          type: "string"
          description: "Sender address of email, if the communication type is email"
        id:
          type: "string"
          description: "ID of the sender"
        name:
          type: "string"
          description: "Name of the sender"
        phoneNumber:
          type: "string"
          description: "Phone number of the sender, if the communication type is SMS."
        party:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
      allOf:
      - $ref: '#/components/schemas/Entity'


    JobStateType:
      type: "string"
      description: "Valid values for the state of a batch job (e.g. catalog import)"
      enum:
      - "Not Started"
      - "Running"
      - "Succeeded"
      - "Failed"


    Characteristic:
      description: "Describes a given characteristic of an object or entity through\
        \ a name/value pair."
      type: "object"
      required:
      - "name"
      - "value"
      properties:
        name:
          type: "string"
          description: "Name of the characteristic"
        valueType:
          type: "string"
          description: "Data type of the value of the characteristic"
        value:
          $ref: '#/components/schemas/Any'
          description: "The value of the characteristic"
      allOf:
      - $ref: '#/components/schemas/Entity'


    EntitySchemaRef:
      description: "The reference object to the schema and type of target entity which\
        \ is described by an entity specification"
      type: "object"
      properties:
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '#/components/schemas/Entity'


    LocationCharacteristic:
      description: "Name/value pairs, used to extra characterized the Area (e.g. if\
        \ a standard\ncode set has been defined for the GeographicArea type, etc.)"
      type: "object"
      properties:
        name:
          type: "string"
        value:
          type: "string"
      allOf:
      - $ref: '#/components/schemas/Entity'


    ObjectCharacteristic:
      description: "A characteristic which value is an object"
      type: "object"
      properties:
        name:
          type: "string"
          description: "Name of the characteristic"
        valueType:
          type: "string"
          description: "Data type of the value of the characteristic"
        value:
          type: "string"
          description: "Value of the characteristic"


    RatedProductUsage:
      description: "An occurrence of employing a product for its intended purpose with\
        \ all rating details"
      type: "object"
      properties:
        bucketValueConvertedInAmount:
          type: "number"
          format: "float"
          description: "Monetary value of bucket"
        currencyCode:
          type: "string"
          description: "A string used as a code for specifying the currency associated\
            \ to the given amounts. The ISO4217 norm uses 3 letters to define the currency\
            \ (for example USD for US dollar or EUR for Euro)"
        isBilled:
          type: "boolean"
          description: "Boolean indicating if usage have been billed or not"
        isTaxExempt:
          type: "boolean"
          description: "Indicates if the rated amount is exempt of tax"
        offerTariffType:
          type: "string"
          description: "Type of tariff applied"
        productRef:
          type: "string"
          description: "Reference of product specification"
        ratingAmountType:
          type: "string"
          description: "Type of amount"
        ratingDate:
          type: "string"
          format: "date-time"
          description: "Date of usage rating"
        taxExcludedRatingAmount:
          type: "number"
          format: "float"
          description: "All taxes excluded rated amount"
        taxIncludedRatingAmount:
          type: "number"
          format: "float"
          description: "All taxes included rated amount"
        taxRate:
          type: "number"
          format: "float"
          description: "Tax rate"
        usageRatingTag:
          type: "string"
          description: "Tag value: [usage]: the usage is always rated outside a usage\
            \ bundle\n[included usage]: the usage is rated inside a usage bundle\n[non\
            \ included usage]: the usage bundle is exhausted. The usage is rated outside\
            \ the usage bundle"
      allOf:
      - $ref: '#/components/schemas/Entity'


    TaskFlowStateType:
      type: "string"
      description: "Valid values for the lifecycle state of the taskFlow"
      enum:
      - "new"
      - "active"
      - "hold"
      - "cancelled"
      - "completed"


    EntitySpecRelationship:
      description: "A migration, substitution, dependency or exclusivity relationship\
        \ between/among entity specifications."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the target EntitySpecification"
        id:
          type: "string"
          description: "Unique identifier of target EntitySpecification"
        name:
          type: "string"
          description: "The name given to the target entity specification instance"
        role:
          type: "string"
          description: "The association role for this entity specification"
        relationshipType:
          type: "string"
          description: "Type of relationship such as migration, substitution, dependency,\
            \ exclusivity"
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "The period for which the entitySpecRelationship is valid"
        associationSpec:
          $ref: '#/components/schemas/AssociationSpecRef'
      allOf:
      - $ref: '#/components/schemas/Entity'


    PlaceRef:
      description: "Place reference. PlaceRef defines the placeRefs where the products\
        \ are sold or delivered."
      type: "object"
      properties: {}
      allOf:
      - $ref: '#/components/schemas/EntityRef'


    Resolution:
      description: "The way one or more change request has been implementation through\
        \ a direct remedy or task"
      type: "object"
      properties:
        code:
          type: "string"
          description: "The resolutions code, it can be configured as a multiple level\
            \ hierarchy"
        description:
          type: "string"
          description: "The description of the resolution"
        name:
          type: "string"
          description: "The name of the resolution"
        task:
          type: "array"
          items:
            $ref: '#/components/schemas/Task'
      allOf:
      - $ref: '#/components/schemas/Entity'


    ExportJob:
      description: "Represents a task used to export resources to a file"
      type: "object"
      properties:
        completionDate:
          type: "string"
          format: "date-time"
          description: "Data at which the job was completed"
        contentType:
          type: "string"
          description: "The format of the exported data"
        creationDate:
          type: "string"
          format: "date-time"
          description: "Date at which the job was created"
        errorLog:
          type: "string"
          description: "Reason for failure"
        href:
          type: "string"
          description: "Reference of the export job"
        id:
          type: "string"
          description: "Identifier of the export job"
        path:
          type: "string"
          description: "URL of the root resource acting as the source for streaming\
            \ content to the file specified by the export job"
        query:
          type: "string"
          description: "Used to scope the exported data"
        status:
          description: "Status of the export job (not started, running, succeeded, failed)"
          $ref: '#/components/schemas/JobStateType'
        url:
          type: "string"
          format: "uri"
          description: "URL of the file containing the data to be exported"
      allOf:
      - $ref: '#/components/schemas/Entity'


    FileDocument:
      description: "A document accompanying an entity"
      type: "object"
      properties:
        downloadUrl:
          type: "string"
          format: "uri"
          description: "URL where the document could be downloaded"
        fileType:
          type: "string"
          description: "Document file format of the file : csv, pdf, xls, txt... for\
            \ example"
        name:
          type: "string"
          description: "Document name"
        size:
          type: "integer"
          description: "Document file size  (by default in bytes)"
        sizeUnit:
          type: "integer"
          description: "Size unit (in bytes by default)"
      allOf:
      - $ref: '#/components/schemas/Entity'


    EntityAttachment:
      description: "Complements the description of an entity through video, pictures..."
      type: "object"
      properties:
        description:
          type: "string"
          description: "A narrative text describing the content of the attachment"
        href:
          type: "string"
          description: "Reference of the attachment"
        id:
          type: "string"
          description: "Unique identifier of the attachment"
        mimeType:
          type: "string"
          description: "Attachment mime type such as extension file for video, picture\
            \ and document"
        name:
          type: "string"
          description: "name given to the attachment"
        uri:
          type: "string"
          format: "uri"
          description: "Uniform Resource Identifier (URI) of the attachment"
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "The period for which this attachment is valid"
      allOf:
      - $ref: '#/components/schemas/Entity'


    Association:
      description: "Association is the class that describe a relationship between two\
        \ or more entity specifications based on a given association specification.\
        \ The role and type of each endpoint in the relationship is given by an association\
        \ role. The type of endpoints in the relationship should match the ones as defined\
        \ in the corresponding association role specification. A relationship between\
        \ entity specifications may be governed by conditions and rules which are addressed\
        \ by constraint references in this resource. Constraints for a relationship\
        \ may include new rules and conditions in addition to those defined for the\
        \ corresponding association specification"
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description of the association"
        href:
          type: "string"
          description: "Hyperlink reference to this association"
        id:
          type: "string"
          description: "unique identifier of the association"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "The last modified date of this association object"
        lifecycleStatus:
          type: "string"
          description: "Indicates the current lifecycle status"
        name:
          type: "string"
          description: "Name given to this association"
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "The period for which this association is valid"
        version:
          type: "string"
          description: "Version of this REST resource"
        associationSpec:
          $ref: '#/components/schemas/AssociationSpecRef'
          description: "The specification of this association"
        associationRole:
          $ref: '#/components/schemas/AssociationRole'
          description: "The role of this association"
        constraint:
          description: "Any constraints in this association"
          type: "array"
          items:
            $ref: '#/components/schemas/ConstraintRef'
      allOf:
      - $ref: '#/components/schemas/Entity'


    QuantityType:
      description: "Representation of a quantity of something. I can also be used to\
        \ represent a quantity range"
      properties:
        amount:
          type: "number"
          format: "decimal"
          description: "Measured amount"
        units:
          type: "string"
          description: "Units the quantity is measured in"
      required:
      - "units"
      - "amount"
      type: "object"


    Address:
      description: "Structured textual way of describing how to find a Property in an\
        \ urban area (country properties are often\ndefined differently).\nNote : Address\
        \ corresponds to SID UrbanPropertyAddress"
      type: "object"
      properties:
        city:
          type: "string"
          description: "City that the address is in"
        country:
          type: "string"
          description: "Country that the address is in"
        locality:
          type: "string"
          description: "\"An area of defined or undefined boundaries within a local\
            \ authority or other legislatively defined area, usually rural or semi rural\
            \ in nature.\" [ANZLIC-STREET], or a suburb \"a bounded locality within\
            \ a city, town or shire principally of urban character \" [ANZLICSTREET]"
        postcode:
          type: "string"
          description: "descriptor for a postal delivery area, used to speed and simplify\
            \ the delivery of mail (also know as zipcode)"
        stateOrProvince:
          type: "string"
          description: "the State or Province that the address is in"
        streetName:
          type: "string"
          description: "Name of the street or other street type"
        streetNr:
          type: "string"
          description: "Number identifying a specific property on a public street. It\
            \ may be combined with streetNrLast for ranged addresses"
        streetNrLast:
          type: "string"
          description: "Last number in a range of street numbers allocated to a property"
        streetNrLastSuffix:
          type: "string"
          description: "Last street number suffix for a ranged address"
        streetNrSuffix:
          type: "string"
          description: "the first street number suffix"
        streetSuffix:
          type: "string"
          description: "A modifier denoting a relative direction"
        streetType:
          type: "string"
          description: "alley, avenue, boulevard, brae, crescent, drive, highway, lane,\
            \ terrace, parade, place, tarn, way, wharf "
        subAddress:
          $ref: '#/components/schemas/SubAddress'
          description: "Within a property in an urban area, may refer to a building,\
            \ building cluster, or a floor of a multistory building"
      allOf:
      - $ref: '#/components/schemas/Entity'


    EntitySpecification:
      description: "EntitySpecification is a class that offers characteristics to describe\
        \ a type of entity. Entities are generic constructs that may be used to describe\
        \ bespoke business entities that are not effectively covered by the existing\
        \ SID model."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description of this REST resource"
        href:
          type: "string"
          description: "Hyperlink reference to this REST resource"
        id:
          type: "string"
          description: "Unique identifier of this REST resource"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date and time of the last update of this REST resource"
        lifecycleStatus:
          type: "string"
          description: "Used to indicate the current lifecycle status of this catalog\
            \ item"
        name:
          type: "string"
          description: "Name given to this REST resource"
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "The period for which this REST resource is valid"
        version:
          type: "string"
          description: "Entity specification version"
        attachment:
          type: "array"
          items:
            $ref: '#/components/schemas/EntityAttachment'
        entitySchema:
          $ref: '#/components/schemas/EntitySchemaRef'
        specCharacteristic:
          type: "array"
          items:
            $ref: '#/components/schemas/SpecCharacteristic'
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
      allOf:
      - $ref: '#/components/schemas/Entity'


    Event:
      description: "event with common attributes."
      type: "object"
      properties:
        eventId:
          type: "string"
          description: "The identifier of the notification."
        eventTime:
          type: "string"
          format: "date-time"
          description: "Time of the event occurrence."
        eventType:
          type: "string"
          description: "The type of the notification."
        correlationId:
          type: "string"
          description: "The correlation id for this event."
        domain:
          type: "string"
          description: "The domain of the event."
        title:
          type: "string"
          description: "The title of the event."
        description:
          type: "string"
          description: "An explnatory of the event."
        priority:
          type: "string"
          description: "A priority."
        timeOcurred:
          type: "string"
          format: "date-time"
          description: "The time the event occured."
        event:
          description: "The event linked to the involved resource object"
          $ref: '#/components/schemas/Any'
      allOf:
      - $ref: '#/components/schemas/Entity'


    SpecCharacteristic:
      description: "A characteristic quality or distinctive feature of a Specification.\
        \  The characteristic can be take on a discrete value, such as color, can take\
        \ on a range of values, (for example, sensitivity of 100-240 mV), or can be\
        \ derived from a formula (for example, usage time (hrs) = 30 - talk time *3).\
        \ Certain characteristics, such as color, may be configured during the ordering\
        \ or some other process."
      type: "object"
      properties:
        configurable:
          type: "boolean"
          description: "If true, the Boolean indicates that the SpecCharacteristic is\
            \ configurable"
        description:
          type: "string"
          description: "A narrative that explains in detail what the SpecCharacteristic\
            \ is"
        name:
          type: "string"
          description: "Name of the SpecCharacteristic"
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "The period for which the productSpecCharacteristic is valid"
        valueType:
          type: "string"
          description: "A kind of value that the characteristic can take on, such as\
            \ numeric, text and so forth"
        specCharacteristicValue:
          type: "array"
          items:
            $ref: '#/components/schemas/SpecCharacteristicValue'
        specCharRelationship:
          type: "array"
          items:
            $ref: '#/components/schemas/SpecCharRelationship'
      allOf:
      - $ref: '#/components/schemas/Entity'


    BusinessInteraction:
      type: "object"
      properties:
        description:
          type: "string"
          description: "A description of this interaction"
        id:
          type: "string"
          description: "The unique ID for this interaction"
        interactionData:
          type: "string"
          format: "date-time"
        interactionDataComplete:
          type: "string"
          format: "date-time"
        interactionDataStatus:
          type: "string"
      allOf:
      - $ref: '#/components/schemas/Entity'


    Response:
      type: "object"
      description: "A response to a request"
      properties:
        body:
          description: "The body of the response. For example for an HTTP response might\
            \ contain HTML for rendering."
          type: "string"
        header:
          description: "Items included in the header of the response. For example for\
            \ an HTTP response might contain negotiated locale."
          type: "array"
          items:
            $ref: '#/components/schemas/HeaderItem'
          title: "header"
        statusCode:
          description: "The status of the response. For example for an HTTP response\
            \ would be codes such as 200, 400, etc."
          type: "string"
      required:
      - "body"
      - "header"


    BasePlusEvent:
      description: "Base event with common attributes."
      type: "object"
      properties:
        eventId:
          type: "string"
          description: "The identifier of the notification."
        eventTime:
          type: "string"
          format: "date-time"
          description: "Time of the event occurrence."
        eventType:
          type: "string"
          description: "The type of the notification."
        correlationId:
          type: "string"
          description: "The correlation id for this event."
        domain:
          type: "string"
          description: "The domain of the event."
        title:
          type: "string"
          description: "The title of the event."
        description:
          type: "string"
          description: "An explnatory of the event."
        priority:
          type: "string"
          description: "A priority."
        timeOcurred:
          type: "string"
          format: "date-time"
          description: "The time the event occured."
        fieldPath:
          type: "string"
          description: "The path identifying the object field concerned by this notification."
      allOf:
      - $ref: '#/components/schemas/Entity'


    MediumCharacteristic:
      type: "object"
      description: "Describes the contact medium characteristics that could be used\
        \ to contact a party (an individual or an organization)"
      properties:
        city:
          type: "string"
          description: "The city"
        country:
          type: "string"
          description: "The country"
        emailAddress:
          type: "string"
          description: "Full email address in standard format"
        faxNumber:
          type: "string"
          description: "The fax number of the contact"
        contactType:
          type: "string"
          description: "The type of contact, for example: phone number such as mobile,\
            \ fixed home, fixed office. postal address such as shipping instalation…"
        socialNetworkId:
          type: "string"
          description: "Identifier as a member of a social network"
        phoneNumber:
          type: "string"
          description: "The primary phone number of the contact"
        postCode:
          type: "string"
          description: "Postcode"
        stateOrProvince:
          type: "string"
          description: "State or province"
        street1:
          type: "string"
          description: "Describes the street"
        street2:
          type: "string"
          description: "Complementary street description"
      allOf:
      - $ref: '#/components/schemas/Entity'


    SiteRelationship:
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the related site"
        id:
          type: "string"
          description: "Unique identifier of the related site entity within the server"
        role:
          type: "string"
          description: "Role of the related site in the relationship"
        relationshipType:
          type: "string"
          description: "Type of relationship"
        validFor:
          $ref: '#/components/schemas/TimePeriod'
          description: "Validity for the relationship"
      allOf:
      - $ref: '#/components/schemas/Entity'


    Task:
      description: "A step or task along in the process of implementation a Change Request."
      type: "object"
      properties:
        description:
          type: "string"
          description: "The description of the task."
        name:
          type: "string"
          description: "The name of the task."
        state:
          type: "string"
          description: "The state of the task."
      allOf:
      - $ref: '#/components/schemas/Entity'


    RetrieveLocationRelation:
      type: "object"
      properties:
        distance:
          type: "string"
        href:
          type: "string"
        id:
          type: "string"
        status:
          type: "string"
        time:
          type: "string"
          format: "date-time"
        intersection:
          type: "array"
          items:
            $ref: '#/components/schemas/GeographicLocation'
        location:
          $ref: '#/components/schemas/GeographicLocationRef'
      allOf:
      - $ref: '#/components/schemas/Entity'


    Quantity:
      type: "object"
      description: "An amount in a given unit"
      properties:
        amount:
          type: "number"
          format: "float"
          default: 1
          description: "Numeric value in a given unit"
        units:
          type: "string"
          description: "Unit"


    polymorphicPattern:
      type: "object"
      properties:
        '@schemaLocation':
          type: "string"
          format: "uri"
          description: "A URI to a JSON-Schema file that defines additional attributes\
            \ and relationships"
          example:
          - "http://host/schemas/Subclass.schema.json"
        '@baseType':
          type: "string"
          description: "When sub-classing, this defines the super-class"
          example:
          - "Place"
          - "ServiceSpecification"
        '@type':
          type: "string"
          description: "When sub-classing, this defines the sub-class entity name"
          example:
          - "VendorProductOffering"
          - "DroneServiceSpecification"
## MonE: Comment out
##      dependencies:
##        '@schemaLocation':
##        - "@baseType"
##        - "@type"


    RelatedEntity:
      description: "A reference to an entity, where the type of the entity is not known\
        \ in advance."
      type: "object"
      required:
      - "id"
      - "role"
      - "@referredType"
      properties:
        role:
          type: "string"
          description: "The role of an entity."
      allOf:
      - $ref: '#/components/schemas/EntityRef'


    EntitySpecificationRef:
      description: "reference to an EntitySpecification object"
      type: "object"
      properties:
        href:
          type: "string"
          description: "Hyperlink reference to the target EntitySpecification"
        id:
          type: "string"
          description: "reference id to the target EntitySpecification"
        name:
          type: "string"
          description: "Name given to the EntitySpecification"
        version:
          type: "string"
          description: "EntitySpecification version"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '#/components/schemas/Entity'


    BaseEvent:
      description: "Base event with common attributes."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Identifier of the Process flow"
        href:
          type: "string"
          description: "Reference of the ProcessFlow"
        eventId:
          type: "string"
          description: "The identifier of the notification."
        eventTime:
          type: "string"
          format: "date-time"
          description: "Time of the event occurrence."
        eventType:
          type: "string"
          description: "The type of the notification."
        correlationId:
          type: "string"
          description: "The correlation id for this event."
        domain:
          type: "string"
          description: "The domain of the event."
        title:
          type: "string"
          description: "The title of the event."
        description:
          type: "string"
          description: "An explnatory of the event."
        priority:
          type: "string"
          description: "A priority."
      allOf:
      - $ref: '#/components/schemas/Entity'


    Incident:
      description: "An Incident is a record of an event that has altered the operational\
        \ state of a entity (Resource, Service or Customers Product)"
      type: "object"
      properties:
        description:
          type: "string"
          description: "The description of the incident."
        name:
          type: "string"
          description: "The name of the incident."
      allOf:
      - $ref: '#/components/schemas/Entity'


    CalendarEventRef:
      type: "object"
      description: "Reference of a CalendarEvent"
      properties: {}
      allOf:
      - $ref: '#/components/schemas/EntityRef'


    AssociationRoleSpec:
      description: "This embedded object represents the role and type of each entity\
        \ involved in a relationship."
      type: "object"
      properties:
        aggregation:
          type: "string"
        defaultQuantity:
          type: "integer"
        entityType:
          type: "string"
        isNavigable:
          type: "boolean"
        isSource:
          type: "boolean"
        maxQuantity:
          type: "integer"
        minQuantity:
          type: "integer"
        role:
          type: "string"
      allOf:
      - $ref: '#/components/schemas/Entity'


