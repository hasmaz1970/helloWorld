#############################################################################
## 1. OPENAPI
#############################################################################
openapi: 3.0.2

#############################################################################
## 2. INFO
#############################################################################
info:
  version: 1.0.0
  title: TMFORUM Common Schema (Data Type) Definitions for APIs
  contact:
    name: MonetizeHub.IO Project Support
    
  license:
    name: TMFORUM RAND
    url: https://github.com/tmforum-rand/RAND-LICENSE 
  description: |
    <!-- Note that this description is a MARKDOWN Block -->

    **This Open API specification does NOT contain any valid PATHS/OPERATIONS!!!. It ONLY contains COMMON SCHEMA (TYPE) DEFINITIONS referred by other API specifications.**

    Thus, in this context COMMON SCHEMA (TYPE) DEFINITIONS mean shared entity models or baseline objects that can be reused with or without extension.
    
#############################################################################
## 3. SERVERS
#############################################################################
servers:
  - url: https://monetizehub.io/demos/current/apis/private/
    description: MonE Private APIs and Schemas Specification

#############################################################################
## 4. PATHS
#############################################################################
paths:
  /readMe:
    get:
      summary: This is a placeholder nouse operation. (to bypass Swagger UI limitation of a specification with ONLY data models without operation)
      operationId: readMe
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string


#############################################################################
## 5. COMPONENTS
#############################################################################
components:
  schemas:


    UsageCharacteristic:
      description: "Provides the value of a given characteristic"
      type: "object"
      properties:
        name:
          type: "string"
          description: "The name of the usage characteristic"
        value:
          type: "string"
          description: "A discrete value that the characteristic can take on"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductSpecCharacteristic:
      description: "A characteristic quality or distinctive feature of a ProductSpecification.\
        \  The characteristic can be take on a discrete value, such as color, can take\
        \ on a range of values, (for example, sensitivity of 100-240 mV), or can be\
        \ derived from a formula (for example, usage time (hrs) = 30 - talk time *3).\
        \ Certain characteristics, such as color, may be configured during the ordering\
        \ or some other process."
      type: "object"
      properties:
        configurable:
          type: "boolean"
          description: "If true, the Boolean indicates that the productSpecCharacteristic\
            \ is configurable"
        description:
          type: "string"
          description: "A narrative that explains in detail what the productSpecCharacteristic\
            \ is"
        name:
          type: "string"
          description: "Name of the productSpecCharacteristic"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the productSpecCharacteristic is valid"
        valueType:
          type: "string"
          description: "A kind of value that the characteristic can take on, such as\
            \ numeric, text and so forth"
        productSpecCharRelationship:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecCharRelationship'
        productSpecCharacteristicValue:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecCharacteristicValue'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductSpecificationRelationship:
      description: "A migration, substitution, dependency or exclusivity relationship\
        \ between/among product specifications."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the productSpecification"
        id:
          type: "string"
          description: "Unique identifier of the productSpecification"
        relationshipType:
          type: "string"
          description: "Type of relationship such as migration, substitution, dependency,\
            \ exclusivity"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the productSpecificationRelationship is\
            \ valid"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    QuoteTerm:
      description: "Description of  aproduct Term linked to this quoteItem. This represent\
        \ a commitment with a duration"
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description of the quoteTerm"
        duration:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Quantity'
          description: "Duration of the Term associated with this item"
        name:
          type: "string"
          description: "Name of the quoteTerm"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    UsageSpecificationRef:
      description: "UsageSpecification reference. UsageSpecification is a detailed description\
        \ of a usage event that are of interest to the business and can have charges\
        \ applied to it. It is comprised of characteristics, which define all attributes\
        \ known for a particular type of usage."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of usage specification"
        id:
          type: "string"
          description: "Usage specification unique identifier"
        name:
          type: "string"
          description: "The name of the usage specification"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductSpecificationCharacteristicRelationship:
      description: "An aggregation, migration, substitution, dependency or exclusivity\
        \ relationship between/among productSpecificationCharacteristics."
      type: "object"
      properties:
        id:
          type: "string"
          description: "the identifier of the associated product specification"
        href:
          type: "string"
          description: "Hyperlink reference to the target product specification"
        charSpecSeq:
          type: "integer"
          description: "The order in which a CharacteristicSpecification appears within\
            \ another CharacteristicSpecification that defines a grouping of CharacteristicSpecifications.\n\
            \nFor example, a grouping may represent the name of an individual. The given\
            \ name is first, the middle name is second, and the last name is third."
        name:
          type: "string"
          description: "Name of the target product specification characteristic"
        relationshipType:
          type: "string"
          description: "Type of relationship such as aggregation, migration, substitution,\
            \ dependency, exclusivity"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the productSpecificationCharacteristicRelationship\
            \ is valid"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    NetworkProductRef:
      type: "object"
      description: "Reference of a product"
      properties:
        '@referredType':
          type: "string"
          description: "Generic attribute indicating the name of the class type of the\
            \ referred resource entity"
        href:
          type: "string"
          description: "Reference to the network product"
        id:
          type: "string"
          description: "Unique identifier of the network product"
        name:
          type: "string"
          description: "Network product name"
        publicIdentifier:
          type: "string"
          description: "Public number associated to the product (msisdn number for mobile\
            \ line for example)"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductTerm:
      description: "Description of a productTerm linked to this product. This represent\
        \ a commitment with a duration"
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description of the productTerm"
        duration:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Quantity'
          description: "Duration of the productTerm"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "productTerm validity period"
        name:
          type: "string"
          description: "Name of the productTerm"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    BundledProductSpecification:
      description: "A type of ProductSpecification that belongs to a grouping of ProductSpecifications\
        \ made available to the market. It inherits of all attributes of ProductSpecification."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the product specification"
        id:
          type: "string"
          description: "Unique identifier of the product specification"
        lifecycleStatus:
          type: "string"
          description: "Used to indicate the current lifecycle status"
        name:
          type: "string"
          description: "Name of the product specification"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductOfferingRef:
      description: "ProductOffering reference. A product offering represents entities\
        \ that are orderable from the provider of the catalog, this resource includes\
        \ pricing information."
      type: "object"
      properties: {}
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    LoyaltyBalance:
      description: "A loyalty balance, containing a balance unit and value."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty balance."
        href:
          type: "string"
          description: "A reference to the loyalty member’s loyalty balance."
        quantity:
          type: "object"
          description: "Unit and value of the balance."
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Money'
        loyaltyProgramMember:
          type: "object"
          description: "Reference to the loyaltyProgramMember to whom the loyaltyAccount\
            \ belongs."
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/LoyaltyProgramMemberRef'
        validFor:
          type: "object"
          description: "The validity period in which loyalty can be burned using the\
            \ account."
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'


    BundledProductOfferingOption:
      type: "object"
      description: "A set of numbers that specifies the lower and upper limits for a\
        \ ProductOffering that can be procured as part of the related BundledProductOffering.\
        \ Values can range from 0 to unbounded"
      properties:
        numberRelOfferDefault:
          type: "integer"
          description: "Default number of produc offereings that should be procured\
            \ as part of the related BundledProductOffering"
        numberRelOfferLowerLimit:
          type: "integer"
          description: "lower limit for a product offering that can be procured as part\
            \ of the related BundledProductOffering"
        numberRelOfferUpperLimit:
          type: "integer"
          description: "upper limit for a product offering that can be procured as part\
            \ of the related BundledProductOffering"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    LoyaltyRuleEventType:
      description: "Resource containing a the ID of a event type to link to a loyalty\
        \ rule."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty event type."
        href:
          type: "string"
          description: "A reference to the loyalty event type."


    ProductRefOrValue:
      description: "A product to be created defined by value or existing defined by\
        \ reference. The polymorphic attributes @type, @schemaLocation & @referredType\
        \ are related to the product entity and not the RelatedProductRefOrValue class\
        \ itself"
      type: "object"
      properties: {}
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductRef'
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/Product'


    LoyaltyAccount:
      description: "A loyalty account, containing loyalty balances."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the account."
        href:
          type: "string"
          description: "A reference to the loyalty member’s loyalty account."
        loyaltyProgramProduct:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/LoyaltyProgramProductRef'


    QuoteStateType:
      type: "string"
      description: "Possible values for the state of the quote"
      enum:
      - "rejected"
      - "pending"
      - "inProgress"
      - "cancelled"
      - "approved"
      - "accepted"


    PricingLogicAlgorithm:
      type: "object"
      description: "The PricingLogicAlgorithm entity represents an instantiation of\
        \ an interface specification to external rating function (without a modeled\
        \ bahavior in SID). Some of the parameters of the interface definiition may\
        \ be already set (such as price per unit) and some may be gathered during the\
        \ rating process from the event (such as call duration) or from ProductCharacteristicValues\
        \ (such as assigned bandwidth)"
      properties:
        description:
          type: "string"
          description: "Description of the PricingLogicAlgorithm"
        href:
          type: "string"
          description: "hyperlink reference of this PricingLogicAlgorithm"
        id:
          type: "string"
          description: "unique id of the PricingLogicAlgorithm"
        name:
          type: "string"
          description: "Name given to the PricingLogicAlgorithm"
        plaSpecId:
          type: "string"
          description: "id of corresponding PricingLogicAlgorithm specification"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the PricingLogicAlgorithm is valid"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    Usage:
      description: "An occurrence of employing a Product, Service, or Resource for its\
        \ intended purpose, which is of interest to the business and can have charges\
        \ applied to it. It is comprised of characteristics, which represent attributes\
        \ of usage."
      type: "object"
      properties:
        date:
          type: "string"
          format: "date-time"
          description: "Date of usage"
        description:
          type: "string"
          description: "Description of usage"
        href:
          type: "string"
          description: "Reference of usage"
        id:
          type: "string"
          description: "Usage unique identifier"
        status:
          type: "string"
          description: "Status of usage"
        usageType:
          type: "string"
          description: "Type of usage"
        usageSpecification:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/UsageSpecificationRef'
        usageCharacteristic:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/UsageCharacteristic'
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        ratedProductUsage:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/RatedProductUsage'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    UsageVolumeProduct:
      type: "object"
      description: "A bucket (called UsageVolumeProduct in the SID model) represents\
        \ a quantity of usage, as 2 hours national calls or 50 sms for example. It could\
        \ be either a quantity or an amount in a currency (i.e. It could represent a\
        \ fixed number of SMS, MMS, minutes of calls, quantity of data, number of events\
        \ as well as a specific amount in a given currency). It requires one or more\
        \ network products from which usages will debit the bucket."
      properties:
        bucketBalance:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/UsageVolumeBalance'
        bucketCounter:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ConsumptionSummary'
        id:
          type: "string"
          description: "Unique identifier of the bucket"
        isShared:
          type: "boolean"
          description: "True if the bucket is shared between several devices or users"
        name:
          type: "string"
          description: "Bucket name"
        product:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/NetworkProduct'
        usageType:
          type: "string"
          description: "Type of usage concerned by the bucket, such as voice, sms, data"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    LoyaltyEventType:
      description: "An event type used to match filter incoming loyalty events."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty event type."
        href:
          type: "string"
          description: "A reference to the loyalty event type."
        eventType:
          type: "string"
          description: "The type of loyalty event expected to trigger the loyalty rule\
            \ evaluation, e.g. a CustomerOrder or an Invoice. The eventType should be\
            \ unique to prevent existing resources not being reused. An eventType that\
            \ already exists will result in a 422 error."


    OrderStateType:
      type: "string"
      description: "Possible values for the state of the order"
      enum:
      - "acknowledged"
      - "rejected"
      - "pending"
      - "held"
      - "inProgress"
      - "cancelled"
      - "completed"
      - "failed"
      - "partial"
      - "assessingCancellation"
      - "pendingCancellation"


    ProductRef:
      type: "object"
      properties: {}
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    ProductOfferingQualification:
      type: "object"
      description: "ProductOfferingQualification is used to perform a commercial eligibility.\
        \ It allows to retrieve a list of productOffering that are commercially available\
        \ in the context of the interaction (defined be place, channel, party, product)."
      properties:
        channel:
          description: "Channel used for the qualification"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/ChannelRef'
        category:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/CategoryRef'
        description:
          type: "string"
          description: "Description of the productOfferingQualification"
        effectiveQualificationDate:
          type: "string"
          format: "date-time"
          description: "Effective date to productOfferingQualification completion"
        expectedPOQCompletionDate:
          type: "string"
          format: "date-time"
          description: "Date when the requester expect to provide an answer for the\
            \ qualification request"
        expirationDate:
          type: "string"
          format: "date-time"
          description: "Date the qualification response expires"
        href:
          type: "string"
          description: "Hyperlink to access the productOfferingQualification"
        id:
          type: "string"
          description: "Unique identifier of the productOfferingQualification resource"
        instantSyncQualification:
          type: "boolean"
          description: "An indicator which when the value is \"true\" means that requester\
            \ expects to get qualifcation result immediately in the response. If the\
            \ indicator is true then the response code of 200 indicates the operation\
            \ is successful otherwise a task is created with a response 201."
        note:
          type: "array"
          description: "Free form text associated with the qualification request"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Note'
        productOfferingQualificationDate:
          type: "string"
          format: "date-time"
          description: "Date when the productOfferingQualification has been submitted"
        productOfferingQualificationItem:
          type: "array"
          description: "Qualification item for a product or a category"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductOfferingQualificationItem'
        provideAlternative:
          type: "boolean"
          description: "An indicator which when the value is \"true\" means that alternative\
            \ solutions should be provided"
        provideOnlyAvailable:
          type: "boolean"
          description: "An indicator which when the value is \"true\" means that only\
            \ available product offering must be listed in the response"
        provideUnavailabilityReason:
          type: "boolean"
          description: "An indicator which when the value is \"true\" means that unavailability\
            \ reason are expected for non available product offering"
        qualificationResult:
          type: "string"
          description: "Result of the qualification (example: green, yellow, red)"
        relatedParty:
          type: "array"
          description: "Party playing a role for this qualification (as requester for\
            \ example)"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        place:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/RelatedPlaceRefOrValue'
        requestedPOQCompletionDate:
          type: "string"
          format: "date-time"
          description: "Deadline date when the requester expected a qualification answer"
        state:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TaskStateType'
          description: "State of the productOfferingQualification defined in the state\
            \ engine"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PriceAlteration:
      description: "Is an amount, usually of money, that modifies the price charged\
        \ for an order item."
      type: "object"
      required:
      - "priceType"
      - "price"
      properties:
        applicationDuration:
          type: "integer"
          description: "Duration during which the alteration applies on the order item\
            \ price (for instance 2 months free of charge for the recurring charge)"
        description:
          type: "string"
          description: "A narrative that explains in detail the semantics of this order\
            \ item price alteration"
        name:
          type: "string"
          description: "Name of the order item price alteration"
        productOfferingPrice:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductOfferingPriceRef'
        priceType:
          type: "string"
          description: "A category that describes the price such as recurring, one time\
            \ and usage."
        priority:
          type: "integer"
          description: "Priority level for applying this alteration among all the defined\
            \ alterations on the order item price"
        recurringChargePeriod:
          type: "string"
          description: "Could be month, week..."
        unitOfMeasure:
          type: "string"
          description: "Could be minutes, GB..."
        price:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/Price'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PromotionCriteriaGroup:
      description: "The group of the criteria of the promotion. The logical relationship\
        \ between different groups is decided by the relationTypeInGroup."
      type: "object"
      properties:
        groupName:
          type: "string"
          description: "Name of the group."
        id:
          type: "string"
          description: "Unique Identifier"
        relationTypeInGroup:
          type: "string"
          description: "AND/OR,The logical relation type amongst the various criteria\
            \ inside a promotion criteria group."
        criteria:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/PromotionCriteria'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductSpecCharacteristicValue:
      description: "A number or text that can be assigned to a ProductSpecCharacteristic."
      type: "object"
      properties:
        default:
          type: "boolean"
          description: "Indicates if the value is the default value for a characteristic"
        unitOfMeasure:
          type: "string"
          description: "Could be minutes, GB..."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period of time for which a value is applicable"
        value:
          type: "string"
          description: "A discrete value that the characteristic can take on"
        valueFrom:
          type: "string"
          description: "The low range value that a characteristic can take on"
        valueTo:
          type: "string"
          description: "The upper range value that a characteristic can take on"
        valueType:
          type: "string"
          description: "A kind of value that the characteristic can take on, such as\
            \ numeric, text, and so forth"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductOfferingQualificationRef:
      type: "object"
      description: "It's a productOfferingQualification that has been executed previously"
      properties: {}
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    ProductSpecificationCharacteristicValue:
      description: "A ProductSpecificationCharacteristicValue object is used to define\
        \ a set of attributes, each of which can be assigned to a corresponding set\
        \ of attributes in a ProductSpecificationCharacteristic object. The values of\
        \ the attributes in the ProductSpecificationCharacteristicValue object describe\
        \ the values of the attributes that a corresponding ProductSpecificationCharacteristic\
        \ object can take on."
      type: "object"
      properties:
        isDefault:
          type: "boolean"
          description: "Indicates if the value is the default value for a characteristic"
        rangeInterval:
          type: "string"
          description: "An indicator that specifies the inclusion or exclusion of the\
            \ valueFrom and valueTo attributes. If applicable, possible values are \"\
            open\", \"closed\", \"closedBottom\" and \"closedTop\"."
        regex:
          type: "string"
          description: "Regular expression to define constraint on the allowed value"
        unitOfMeasure:
          type: "string"
          description: "A length, surface, volume, dry measure, liquid measure, money,\
            \ weight, time, and the like. In general, a determinate quantity or magnitude\
            \ of the kind designated, taken as a standard of comparison for others of\
            \ the same kind, in assigning to them numerical values, as 1 foot, 1 yard,\
            \ 1 mile, 1 square foot."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period of time for which a value is applicable"
        value:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Any'
          description: "A discrete value that the characteristic can take on, or the\
            \ actual value of the characteristic"
        valueFrom:
          type: "string"
          description: "The low range value that a characteristic can take on"
        valueTo:
          type: "string"
          description: "The upper range value that a characteristic can take on"
        valueType:
          type: "string"
          description: "A kind of value that the characteristic can take on, such as\
            \ numeric, text, and so forth"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    UsageConsumptionReportRequest:
      type: "object"
      description: "An UsageConsumptionReportRequest allows to manage the calculation\
        \ request of an usage consumption report"
      properties:
        bucket:
          type: "array"
          description: "Reference of the buckets for which the usage consumption report\
            \ is requested"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/UsageVolumeProductRef'
        creationDate:
          type: "string"
          format: "date-time"
          description: "Date and time of the request creation"
        href:
          type: "string"
          description: "Reference of the usage consumption report request"
        id:
          type: "string"
          description: "Unique identifier of the usage consumption report request given\
            \ by the server"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date when the status was last changed"
        product:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/NetworkProductRef'
          description: "Network product reference for which the usage consumption report\
            \ is requested"
        relatedParty:
          type: "array"
          description: "Reference and role of the related parties for which the usage\
            \ consumption report is requested"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        status:
          type: "string"
          description: "Status of the usage consumption report request (InProgress or\
            \ done)"
        usageConsumptionReport:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/UsageConsumptionReportRef'
          description: "References of the usage consumption report (given when it has\
            \ been calculated and the status of the request is done)"
        validPeriod:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "Validity period"


    LoyaltyProgramMemberRef:
      description: "Reference to a loyalty member."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty program member."
        href:
          type: "string"
          description: "A reference to the loyalty program member."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    UsageConsumptionReportRef:
      type: "object"
      description: "Reference of an usage consumption report"
      properties:
        description:
          type: "string"
          description: "Free short text describing the usage consumption report content"
        effectiveDate:
          type: "string"
          format: "date-time"
          description: "Date and time when the usage consumption report was calculated\
            \ and generated"
        href:
          type: "string"
          description: "Hyperlink to access the usage consumption report"
        id:
          type: "string"
          description: "Unique identifier of the usage consumption report given by the\
            \ server"
        name:
          type: "string"
          description: "Usage consumption report name"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PromotionPattern:
      description: "Detailed pattern of the promotion.The pattern decides the conditions\
        \ of promotion and the benefit of the promotion to be given to the eligible\
        \ customer."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description"
        id:
          type: "string"
          description: "Unique identifier."
        name:
          type: "string"
          description: "Name"
        priority:
          type: "integer"
          description: "Priority. Smaller number means high."
        relationTypeAmongGroup:
          type: "string"
          description: "AND/OR ,The logical relation type amongst the promotion criteria\
            \ group."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period  for which the promotion pattern  is valid."
        action:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/PromotionAction'
        criteriaGroup:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/PromotionCriteriaGroup'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    UsageVolumeBalance:
      type: "object"
      description: "The balance (called UsageVolumeBalance in the SID model) defines\
        \ the remaining allowed product usage quantity in terms of volume, time, currency\
        \ or events. It corresponds to the initial allowed usage quantity minus the\
        \ usage consumed on the bucket."
      properties:
        remainingValue:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Quantity'
          description: "Numeric remaining value for the bucket given in the unit (for\
            \ example 1.9). This numeric value could be used for calculation for example"
        remainingValueName:
          type: "string"
          description: "Remaining value in a formatted string for the bucket given in\
            \ the balance unit (for example 1.9 Gb). This formatted string could be\
            \ used for display needs for example"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "Balance period between a start date time and an end date time.\
            \ For prepaid bucket, the period of the balance is between the  effective\
            \ date of the usage consumption report generation and the end date of the\
            \ bucket. For postpaid bucket, the period of the balance is between the\
            \ effective date of the usage consumption report generation and the next\
            \ bill date."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    LoyaltyRule:
      description: "Loyalty rule, containing conditions, event types and actions."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty rule."
        href:
          type: "string"
          description: "A reference to the loyalty rule."
        isCNF:
          type: "boolean"
          description: "Unit and value of the balance."
        hasSubRules:
          type: "boolean"
          description: "A Boolean attribute that signifies whether this loyalty rule\
            \ has one or more sub-rules. Sub-rules are used to enforce a hierarchical\
            \ nesting of rules, so that parent rules may control the execution and other\
            \ semantics of sub-rules that they contain."
        isMandatoryEvaluation:
          type: "boolean"
          description: "A Boolean attribute that, if true, signifies that evaluation\
            \ (and possibly action execution) of this entity is mandatory and must be\
            \ attempted. If the Mandatory property value of this entity is false, then\
            \ the evaluation of this entity is considered to be 'best effort' and may\
            \ be ignored."
        usage:
          type: "string"
          description: "A free-form string attribute that recommends how this policy\
            \ object should be used."
        keywords:
          type: "string"
          description: "A string attribute that defines a set of one or more keywords\
            \ that a policy administrator may use to assist in characterizing or categorizing\
            \ a policy object to facilitate search operations."
        policyName:
          type: "string"
          description: "A generic naming attribute that can be used to identify different\
            \ policy entities."
        commonName:
          type: "string"
          description: "A user-friendly identifier of the loyalty rule."
        description:
          type: "string"
          description: "A free-form description of the rule."
        loyaltyEventType:
          type: "array"
          description: "References to linked event types."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/LoyaltyEventTypeRef'
        loyaltyCondition:
          type: "array"
          description: "References to linked conditions."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/LoyaltyConditionRef'
        loyaltyAction:
          type: "array"
          description: "References to linked actions."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/LoyaltyActionRef'


    LoyaltyAccountRef:
      description: "Reference to a loyalty account."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the account."
        href:
          type: "string"
          description: "A reference to the loyalty member’s loyalty account."


    BaseProductRefOrValue:
      description: "In the context of a product order or a product offering qualification,\
        \ this data structure captures the product information useful to order or qualified\
        \  an existing subscribed product or to a new one. This is a subset of relevant\
        \ product attributes for ordering and qualification"
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the product"
        id:
          type: "string"
          description: "Unique identifier of the product"
        name:
          type: "string"
          description: "This is the name of the product."
        productCharacteristic:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
        realizingResource:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Resource.yaml#/components/schemas/ResourceRef'
        realizingService:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceRef'
        isBundle:
          type: "boolean"
          description: "If true, the product is a ProductBundle which is an instantiation\
            \ of a BundledProductOffering. If false, the product is a ProductComponent\
            \ which is an instantiation of a SimpleProductOffering."
        productRelationship:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductRelationship'
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        productSpecification:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecificationRef'
        relatedPlace:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/RelatedPlaceRefOrValue'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    TargetProductSchema:
      type: "object"
      description: "The reference object to the schema and type of target product which\
        \ is described by product specification"
      properties:
        '@type':
          type: "string"
          description: "Class type of the target product"
        '@schemaLocation':
          type: "string"
          format: "uri"
          description: "This field provides a link to the schema describing the target\
            \ product"
      required:
      - "@type"
      - "@schemaLocation"


    AlternateProduct:
      description: "In the context of a product offering qualification, this data structure\
        \ is useful to describe alternate product than can be proposed"
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the product"
        id:
          type: "string"
          description: "Unique identifier of the product"
        name:
          type: "string"
          description: "This is the name of the product."
        productCharacteristic:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
        productRelationship:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductRelationship'
        productSpecification:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecificationRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    LoyaltyAction:
      description: "Contains information on a loyalty action that should be applied\
        \ should certain conditions be met for a loyalty rule and program."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty event type."
        href:
          type: "string"
          description: "A reference to the loyalty event type."
        type:
          type: "string"
          description: "The type of loyalty action."
          enum:
          - "LoyaltyEarn"
          - "CustomerOrder"
          - "BusinessInteraction"
        actionAttributes:
          type: "object"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Any'
          description: "Additional attributes required to perform the action. These\
            \ attributes will depend on the type of the loyalty action. For example,\
            \ if it is a LoyaltyEarn action, there will be a “quantity” attribute value\
            \ pair indicating how many points should be earned."
        body:
          type: "object"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Any'
          description: "The body if the request that is made when this action i executed.\
            \ The body is assumed to be of type text/json. Any tokens denoted with {}\
            \ will be replaced by attributes present in: Member profile, actionAttributes\
            \ or event attributes in the loyalty event request."
        headers:
          type: "object"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Any'
          description: "The HTTP headers that is added to the action call."
        version:
          type: "string"
          description: "A string that identifies the version of the loyalty action."
        commonName:
          type: "string"
          description: "A user-friendly identifier of the loyalty execution point."
        description:
          type: "string"
          description: "A free-form description of the loyalty execution point."
        action:
          type: "string"
          description: "The HTTP operation to be used when calling the endpoint"
          enum:
          - "POST"
          - "PUT"
          - "GET"
          - "PATCH"
          - "DELETE"
        endpoint:
          type: "string"
          description: "The endpoint to call to trigger a BusinessInteraction, CustomerOrder\
            \ or LoyaltyEarn."


    ProductRequest:
      type: "object"
      properties:
        referredProduct:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductRef'
        description:
          type: "string"
          description: "Is the description of the product. It could be copied from the\
            \ description of the Product Offering."
        href:
          type: "string"
          description: "Reference of the product"
        id:
          type: "string"
          description: "Unique identifier of the product"
        isBundle:
          type: "boolean"
          description: "If true, the product is a ProductBundle which is an instantiation\
            \ of a BundledProductOffering. If false, the product is a ProductComponent\
            \ which is an instantiation of a SimpleProductOffering."
        isCustomerVisible:
          type: "boolean"
          description: "If true, the product is visible by the customer."
        name:
          type: "string"
          description: "Name of the product. It could be the same as the name of the\
            \ product offering"
        orderDate:
          type: "string"
          format: "date-time"
          description: "Is the date when the product was ordered"
        productSerialNumber:
          type: "string"
          description: "Is the serial number for the product. This is typically applicable\
            \ to tangible products e.g. Broadband Router."
        startDate:
          type: "string"
          format: "date-time"
          description: "Is the date from which the product starts"
        status:
          type: "string"
          description: "Is the lifecycle status of the product."
        terminationDate:
          type: "string"
          format: "date-time"
          description: "Is the date when the product was terminated"
        realizingService:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceRef'
        billingAccount:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/BillingAccountRef'
        productOffering:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductOfferingRef'
        agreement:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementRef'
        characteristic:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductCharacteristic'
        productRelationship:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductRelationship'
        realizingResource:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Resource.yaml#/components/schemas/RealizingResourceRef'
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        productPrice:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductPrice'
        productSpecification:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecificationRef'
        place:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Place'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PromotionCriteria:
      description: "Criteria of the promotion."
      type: "object"
      properties:
        criteriaOperator:
          type: "string"
          description: "The logic expression including parameter and operator. including:=,>,<,>=,<=,<>"
        criteriaPara:
          type: "string"
          description: "The parameter (factor) of the criteria.The basic factors are\
            \ abstracted from these data sources. There are several detail parameters\
            \ ."
        criteriaValue:
          type: "string"
          description: "The value is filled for the comparison of the criteria."
        id:
          type: "string"
          description: "Unique identifier."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    NetworkProduct:
      type: "object"
      description: "An instantiated network product (specialization of a product) subscribed\
        \ by a customer."
      properties:
        href:
          type: "string"
          description: "Reference to the network product"
        id:
          type: "string"
          description: "Unique identifier of the network product"
        name:
          type: "string"
          description: "Network product name"
        outOfBucketCounter:
          type: "array"
          description: "Counters detailing usage consumption out of the buckets"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ConsumptionSummary'
        publicIdentifier:
          type: "string"
          description: "Public number associated to the network product (msisdn number\
            \ for mobile line for example)"
        user:
          type: "array"
          description: "References of the users of the network product"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductRestriction:
      description: "In the context of a product order or a product offering qualification,\
        \ this data structure captures the product information useful to order or qualified\
        \  an existing subscribed product or to a new one. This is a subset of relevant\
        \ product attributes for ordering and qualification"
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the product"
        id:
          type: "string"
          description: "Unique identifier of the product"
        name:
          type: "string"
          description: "This is the name of the product."
        productCharacteristic:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
        productRelationship:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductRelationship'
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedPartyRef'
        productSpecification:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecificationRef'
        relatedPlace:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/RelatedPlace'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductInventoryRelationship:
      description: "Linked products to the one instantiate, such as [bundled] if the\
        \ product is a bundle and you want to describe the bundled products inside this\
        \ bundle; [reliesOn] if the product needs another already owned product to rely\
        \ on (e.g. an option on an already owned mobile access product) [targets] or\
        \ [isTargeted] (depending on the way of expressing the link) for any other kind\
        \ of links that may be useful"
      type: "object"
      required:
      - "relationshipType"
      - "product"
      properties:
        relationshipType:
          type: "string"
          description: "Type of the product relationship, such as [bundled] if the product\
            \ is a bundle and you want to describe the bundled products inside this\
            \ bundle; [reliesOn] if the product needs another already owned product\
            \ to rely on (e.g. an option on an already owned mobile access product)\
            \ [targets] or [isTargeted] (depending on the way of expressing the link)\
            \ for any other kind of links that may be useful"
        product:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'

## MonE: Duplicate Definition with same name. Renamed: LoyaltyAccount ==> LoyaltAccountRecord
    LoyaltyAccountRecord:
      description: "A record of a loyalty action that was applied."
      type: "object"
      title: "LoyaltyExecutionPoint"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty event type."
        href:
          type: "string"
          description: "A reference to the loyalty event type."
        type:
          type: "string"
          description: "The type of loyalty action."
          enum:
          - "LoyaltyEarn"
          - "CustomerOrder"
          - "BusinessInteraction"
        actionAttributes:
          type: "object"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas//definitions/Any'
          description: "Additional attributes required to perform the action. These\
            \ attributes will depend on the type of the loyalty action. For example,\
            \ if it is a LoyaltyEarn action, there will be a “quantity” attribute value\
            \ pair indicating how many points should be earned."
        body:
          type: "object"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas//definitions/Any'
          description: "The body if the request that is made when this action i executed.\
            \ The body is assumed to be of type text/json. Any tokens denoted with {}\
            \ will be replaced by attributes present in: Member profile, actionAttributes\
            \ or event attributes in the loyalty event request."
        headers:
          type: "object"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas//definitions/Any'
          description: "The HTTP headers that is added to the action call."
        version:
          type: "string"
          description: "A string that identifies the version of the loyalty action."
        commonName:
          type: "string"
          description: "A user-friendly identifier of the loyalty execution point."
        description:
          type: "string"
          description: "A free-form description of the loyalty execution point."
        action:
          type: "string"
          description: "The HTTP operation to be used when calling the endpoint"
          enum:
          - "POST"
          - "PUT"
          - "GET"
          - "PATCH"
          - "DELETE"
        endpoint:
          type: "string"
          description: "The endpoint to call to trigger a BusinessInteraction, CustomerOrder\
            \ or LoyaltyEarn."
        datetime:
          type: "string"
          description: "The timestamp that the action was applied."
          format: "date-time"


    UsageVolumeProductRef:
      type: "object"
      description: "Reference of a bucket"
      properties:
        '@referredType':
          type: "string"
          description: "Generic attribute indicating the name of the class type of the\
            \ referred resource entity"
        id:
          type: "string"
          description: "Unique identifier of the bucket"
        name:
          type: "string"
          description: "Bucket name"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    BundledProductOffering:
      type: "object"
      description: "A type of ProductOffering that belongs to a grouping of ProductOfferings\
        \ made available to the market. It inherits of all attributes of ProductOffering."
      properties:
        href:
          type: "string"
          description: "Unique reference of the BundledProductOffering"
        id:
          type: "string"
          description: "Unique identifier of the BundledProductOffering"
        lifecycleStatus:
          type: "string"
          description: "Used to indicate the current lifecycle status"
        name:
          type: "string"
          description: "Name of the BundledProductOffering"
        bundledProductOfferingOption:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/BundledProductOfferingOption'
          description: "A set of numbers that specifies the lower and upper limits for\
            \ a ProductOffering that can be procured as part of the related BundledProductOffering.\
            \ Values can range from 0 to unbounded."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    LoyaltyProgramMember:
      description: "A person or group that opts in to a loyalty program."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty program member."
        href:
          type: "string"
          description: "A reference to the loyalty program member."
        name:
          type: "string"
          description: "The loyalty member’s name."
        status:
          type: "string"
          description: "A free-form field in which the member’s status may be captured,\
            \ e.g. 'active', 'suspended', .etc."
        ValidFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period during which the loyalty member is valid for."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductOfferingPrice:
      description: "Is based on both the basic cost to develop and produce products\
        \ and the enterprises policy on revenue targets. This price may be further revised\
        \ through discounting (productOfferPriceAlteration). The price, applied for\
        \ a productOffering may also be influenced by the productOfferingTerm, the customer\
        \ selected, eg: a productOffering can be offered with multiple terms, like commitment\
        \ periods for the contract. The price may be influenced by this productOfferingTerm.\
        \ A productOffering may be cheaper with a 24 month commitment than with a 12\
        \ month commitment."
      type: "object"
      properties:
        id:
          type: "string"
          description: "unique id of this resource"
        href:
          type: "string"
          description: "Reference of the ProductOfferingPrice"
        name:
          type: "string"
          description: "Name of the productOfferingPrice"
        description:
          type: "string"
          description: "Description of the productOfferingPrice"
        version:
          type: "string"
          description: "ProductOffering version"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the productOfferingPrice is valid"
        priceType:
          type: "string"
          description: "A category that describes the price, such as recurring, discount,\
            \ allowance, penalty, and so forth."
        unitOfMeasure:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Quantity'
          description: "A number and unit representing how many (for instance 1 dozen)\
            \ of an ProductOffering is available at the offered price. Its meaning depends\
            \ on the priceType. It could be a price, a rate, or a discount."
        recurringChargePeriodType:
          type: "string"
          description: "The period to repeat the application of the price\nCould be\
            \ month, week..."
        recurringChargePeriodLength:
          type: "integer"
          description: "the period of the recurring charge:  1, 2, ... .It sets to zero\
            \ if it is not applicable"
        '@type':
          type: "string"
          description: "The class type of this Product offering"
        '@baseType':
          type: "string"
          description: "the immediate base class type of this product offering"
        '@schemaLocation':
          type: "string"
          description: "hyperlink reference to the schema describing this resource"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "the last update time of this ProductOfferingPrice"
        isBundle:
          type: "boolean"
          description: "A flag indicating if this ProductOfferingPrice is composite\
            \ (bundle) or not"
        lifecycleStatus:
          type: "string"
          description: "the lifecycle status of this ProductOfferingPrice"
        price:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Money'
          description: "The amount of money that characterizes the price."
        percentage:
          type: "number"
          format: "float"
          description: "Percentage to apply for ProductOfferPriceAlteration (Discount)"
        bundledPopRelationship:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/BundledProductOfferingPriceRelationship'
          description: "this object represents a bundle relationship from a bundle product\
            \ offering price (parent) to a simple product offering price (child). A\
            \ simple product offering price may participate in more than one bundle\
            \ relationship."
        popRelationship:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductOfferingPriceRelationship'
          description: "Product Offering Prices related to this Product Offering Price,\
            \ for example a price alteration such as allowance or discount"
        prodSpecCharValueUse:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecificationCharacteristicValueUse'
          description: "A use of the ProductSpecificationCharacteristicValue by a ProductOfferingPrice\
            \ to which additional properties (attributes) apply or override the properties\
            \ of similar properties contained in ProductSpecificationCharacteristicValue.\
            \ It should be noted that characteristics which their value(s) addressed\
            \ by this object must exist in corresponding product specification. The\
            \ available characteristic values for a ProductSpecificationCharacteristic\
            \ in a Product specification can be modified at the ProductOffering and\
            \ ProcuctOfferingPrice level. The list of values in ProductSpecificationCharacteristicValueUse\
            \ is a strict subset of the list of values as defined in the corresponding\
            \ product specification characteristics."
        productOfferingTerm:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductOfferingTerm'
          description: "A list of conditions under which a ProductOfferingPrice is made\
            \ available to Customers. For instance, a Product Offering Price can be\
            \ offered with multiple commitment periods."
        place:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/PlaceRef'
          description: "Place defines the places where the products are sold or delivered."
        constraint:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/ConstraintRef'
          description: "The Constraint resource represents a policy/rule applied to\
            \ ProductOfferingPrice."
        pricingLogicAlgorithm:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/PricingLogicAlgorithm'
          description: "The PricingLogicAlgorithm entity represents an instantiation\
            \ of an interface specification to external rating function (without a modeled\
            \ behavior in SID). Some of the parameters of the interface definition may\
            \ be already set (such as price per unit) and some may be gathered during\
            \ the rating process from the event (such as call duration) or from ProductCharacteristicValues\
            \ (such as assigned bandwidth)."
        tax:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/TaxItem'
          description: "An amount of money levied on the price of a Product by a legislative\
            \ body."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    EligibilityUnavailabilityReason:
      description: "Reason for eligibility result if the productOfferingQualification\
        \ result is no (meaning the productOffering or productSpec is not available)."
      type: "object"
      properties:
        code:
          type: "string"
          description: "Unavailability reason code."
        label:
          type: "string"
          description: "Unavailability reason label."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    Product:
      type: "object"
      description: "A product offering procured by a customer or other interested party\
        \ playing a party role. A product is realized as one or more service(s) and\
        \ / or resource(s)."
      properties:
        agreement:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementItemRef'
        billingAccount:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/BillingAccountRef'
        description:
          type: "string"
          description: "Is the description of the product. It could be copied from the\
            \ description of the Product Offering."
        href:
          type: "string"
          description: "Reference of the product"
        id:
          type: "string"
          description: "Unique identifier of the product"
        isBundle:
          type: "boolean"
          description: "If true, the product is a ProductBundle which is an instantiation\
            \ of a BundledProductOffering. If false, the product is a ProductComponent\
            \ which is an instantiation of a SimpleProductOffering."
        isCustomerVisible:
          type: "boolean"
          description: "If true, the product is visible by the customer."
        name:
          type: "string"
          description: "Name of the product. It could be the same as the name of the\
            \ product offering"
        orderDate:
          type: "string"
          format: "date-time"
          description: "Is the date when the product was ordered"
        productCharacteristic:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
        productOffering:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductOfferingRef'
        productOrderItem:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/RelatedProductOrderItem'
        product:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductRefOrValue'
        productPrice:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductPrice'
        productRelationship:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductRelationship'
        productSerialNumber:
          type: "string"
          description: "Is the serial number for the product. This is typically applicable\
            \ to tangible products e.g. Broadband Router."
        productSpecification:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecificationRef'
        productTerm:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductTerm'
        realizingResource:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Resource.yaml#/components/schemas/ResourceRef'
        realizingService:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceRef'
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        place:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/RelatedPlaceRefOrValue'
        startDate:
          type: "string"
          format: "date-time"
          description: "Is the date from which the product starts"
        status:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductStatusType'
          description: "Is the lifecycle status of the product."
        terminationDate:
          type: "string"
          format: "date-time"
          description: "Is the date when the product was terminated"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    UsageSpecCharacteristicValue:
      description: "A value that can be assigned to a UsageSpecCharacteristic."
      type: "object"
      properties:
        default:
          type: "boolean"
          description: "If true, this is the default value for a characteristic"
        value:
          type: "string"
          description: "A narrative that explains in detail what the usage specification\
            \ characteristic is"
        valueFrom:
          type: "string"
          description: "The low range value that a characteristic can take on"
        valueTo:
          type: "string"
          description: "The upper range value that a characteristic can take on"
        valueType:
          type: "string"
          description: "A kind of value that the characteristic can take on, such as\
            \ numeric, text"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductSpecificationCharacteristicValueUse:
      type: "object"
      description: "A use of the ProductSpecificationCharacteristicValue by a ProductOffering\
        \ to which additional properties (attributes) apply or override the properties\
        \ of similar properties contained in ProductSpecificationCharacteristicValue.\
        \ It should be noted that characteristics which their value(s) addressed by\
        \ this object must exist in corresponding product specification. The available\
        \ characteristic values for a ProductSpecificationCharacteristic in a Product\
        \ specification can be modified at the ProductOffering level. For example, a\
        \ characteristic 'Color' might have values White, Blue, Green, and Red. But,\
        \ the list of values can be restricted to e.g. White and Blue in an associated\
        \ product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse'\
        \ is a strict subset of the list of values as defined in the corresponding product\
        \ specification characteristics."
      properties:
        name:
          type: "string"
          description: "Name of the associated productSpecificationCharacteristic"
        description:
          type: "string"
          description: "A narrative that explains in detail what the productSpecificationCharacteristic\
            \ is"
        valueType:
          type: "string"
          description: "A kind of value that the characteristic can take on, such as\
            \ numeric, text and so forth"
        minCardinality:
          type: "integer"
          description: "The minimum number of instances a CharacteristicValue can take\
            \ on. For example, zero to five phone numbers in a group calling plan, where\
            \ zero is the value for the minCardinality."
        maxCardinality:
          type: "integer"
          description: "The maximum number of instances a CharacteristicValue can take\
            \ on. For example, zero to five phone numbers in a group calling plan, where\
            \ five is the value for the maxCardinality."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the productSpecificationCharacteristic\
            \ is valid"
        productSpecCharacteristicValue:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecificationCharacteristicValue'
          description: "A number or text that can be assigned to a ProductSpecificationCharacteristic."
        productSpecification:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecificationRef'
          description: "A ProductSpecification is a detailed description of a tangible\
            \ or intangible object made available externally in the form of a ProductOffering\
            \ to customers or other parties playing a party role."


    Catalog:
      description: "A collection of Product Offerings, intended for a specific DistributionChannel,\
        \ enhanced with additional information such as SLA parameters, invoicing and\
        \ shipping details"
      type: "object"
      properties:
        href:
          type: "string"
          description: "Unique reference of the catalog"
        id:
          type: "string"
          description: "Unique identifier of the Catalog"
        description:
          type: "string"
          description: "Description of this catalog"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date and time of the last update"
        lifecycleStatus:
          type: "string"
          description: "Used to indicate the current lifecycle status"
        name:
          type: "string"
          description: "Name of the catalog"
        catalogType:
          type: "string"
          description: "Indicates if the catalog is a product, service or resource catalog"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the catalog is valid"
        version:
          type: "string"
          description: "Catalog version"
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
          description: "List of parties involved in this catalog"
        category:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/CategoryRef'
          description: "List of root categories contained in this catalog"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    LoyaltyConditionRef:
      description: "A reference to a loyalty condition."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty condition."
        href:
          type: "string"
          description: "A reference to the loyalty condition."


    LoyaltyActionRef:
      description: "A reference to a loyalty action."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty action."
        href:
          type: "string"
          description: "A reference to the loyalty action."


    CancelProductOrder:
      description: "Request for cancellation an existing product order"
      type: "object"
      required:
      - "productOrder"
      properties:
        productOrder:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/ProductOrderRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/CancelOrder'


    AlternateProductOfferingProposal:
      description: "Alternate product Offering proposal is used when the requested product\
        \ offering is not available with characteristic and date asked for. An alternate\
        \ proposal could be a distinct product offering or product Spec close to requested\
        \ one or same as requested but with a different activation date."
      type: "object"
      properties:
        alternateActivationDate:
          type: "string"
          format: "date-time"
          description: "Alternate activation date in case seller is not able to meet\
            \ requested expected activation date."
        id:
          type: "string"
          description: "Identifier of a alternate product offering proposal"
        alternateProduct:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductRefOrValue'
          description: "Alternate product proposal"
        alternateProductOffering:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductOfferingRef'
          description: "Alternate product offering proposal"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductSpecificationCharacteristic:
      description: "A characteristic quality or distinctive feature of a ProductSpecification.\
        \  The characteristic can be take on a discrete value, such as color, can take\
        \ on a range of values, (for example, sensitivity of 100-240 mV), or can be\
        \ derived from a formula (for example, usage time (hrs) = 30 - talk time *3).\
        \ Certain characteristics, such as color, may be configured during the ordering\
        \ or some other process."
      type: "object"
      properties:
        configurable:
          type: "boolean"
          description: "If true, the Boolean indicates that the ProductSpecificationCharacteristic\
            \ is configurable"
        description:
          type: "string"
          description: "A narrative that explains in detail what the ProductSpecificationCharacteristic\
            \ is"
        extensible:
          type: "boolean"
          description: "An indicator that specifies that the values for the characteristic\
            \ can be extended by adding new values when instantiating a characteristic\
            \ for a product"
        isUnique:
          type: "boolean"
          description: "An indicator that specifies if a value is unique for the specification.\
            \ Possible values are; \"unique while value is in effect\" and \"unique\
            \ whether value is in effect or not\""
        maxCardinality:
          type: "integer"
          description: "The maximum number of instances a CharacteristicValue can take\
            \ on. For example, zero to five phone numbers in a group calling plan, where\
            \ five is the value for the maxCardinality"
        minCardinality:
          type: "integer"
          description: "The minimum number of instances a CharacteristicValue can take\
            \ on. For example, zero to five phone numbers in a group calling plan, where\
            \ zero is the value for the minCardinality"
        name:
          type: "string"
          description: "Name of the ProductSpecificationCharacteristic"
        regex:
          type: "string"
          description: "A rule or principle represented in regular expression used to\
            \ derive the value of a characteristic value"
        valueType:
          type: "string"
          description: "A kind of value that the characteristic can take on, such as\
            \ numeric, text and so forth"
        productSpecCharacteristicValue:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecificationCharacteristicValue'
          description: "A ProductSpecificationCharacteristicValue object is used to\
            \ define a set of attributes, each of which can be assigned to a corresponding\
            \ set of attributes in a ProductSpecificationCharacteristic object. The\
            \ values of the attributes in the ProductSpecificationCharacteristicValue\
            \ object describe the values of the attributes that a corresponding ProductSpecificationCharacteristic\
            \ object can take on."
        productSpecCharRelationship:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecificationCharacteristicRelationship'
          description: "An aggregation, migration, substitution, dependency or exclusivity\
            \ relationship between/among Specification Characteristics."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the ProductSpecificationCharacteristic\
            \ is valid"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductSpecificationSchemaRef:
      description: "ProductSpecification description could be done with schema use.\
        \ This information allows to retrieve schema type and location"
      type: "object"
      properties:
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    UsageSpecCharacteristic:
      description: "A detailed description of an attribute that defines a particular\
        \ type of usage, described by its name, category, type, presence and a set of\
        \ allowed values"
      type: "object"
      properties:
        configurable:
          type: "boolean"
          description: "Boolean indicating if usageSpecCharacteristic is configurable\
            \ or not"
        description:
          type: "string"
          description: "A narrative that explains in detail what the usage specification\
            \ characteristic is"
        name:
          type: "string"
          description: "The name of the usage specification characteristic"
        usageSpecCharacteristicValue:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/UsageSpecCharacteristicValue'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PromotionAction:
      description: "Action of the promotion.When the customer meets the conditions in\
        \ the promotion pattern, the customer can be given the benefits in the action."
      type: "object"
      properties:
        actionObjectId:
          type: "string"
          description: "It refers to the object (entity) ID which is impacted by the\
            \ promotion action. When the Promotion -> type is 1: Award, the actionObjectId\
            \ is the sub-account ID; When the Promotion -> type is 2: Discount, it is\
            \ the offering ID; When the Promotion -> type is 3: reduction, it is the\
            \ offering ID."
        actionType:
          type: "string"
          description: "When the Promotion -> type is 1: Award, the action type can\
            \ be one of the following:voice (minute),data (MB),data (GB),SMS,bonus point,physical\
            \ gift,voucher,promotion code,an existing offering,currency. More types\
            \ of action can be extended in future."
        actionValue:
          type: "number"
          format: "float"
          description: "When the Promotion -> type is 1: Award, it means the amount\
            \ or value of the awards decided by actionType, such as:Amount of gift,Amount\
            \ of bonus,Value of discount; When the Promotion -> type is 2: Discount,\
            \ it means the value of the discount; When the Promotion -> type is 3: reduction,\
            \ it means the value of the reduced money ."
        id:
          type: "string"
          description: "Unique identifier."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductRelationship:
      description: "Linked products to the one instantiate, such as [bundled] if the\
        \ product is a bundle and you want to describe the bundled products inside this\
        \ bundle; [reliesOn] if the product needs another already owned product to rely\
        \ on (e.g. an option on an already owned mobile access product) [targets] or\
        \ [isTargeted] (depending on the way of expressing the link) for any other kind\
        \ of links that may be useful"
      type: "object"
      required:
      - "relationshipType"
      - "product"
      properties:
        relationshipType:
          type: "string"
          description: "Type of the product relationship, such as [bundled] if the product\
            \ is a bundle and you want to describe the bundled products inside this\
            \ bundle; [reliesOn] if the product needs another already owned product\
            \ to rely on (e.g. an option on an already owned mobile access product)\
            \ [targets] or [isTargeted] (depending on the way of expressing the link)\
            \ for any other kind of links that may be useful"
        product:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductRefOrValue'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    LoyaltyProgramProductSpecRef:
      description: "A reference to a loyalty program specification."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the product specification."
        href:
          type: "string"
          description: "A reference to the product specification."


    CancelOrder:
      description: "A Order cancel is a type of task which  can  be used to place a\
        \ request to cancel an order"
      type: "object"
      properties:
        requestedCancellationDate:
          type: "string"
          format: "date-time"
          description: "Date when the submitter wants the order to be cancelled"
        href:
          type: "string"
          description: "Hyperlink to access the cancellation request"
        id:
          type: "string"
          description: "id of the cancellation request (this is not an order id)"
        effectiveCancellationDate:
          type: "string"
          format: "date-time"
          description: "Date when the order is cancelled."
        cancellationReason:
          type: "string"
          description: "Reason why the order is cancelled."
        state:
          description: "Tracks the lifecycle status of the cancellation request, such\
            \ as Acknowledged, Rejected, InProgress, Pending and so on."
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TaskStateType'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    UsageConsumptionReport:
      type: "object"
      description: "An usage consumption report enables to know at a given point the\
        \ balances and the consumption counters related to various buckets (SMS, Voice,\
        \ Data for example). It could be calculated for a device identified by a public\
        \ key (msisdn number for a mobile device for example or PSTN or VOIP number\
        \ for a fix device), for a subscribed offer or option or for an user."
      properties:
        bucket:
          type: "array"
          description: "Bucket(s) included in the offer or option subscribed."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/UsageVolumeProduct'
        description:
          type: "string"
          description: "Free short text describing the usage consumption report content"
        effectiveDate:
          type: "string"
          format: "date-time"
          description: "Date and time when the usage consumption report was calculated\
            \ and generated"
        href:
          type: "string"
          description: "Hyperlink to access the usage consumption report. The report\
            \ is calculated at the time of the request by the server. Generally, this\
            \ report is not recorded by the server. If it is, an unique identifier of\
            \ the usage consumption report is given by the server"
        id:
          type: "string"
          description: "The report is calculated at the time of the request by the server.\
            \ Generally, this report is not recorded by the server. If it is, an unique\
            \ identifier of the usage consumption report is given by the server"
        name:
          type: "string"
          description: "Usage consumption report name"
        relatedParty:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductSpecificationRef:
      description: "Product specification reference: A ProductSpecification is a detailed\
        \ description of a tangible or intangible object made available externally in\
        \ the form of a ProductOffering to customers or other parties playing a party\
        \ role."
      type: "object"
      properties:
        version:
          type: "string"
          description: "Version of the product specification"
        targetProductSchema:
          description: "A target product schema reference. The reference object to the\
            \ schema and type of target product which is described by product specification."
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/TargetProductSchema'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    ProductOfferingQualificationItemRef:
      type: "object"
      description: "It's a productOfferingQualification item that has been executed\
        \ previously."
      required:
      - "id"
      - "productOfferingQualificationId"
      properties:
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
        productOfferingQualificationHref:
          type: "string"
          description: "Reference of the related entity."
        productOfferingQualificationId:
          type: "string"
          description: "Unique identifier of a related entity."
        productOfferingQualificationName:
          type: "string"
          description: "Name of the related entity."
        id:
          type: "string"
          description: "Id of an item of a product offering qualification"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductOfferingTerm:
      description: "A condition under which a ProductOffering is made available to Customers.\
        \ For instance, a productOffering can be offered with multiple commitment periods."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description of the productOfferingTerm"
        duration:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Quantity'
          description: "Duration of the productOfferingTerm"
        name:
          type: "string"
          description: "Name of the productOfferingTerm"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the productOfferingTerm is valid"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    UsageSpecification:
      description: "A detailed description of a usage event that are of interest to\
        \ the business and can have charges applied to it. It is comprised of characteristics,\
        \ which define all attributes known for a particular type of usage."
      type: "object"
      properties:
        description:
          type: "string"
          description: "A narrative that explains in detail what the usage specification\
            \ is"
        href:
          type: "string"
          description: "Reference of usage specification"
        id:
          type: "string"
          description: "Usage specification unique identifier"
        name:
          type: "string"
          description: "The name of the usage specification."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the usage specification is valid"
        usageSpecCharacteristic:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/UsageSpecCharacteristic'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    CategoryRef:
      description: "The category for grouping recommendations"
      type: "object"
      properties:
        version:
          type: "string"
          description: "Category version"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    BundledProductOfferingRef:
      description: "BundledProductOffering Reference. A type of ProductOffering that\
        \ belongs to a grouping of ProductOfferings made available to the market. It\
        \ inherits of all attributes of ProductOffering."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the product offering"
        id:
          type: "string"
          description: "Unique identifier of the product offering"
        name:
          type: "string"
          description: "Name of the product offering"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    ProductCharacteristic:
      description: "Characteristics of the product to instantiate or to modify"
      type: "object"
      properties:
        name:
          type: "string"
          description: "Name of the characteristic"
        value:
          type: "string"
          description: "Value of the characteristic"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductOfferingQualificationItem:
      type: "object"
      properties:
        expectedActivationDate:
          type: "string"
          format: "date-time"
          description: "Date when the requester look for productOfferingQualification\
            \ activation"
        id:
          type: "string"
          description: "Id of the productOfferingQualification item"
        action:
          description: "Can be \"add\" / \"modify\" / \"no_change\"/ \"delete\" - by\
            \ default add is considered"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductActionType'
        qualificationItemResult:
          type: "string"
          description: "Qualification result for this productOfferingQualification item.\
            \ It could be:\n\n qualified (request productOffering or productSpecification\
            \ are available), \n unqualified (requested not available and not alternate\
            \ available),\n alternate (requested not available but proposal available)\n"
        state:
          description: "State of the productOfferingQualification item defined in the\
            \ state engine"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TaskStateType'
        eligibilityUnavailabilityReason:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/EligibilityUnavailabilityReason'
        qualificationItemRelationship:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/QualificationItemRelationship'
        note:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Note'
        product:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductRefOrValue'
        terminationError:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/TerminationError'
        productOffering:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductOfferingRef'
        alternateProductOfferingProposal:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/AlternateProductOfferingProposal'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    RelatedProductOrderItem:
      type: "object"
      description: "RelatedProductOrderItem (ProductOrder item) .The product order item\
        \ which triggered product creation/change/termination."
      required:
      - "orderItemId"
      - "productOrderId"
      properties:
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
        productOrderHref:
          type: "string"
          description: "Reference of the related entity."
        productOrderId:
          type: "string"
          description: "Unique identifier of a related entity."
        orderItemAction:
          type: "string"
          description: "Action of the order item for this product"
        orderItemId:
          type: "string"
          description: "Identifier of the order item where the product was managed"
        role:
          type: "string"
          description: "role of the product order item for this product"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    BundledProductOfferingPriceRelationship:
      type: "object"
      description: "This represents a bundling pricing relationship, allowing a price\
        \ to be composed of multiple other prices (e.g. a recurring charge and a onetime\
        \ charge)."
      properties:
        href:
          type: "string"
          description: "hyperlink reference of the bundled product offering price"
        id:
          type: "string"
          description: "Unique identifier of the bundled product offering price"
        name:
          type: "string"
          description: "Name of the bundled product offering price"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    QualificationItemRelationship:
      description: "Structure used to describe relationship between productOfferingQualification\
        \ item from the same ProductOfferingQualification."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Id of the ProductOfferingQualificationItem (from the same ProductOfferingQualificationItem)."
        relationshipType:
          type: "string"
          description: "Type of relationship (ex: reliesOn, connectedTo, etc...)"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    LoyaltyProgramProduct:
      description: "An instance of a loyalty program specification, linked to a specified\
        \ loyalty member."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty program product."
        href:
          type: "string"
          description: "A reference to the loyalty account."
        name:
          type: "string"
          description: "A word, term, or phrase by which the product is known and distinguished\
            \ from other products."
        description:
          type: "string"
          description: "An explanation of what the product is."
        productStatus:
          type: "string"
          description: "The condition of the product, such as planned, designed, activated,\
            \ disconnected."
        characteristic:
          type: "array"
          description: "Name value pairs of product characteristics."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
        loyaltyProgramProductSpec:
          type: "object"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/LoyaltyProgramProductSpecRef'
        loyaltyAccount:
          type: "object"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/LoyaltyAccountRef'
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductOfferingQualificationStateType:
      type: "string"
      description: "Possible values for the state of the product offering qualification\
        \ & item"
      enum:
      - "acknowledged"
      - "terminatedWithError"
      - "inProgress"
      - "done"


    LoyaltyProgramProductSpec:
      type: "object"
      description: "A reference to a loyalty program specification."
      properties:
        brand:
          type: "string"
          description: "The manufacturer or trademark of the specification."
        description:
          type: "string"
          description: "A narrative that explains in detail what the product specification\
            \ is."
        id:
          type: "string"
          description: "Unique identifier for the product specification."
        href:
          type: "string"
          description: "A reference to the product specification."
        lifeCycleStatus:
          type: "string"
          description: "The condition of the product specification, such as active,\
            \ inactive, planned."
        name:
          type: "string"
          description: "The name of the product specification."
        needsLoyaltyAccount:
          type: "boolean"
          description: "A narrative that explains in detail what the product specification\
            \ is."
## MonE: Correction... productNumber==>description
        productNumber:
          type: "string"
          description: "An identification number assigned to uniquely identify the\
            \ specification."
        ValidFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'


    UsageConsumptionReportRequestIn:
      type: "object"
      description: "An UsageConsumptionReportRequest allows to manage the calculation\
        \ request of an usage consumption report"
      properties:
        bucket:
          type: "array"
          description: "Reference of the buckets for which the usage consumption report\
            \ is requested"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/UsageVolumeProductRef'
        product:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/NetworkProductRef'
          description: "Network product reference for which the usage consumption report\
            \ is requested"
        relatedParty:
          type: "array"
          description: "Reference and role of the related parties for which the usage\
            \ consumption report is requested"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        validPeriod:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "Validity period"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductActionType:
      description: "action to be performed on the product"
      type: "string"
      enum:
      - "add"
      - "modify"
      - "delete"
      - "noChange"


    LoyaltyCondition:
      description: "A condition, comprised of a attribute that will be tested against\
        \ a value."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty condition."
        href:
          type: "string"
          description: "A reference to the loyalty event type."
        attribute:
          type: "string"
          description: "The attribute to evaluate."
        operator:
          type: "string"
          description: "Comparison operator to be used in the evaluation."
        value:
          type: "string"
          description: "The value of the attribute to be evaluated."


    Recommendation:
      description: "Recommendation API is used to recommend offering quickly based on\
        \ the history and real-time context of customer. It is a real-time and personalized\
        \ recommendation API. It is usually provided by e-commerce or BSS, CRM system\
        \ in omni-channel."
      type: "object"
      properties:
        description:
          type: "string"
        href:
          type: "string"
          description: "Hypertext Reference of the recommendation"
        id:
          type: "string"
          description: "Unique identifier of recommendation"
        name:
          type: "string"
          description: "Name of recommendation"
        recommendationType:
          type: "string"
          description: "The type of recommendation"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period in which the recommendation is valid"
        order:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/ProductOrderRef'
        location:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/GeographicLocationRef'
          description: "The geographic location which the recommendation is related\
            \ to"
        channel:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/ChannelRef'
        category:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/CategoryRef'
          description: "The category for grouping recommendations"
        shoppingCart:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/ShoppingCartRef'
          description: "The shopping cart which the recommendation is related to"
        party:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        item:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/RecommendationItem'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductStatusType:
      type: "string"
      description: "Possible values for the status of the product"
      enum:
      - "created"
      - "pendingActive"
      - "cancelled"
      - "active"
      - "pendingTerminate"
      - "terminated"
      - "suspended"
      - "aborted "


    ConsumptionSummary:
      type: "object"
      description: "The consumption counters (called ConsumptionSummary in the SID model)\
        \ detail for example the different kind of consumption done on the bucket."
      properties:
        consumptionPeriod:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "Consumption counter period between a start date time and an\
            \ end date time. For prepaid bucket, the period of counters is between the\
            \ start date of the bucket and the effective date of the usage consumption\
            \ report generation. For postpaid bucket, the period of counters is between\
            \ the last bill date and the effective date of the usage consumption report\
            \ generation."
        counterType:
          type: "string"
          description: "Type of the consumption counter. We can give for example a counter\
            \ of the used value for a bucket (counterType=used for example) or the value\
            \ of the consumption done out of the bucket(s) (counterType=outOfBucket\
            \ for example)"
        level:
          type: "string"
          description: "Counter level. The counter can be given globally for the bucket\
            \ or detailed by user or by network product for example in case of shared\
            \ bucket"
        product:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/NetworkProductRef'
          description: "Public identifier associated to the product for which the consumption\
            \ counter is detailed. If the level of the counter is global (i.e. concerning\
            \ all the network products), the list of them is not specified. It can be\
            \ found through the network products listed in the bucket sub-resource"
        user:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
          description: "Reference of the user for which the consumption counter is detailed.\
            \ If the level of the counter is global (i.e. concerning all the users),\
            \ the list of them is not specified. It can be found through the users listed\
            \ in the network products of the bucket sub-resource"
        value:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Quantity'
          description: "Numeric value of the bucket counter in a given unit"
        valueName:
          type: "string"
          description: "Value of the counter in a formatted string used for display\
            \ needs for example"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductPrice:
      description: "An amount, usually of money, that represents the actual price paid\
        \ by a Customer for a purchase, a rent or a lease of a Product. The price is\
        \ valid for a defined period of time."
      type: "object"
      required:
      - "priceType"
      - "price"
      properties:
        description:
          type: "string"
          description: "A narrative that explains in detail the semantics of this product\
            \ price."
        name:
          type: "string"
          description: "A short descriptive name such as \"Subscription price\"."
        productOfferingPrice:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductOfferingPriceRef'
        billingAccount:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/BillingAccountRef'
        priceType:
          type: "string"
          description: "A category that describes the price, such as recurring, discount,\
            \ allowance, penalty, and so forth."
        recurringChargePeriod:
          type: "string"
          description: "Could be month, week..."
        unitOfMeasure:
          type: "string"
          description: "Could be minutes, GB..."
        productPriceAlteration:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/PriceAlteration'
        price:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/Price'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductOffering:
      description: "Represents entities that are orderable from the provider of the\
        \ catalog, this resource includes pricing information."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description of the productOffering"
        href:
          type: "string"
          description: "Reference of the ProductOffering"
        id:
          type: "string"
          description: "Unique identifier of the productOffering"
        isBundle:
          type: "boolean"
          description: "isBundle determines whether a productOffering represents a single\
            \ productOffering (false), or a bundle of productOfferings (true)."
        isSellable:
          type: "boolean"
          description: "A flag indicating if this product offer can be sold stand-alone\
            \ for sale or not. If this flag is false it indicates that the offer can\
            \ only be sold within a bundle."
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date and time of the last update"
        lifecycleStatus:
          type: "string"
          description: "Used to indicate the current lifecycle status"
        name:
          type: "string"
          description: "Name of the productOffering"
        statusReason:
          type: "string"
          description: "A string providing a complementary information on the value\
            \ of the lifecycle status attribute."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the productOffering is valid"
        version:
          type: "string"
          description: "ProductOffering version"
        place:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/PlaceRef'
          description: "Place defines the places where the products are sold or delivered."
        serviceLevelAgreement:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/SLARef'
          description: "A service level agreement (SLA) is a type of agreement that\
            \ represents a formal negotiated agreement between two parties designed\
            \ to create a common understanding about products, services, priorities,\
            \ responsibilities, and so forth. The SLA is a set of appropriate procedures\
            \ and targets formally or informally agreed between parties in order to\
            \ achieve and maintain specified Quality of Service."
        productSpecification:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecificationRef'
          description: "A ProductSpecification is a detailed description of a tangible\
            \ or intangible object made available externally in the form of a ProductOffering\
            \ to customers or other parties playing a party role."
        channel:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/ChannelRef'
          description: "The channel defines the channel for selling product offerings."
        serviceCandidate:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceCandidateRef'
          description: "ServiceCandidate is an entity that makes a ServiceSpecification\
            \ available to a catalog."
        category:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/CategoryRef'
          description: "The category resource is used to group product offerings, service\
            \ and resource candidates in logical containers. Categories can contain\
            \ other categories and/or product offerings, resource or service candidates."
        resourceCandidate:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Resource.yaml#/components/schemas/ResourceCandidateRef'
          description: "A resource candidate is an entity that makes a ResourceSpecification\
            \ available to a catalog."
        productOfferingTerm:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductOfferingTerm'
          description: "A condition under which a ProductOffering is made available\
            \ to Customers. For instance, a productOffering can be offered with multiple\
            \ commitment periods."
        productOfferingPrice:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductOfferingPriceRef'
          description: "An amount, usually of money, that is asked for or allowed when\
            \ a ProductOffering is bought, rented, or leased. The price is valid for\
            \ a defined period of time and may not represent the actual price paid by\
            \ a customer."
        agreement:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementRef'
          description: "An agreement represents a contract or arrangement, either written\
            \ or verbal and sometimes enforceable by law, such as a service level agreement\
            \ or a customer price agreement. An agreement involves a number of other\
            \ business entities, such as products, services, and resources and/or their\
            \ specifications."
        attachment:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/AttachmentRefOrValue'
          description: "Complements the description of an element (for instance a product)\
            \ through video, pictures..."
        marketSegment:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/MarketingSales.yaml#/components/schemas/MarketSegmentRef'
          description: "provides references to the corresponding market segment as target\
            \ of product offerings. A market segment is grouping of Parties, GeographicAreas,\
            \ SalesChannels, and so forth."
        bundledProductOffering:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/BundledProductOffering'
          description: "A type of ProductOffering that belongs to a grouping of ProductOfferings\
            \ made available to the market. It inherits of all attributes of ProductOffering."
        prodSpecCharValueUse:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecificationCharacteristicValueUse'
          description: "A use of the ProductSpecificationCharacteristicValue by a ProductOffering\
            \ to which additional properties (attributes) apply or override the properties\
            \ of similar properties contained in ProductSpecificationCharacteristicValue.\
            \ It should be noted that characteristics which their value(s) addressed\
            \ by this object must exist in corresponding product specification. The\
            \ available characteristic values for a ProductSpecificationCharacteristic\
            \ in a Product specification can be modified at the ProductOffering level.\
            \ For example, a characteristic 'Color' might have values White, Blue, Green,\
            \ and Red. But, the list of values can be restricted to e.g. White and Blue\
            \ in an associated product offering. It should be noted that the list of\
            \ values in 'ProductSpecificationCharacteristicValueUse' is a strict subset\
            \ of the list of values as defined in the corresponding product specification\
            \ characteristics."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    LoyaltyEvent:
      description: "A loyalty event notification."
      type: "object"
      properties:
        eventId:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/LoyaltyProgramProductRef'
        eventType:
          type: "string"
          description: "The incoming loyalty event type."
        eventTime:
          type: "string"
          description: "The time that the event was received."
        memberId:
          type: "string"
          description: "The loyalty program member ID associated with the event."
        event:
          type: "object"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Any'
          description: "The event attributes."


    QuoteItemStateType:
      type: "string"
      description: "Possible values for the state of the quote item"
      enum:
      - "rejected"
      - "pending"
      - "inProgress"
      - "approved"


    ProductSpecification:
      description: "Is a detailed description of a tangible or intangible object made\
        \ available externally in the form of a ProductOffering to customers or other\
        \ parties playing a party role."
      type: "object"
      properties:
        brand:
          type: "string"
          description: "The manufacturer or trademark of the specification"
        description:
          type: "string"
          description: "A narrative that explains in detail what the product specification\
            \ is"
        href:
          type: "string"
          description: "Reference of the product specification"
        id:
          type: "string"
          description: "Unique identifier of the product specification"
        isBundle:
          type: "boolean"
          description: "isBundle determines whether a productSpecification represents\
            \ a single productSpecification (false), or a bundle of productSpecification\
            \ (true)."
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date and time of the last update"
        lifecycleStatus:
          type: "string"
          description: "Used to indicate the current lifecycle status"
        name:
          type: "string"
          description: "Name of the product specification"
        productNumber:
          type: "string"
          description: "An identification number assigned to uniquely identity the specification"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the product specification is valid"
        version:
          type: "string"
          description: "Product specification version"
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
          description: "A related party defines party or party role linked to a specific\
            \ entity."
        productSpecCharacteristic:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecificationCharacteristic'
          description: "A characteristic quality or distinctive feature of a ProductSpecification.\
            \  The characteristic can be take on a discrete value, such as color, can\
            \ take on a range of values, (for example, sensitivity of 100-240 mV), or\
            \ can be derived from a formula (for example, usage time (hrs) = 30 - talk\
            \ time *3). Certain characteristics, such as color, may be configured during\
            \ the ordering or some other process."
        serviceSpecification:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceSpecificationRef'
          description: "ServiceSpecification(s) required to realize a ProductSpecification."
        productSpecificationRelationship:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductSpecificationRelationship'
          description: "A migration, substitution, dependency or exclusivity relationship\
            \ between/among product specifications."
        resourceSpecification:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Resource.yaml#/components/schemas/ResourceSpecificationRef'
          description: "The ResourceSpecification is required to realize a ProductSpecification."
        attachment:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/AttachmentRefOrValue'
          description: "Complements the description of an element (for instance a product)\
            \ through video, pictures..."
        bundledProductSpecification:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/BundledProductSpecification'
          description: "A type of ProductSpecification that belongs to a grouping of\
            \ ProductSpecifications made available to the market. It inherits of all\
            \ attributes of ProductSpecification."
        targetProductSchema:
          description: "A target product schema reference. The reference object to the\
            \ schema and type of target product which is described by product specification."
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/TargetProductSchema'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    LoyaltyRuleCondition:
      description: "Resource containing a the ID of a condition to link to a loyalty\
        \ rule."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty condition."
        href:
          type: "string"
          description: "A reference to the loyalty condition."


    Promotion:
      description: "Promotion Resource is used to provide the additional discount, voucher,\
        \ bonus or gift to the customer who meets the pre-defined criteria. Using promotion,\
        \ the enterprise is able to attract the users and encourage more consumption,\
        \ especially continuous purchases.   Normally Promotion is not regarded as one\
        \ type of product or product offering. It is often applied when the customer\
        \ buys the product offerings with the price or amount surpassing the certain\
        \ limit."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description of Promotion"
        href:
          type: "string"
          description: "Hyperlink to access the Promotion"
        id:
          type: "string"
          description: "Unique identifier of the Promotion"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Latest update date of the Promotion"
        lifecycleStatus:
          type: "string"
          description: "Status of the Promotion, including Draft/Test/WaitForApproval/Release/Suspend/Retirement"
        name:
          type: "string"
          description: "Name of the Promotion"
        promotionType:
          type: "string"
          description: "Type of the Promotion. The basic type is Award/Discount/Reduction.\
            \ More types can be extended in future"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the Promotion is valid"
        pattern:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/PromotionPattern'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductOfferingPriceRelationship:
      type: "object"
      description: "Describes a non-composite relationship between product offering\
        \ prices. For example one price might be an discount alteration for another\
        \ price."
      properties:
        href:
          type: "string"
          description: "hyperlink reference of the associated product offering price"
        id:
          type: "string"
          description: "Unique identifier of the associated product offering price"
        name:
          type: "string"
          description: "Name of the associated product offering price"
        relationshipType:
          type: "string"
          description: "type of the relationship, for example override, discount, etc."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProductOfferingPriceRef:
      description: "ProductPriceOffering reference. An amount, usually of money, that\
        \ is asked for or allowed when a ProductOffering is bought, rented, or leased"
      type: "object"
      properties: {}
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    RecommendationItem:
      description: "A list of recommendation items. Every item is a product offering\
        \ and its rank."
      type: "object"
      properties:
        priority:
          type: "integer"
          description: "The rank of the list of recommended offering."
        offering:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductOfferingRef'
          description: "Recommended product offering"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    LoyaltyProgramProductRef:
      type: "object"
      description: "A reference to a loyalty product."
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty program product."
        href:
          type: "string"
          description: "A reference to the loyalty program product."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    Category:
      type: "object"
      description: "The category resource is used to group product offerings, service\
        \ and resource candidates in logical containers. Categories can contain other\
        \ categories and/or product offerings, resource or service candidates."
      properties:
        description:
          type: "string"
          description: "Description of the category"
        href:
          type: "string"
          description: "Reference of the category"
        id:
          type: "string"
          description: "Unique identifier of the category"
        isRoot:
          type: "boolean"
          description: "If true, this Boolean indicates that the category is a root\
            \ of categories"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date and time of the last update"
        lifecycleStatus:
          type: "string"
          description: "Used to indicate the current lifecycle status"
        name:
          type: "string"
          description: "Name of the category"
        parentId:
          type: "string"
          description: "Unique identifier of the parent category"
        productOffering:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductOfferingRef'
          description: "A product offering represents entities that are orderable from\
            \ the provider of the catalog, this resource includes pricing information."
        subCategory:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/CategoryRef'
          description: "The category resource is used to group product offerings, service\
            \ and resource candidates in logical containers. Categories can contain\
            \ other (sub-)categories and/or product offerings."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the category is valid"
        version:
          type: "string"
          description: "Category version"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    LoyaltyRuleAction:
      description: "Resource containing a the ID of a action to link to a loyalty rule."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty action."
        href:
          type: "string"
          description: "A reference to the loyalty action."


    ProductSpecCharRelationship:
      description: "An aggregation, migration, substitution, dependency or exclusivity\
        \ relationship between/among productSpecCharacteristics."
      type: "object"
      properties:
        relationshipType:
          type: "string"
          description: "Type of relationship such as aggregation, migration, substitution,\
            \ dependency, exclusivity"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the productSpecCharRelationship is valid"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    LoyaltyEventTypeRef:
      description: "A reference to a loyalty event type."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier for the loyalty event type."
        href:
          type: "string"
          description: "A reference to the loyalty event type."


