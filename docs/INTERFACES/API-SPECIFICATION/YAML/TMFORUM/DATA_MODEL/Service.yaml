#############################################################################
## 1. OPENAPI
#############################################################################
openapi: 3.0.2

#############################################################################
## 2. INFO
#############################################################################
info:
  version: 1.0.0
  title: TMFORUM Common Schema (Data Type) Definitions for APIs
  contact:
    name: MonetizeHub.IO Project Support
    
  license:
    name: TMFORUM RAND
    url: https://github.com/tmforum-rand/RAND-LICENSE 
  description: |
    <!-- Note that this description is a MARKDOWN Block -->

    **This Open API specification does NOT contain any valid PATHS/OPERATIONS!!!. It ONLY contains COMMON SCHEMA (TYPE) DEFINITIONS referred by other API specifications.**

    Thus, in this context COMMON SCHEMA (TYPE) DEFINITIONS mean shared entity models or baseline objects that can be reused with or without extension.
    
#############################################################################
## 3. SERVERS
#############################################################################
servers:
  - url: https://monetizehub.io/demos/current/apis/private/
    description: MonE Private APIs and Schemas Specification

#############################################################################
## 4. PATHS
#############################################################################
paths:
  /readMe:
    get:
      summary: This is a placeholder nouse operation. (to bypass Swagger UI limitation of a specification with ONLY data models without operation)
      operationId: readMe
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string


#############################################################################
## 5. COMPONENTS
#############################################################################
components:
  schemas:


    MetricDefMeasureConsequence:
      description: "A MetricDefMeasureConsequence defines the action (prescribed action\
        \ or notification) to take when a \nMetricDefMeasureThresholdRule is crossed."
      type: "object"
      properties:
        description:
          type: "string"
          description: "A narrative that explains in detail what the consequence is."
        name:
          type: "string"
          description: "A word, term, or phrase by which a \nMetricDefMeasureConsequence\
            \ is known and distinguished from other MetricDefMeasureConsequences."
        prescribeAction:
          type: "string"
          description: "Recommended remedy for a violated threshold. This could be \n\
            the hyperlink to the action."
        repeatAction:
          type: "boolean"
          description: "An indicator used to specify that a consequence should cease\
            \ \nbeing applied if a value is in the same range as the previous value\
            \ or continue being applied if a value is in the same range as the previous\
            \ value. \nIf the repeatAction is True, if the consequence is always applied\
            \ as soon as the MetricMeasure value is in the range of values and if the\
            \ repeatAction is False, the consequence is applied only if the previous\
            \ MetricMeasure value was not in the same range."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "A valid duration of a thing."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceTestCharacteristic:
      description: "The configuration of the service test is set by the service test\
        \ characteristic."
      type: "object"
      properties:
        name:
          type: "string"
          description: "The name of the characteristic."
        value:
          type: "string"
          description: "The value of characteristic."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceOrderRef:
      description: "Service Order reference. Useful to understand the which was the\
        \ Service order through which the service was instantiated in the service inventory"
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the Service Order"
        id:
          type: "string"
          description: "Unique identifier of the Service Order"
        serviceOrderItemId:
          type: "string"
          description: "Unique identifier of the Service Order Item within a service\
            \ order, not populated if this is a reference to a service order"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceOrderItemRelationship:
      type: "object"
      description: "Linked service order item to the one containing this attribute"
      required:
      - "id"
      - "relationshipType"
      properties:
        id:
          type: "string"
          description: "Unique identifier of a service order item"
        relationshipType:
          type: "string"
          description: "The type of related order item, can be: dependency if the order\
            \ item needs to be not started until another order item is complete"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceLevelSpecConsequence:
      description: "Some consequences for the provider of the Service are resulted when\
        \ the service level objective\ndoes not meet."
      type: "object"
      properties:
        prescribedAction:
          type: "string"
          description: "Recommended remedy for a violated Service Level Objective. \n\
            This could be a hyperlink to the recommended action."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "A valid duration of a thing."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceLevelObjectiveRef:
      description: "A set of Service Level Objectives that are contained in the Service\
        \ Level Specification."
      type: "object"
      properties:
        href:
          type: "string"
          description: "The hyperlink to access a service level object."
        id:
          type: "string"
          description: "The identifier of a service level object."
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceLevelObjective:
      description: "Service level objectives are defined in terms of parameters and\
        \ metrics, thresholds, and tolerances \nassociated with the parameters."
      type: "object"
      properties:
        conformanceComparator:
          type: "string"
          description: "An operator that specifies whether a Service Level Objective\
            \ is \nviolated above or below the conformanceTarget."
        conformancePeriod:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "An interval of time during which the Conformance Target must\
            \ be measured."
        conformanceTarget:
          type: "string"
          description: "A value used to determine if Service Level Objective is met.\
            \ \nThe data type should be adjusted case by case."
        graceTimes:
          type: "string"
          description: "The number of times an objective can remain un-updated without\
            \ \na violation of a Service Level Agreement in reference to a measurement\
            \ period and/or Service Level Agreement reporting period."
        href:
          type: "string"
          description: "The hyperlink to access a service level objective."
        id:
          type: "string"
          description: "The identifier of a service level objectives."
        name:
          type: "string"
          description: "The name of the service level objectives."
        thresholdTarget:
          type: "string"
          description: "A value that used to specify when a warning should be used \n\
            that indicates an objective is danger of not being met. Notice, the data\
            \ type should be adjusted case by case."
        tolerancePeriod:
          description: "A value that specifies the allowable time variation of a conformance"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
        toleranceTarget:
          type: "string"
          description: "A value that specifies the allowable variation of a conformance\
            \ \nTarget. The data type should be adjusted case by case."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "A valid duration of a thing."
        serviceLevelSpecParameter:
          description: "A parameter for this objective"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceLevelSpecParameter'
        serviceLevelSpecConsequence:
          type: "array"
          description: "A list of consequences for this objective."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceLevelSpecConsequence'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ImpactPattern:
      type: "object"
      description: "Define the patterns of impact (optional), such as other service\
        \ characteristics- Used when defining impact through another pattern than the\
        \ pre-defined attributes"
      properties:
        description:
          type: "string"
          description: "Basic description of the impact pattern"
        extensionInfo:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
          description: "A generic list of any type of elements. Used for extensions\
            \ or loose element encapsulation from other namespaces"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceStateType:
      type: "string"
      description: "Valid values for the lifecycle state of the service"
      enum:
      - "feasibilityChecked"
      - "designed"
      - "reserved"
      - "inactive"
      - "active"
      - "terminated"


    AlternateServiceProposal:
      description: "Alternate service proposal is used when the requested service is\
        \ not available with characteristic and date asked for. An alternate proposal\
        \ could be a distinct serviceSpecification close to requested one or same as\
        \ requested but with a different activation date"
      type: "object"
      properties:
        id:
          description: "Identifier of a alternate service proposal"
          type: "string"
        alternateServiceAvailabilityDate:
          description: "Alternate availability date in case seller is not able to meet\
            \ requested expected availability date for the service"
          type: "string"
          format: "date-time"
        alternateService:
          $ref: '/INTERFACES/ERROR#/components/schemas//definitions/ServiceRestriction'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    MeasureThresholdRuleViolation:
      description: "A measureThresholdRuleViolation is a violation of a rule that defines\
        \ the in the \nMericDefMeasureThresholdRule."
      type: "object"
      properties:
        conformanceComparatorLower:
          type: "string"
          description: "An operator that when applied on a value specifies whether a\
            \ \nthreshold is crossed or ceased to be crossed. This operator is used\
            \ to compare with the conformanceTargetLower."
        conformanceComparatorUpper:
          type: "string"
          description: "An operator that when applied on a value specifies whether a\
            \ \nthreshold is crossed or ceased to be crossed. This operator is used\
            \ to compare with the conformanceTargetUpper."
        conformanceTargetLower:
          type: "string"
          description: "A value used to determine if the threshold is crossed or ceases\
            \ \nto be crossed. It represents the lower limit. The value should be less\
            \ than the conformanceTargetUpper. The conformance comparators should also\
            \ be logically defined so as to not lead to a logically impossible condition."
        conformanceTargetUpper:
          type: "string"
          description: "A value used to determine if the threshold is crossed or ceases\
            \ \nto be crossed. It represents the Upper limit. The value should be greater\
            \ than the conformanceTargetLower. The conformance comparators should also\
            \ be logically defined so as to not lead to a logically impossible condition."
        description:
          type: "string"
          description: "Description for the MetricDefMeasureThresholdRule ."
        name:
          type: "string"
          description: "Name for the MetricDefMeasureThresholdRule ."
        numberOfAllowedCrossing:
          type: "integer"
          description: "The number of allowed crossing occurrences in reference to the\
            \ \ntolerancePeriod without a consequence being initiated."
        thresholdRuleSeverity:
          type: "string"
          description: "A threshold can be generated in different severity levels. A\
            \ \ncrossing for each level may require a different condition and possibly\
            \ trigger a different consequence."
        tolerancePeriod:
          description: "An interval of time of allowed crossing occurrences before a\
            \ \nconsequence being initiated."
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Duration'
        appliedConsequence:
          type: "array"
          description: "An Applied Consequence defines the action (prescribed action\
            \ or notification) to take when a MeasureThresholdRuleViolation occurs."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/AppliedConsequence'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceOrderStateType:
      type: "string"
      description: "Possible values for the state of the order"
      enum:
      - "acknowledged"
      - "rejected"
      - "pending"
      - "held"
      - "inProgress"
      - "cancelled"
      - "completed"
      - "failed"
      - "partial"


    ProblemUnacknowledgement:
      type: "object"
      description: "Task resource that requests unacknowledgement of problems, rolling\
        \ back the status of the problems from Acknowledged to Submitted."
      properties:
        href:
          type: "string"
          description: "Reference to this task resource"
        id:
          type: "string"
          description: "Unique identifier of this task resource"
        problem:
          description: "The problems to be unacknowledged, relevant in the input to\
            \ this task"
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceProblemRef'
        unackProblem:
          description: "The problems that were unacknowledged, populated in the output\
            \ to this task"
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceProblemRef'
        trackingRecord:
          description: "A record of the action taken in this acknowledgement"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/TrackingRecord'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceQualificationItem:
      description: "A ServiceQualificationItem relates to a specific service being checked\
        \ in a qualification operation."
      type: "object"
      properties:
        expectedActivationDate:
          type: "string"
          description: "The date when the service is expected to be activated"
          format: "date-time"
        id:
          type: "string"
          description: "Id of the Service Qualification Item"
        qualificationResult:
          type: "string"
          description: "Qualification result for serviceQualification item. It could\
            \ be: - qualified (request service are available), - unqualified (requested\
            \ not available and not alternate available), - alternate (requested not\
            \ available but proposal available)"
        state:
          type: "string"
          description: "State of the serviceQualification item (acknowledged, inProgress,\
            \ terminatedWithError, done)"
        service:
          description: "Configure the service characteristics (only configurable characteristics\
            \ and necessary only if a non default value is selected) and/or identify\
            \ the service that needs to be modified/deleted."
          $ref: '/INTERFACES/ERROR#/components/schemas//definitions/ServiceRestriction'
        qualificationRelationship:
          type: "array"
          description: "Structure used to describe relationship between serviceQualification\
            \ item from the same serviceQualification."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceQualificationRelationship'
        expectedServiceAvailabilityDate:
          description: "Date when the requester looks for service availability"
          type: "string"
          format: "date-time"
        expirationDate:
          description: "Date when the qualification item response expires"
          type: "string"
          format: "date-time"
        eligibilityUnavailabilityReason:
          type: "array"
          description: "A list of eligibility unavailability reasons (EligibilityUnavailabilityReason\
            \ [*]). Reason for eligibility result if the serviceQualification result\
            \ is no (meaning the service is not available)."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceEligibilityUnavailabilityReason'
        category:
          description: "The category resource is used to group product offerings, service\
            \ and resource candidates in logical containers. Categories can contain\
            \ other categories and/or product offerings, resource or service candidates."
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceCategoryRef'
        qualificationItemRelationship:
          type: "array"
          description: "A list of qualification item relationships used to describe\
            \ relationship between serviceQualification item from the same serviceQualification."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceQualificationItemRelationship'
        terminationError:
          type: "array"
          description: "If qualificationItem has not been done properly this lists the\
            \ error(s) that caused termination of the qualification."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/TerminationError'
        alternateServiceProposal:
          type: "array"
          description: "Alternate service proposal is used when the requested service\
            \ is not available with characteristic and date asked for. An alternate\
            \ proposal could be a distinct service Spec close to requested one or same\
            \ as requested but with a different availability date."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/AlternateServiceProposal'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AppliedConsequence:
      type: "object"
      description: "An Applied Consequence defines the action (prescribed action or\
        \ notification) to take when a \nMeasureThresholdRuleViolation occurs."
      properties:
        appliedAction:
          type: "string"
          description: "The action for a violated threshold. This could be a hyperlink\
            \ to \nthe action."
        description:
          type: "string"
          description: "A narrative that explains in detail what the consequence is."
        name:
          type: "string"
          description: "A word, term, or phrase by which Consequence is known and \n\
            distinguished from other MetricDefMeasureConsequences."
        repeatAction:
          type: "boolean"
          description: "An indicator used to specify that a consequence should cease\
            \ \nbeing applied if a value is in the same range as the previous value\
            \ or continue being applied if a value is in the same range as the previous\
            \ value.  \nIf the repeatAction is True, if the consequence is always applied\
            \ as soon as the MetricMeasure value is in the range of values and if the\
            \ repeatAction is False, the consequence is applied only if the previous\
            \ MetricMeasure value was not in the same range."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    TrackingRecord:
      type: "object"
      description: "Tracking records allow the tracking of modifications on the problem.\
        \ The tracking records should not be embedded in the problem to allow retrieving\
        \ the problem without the tracking records"
      properties:
        description:
          type: "string"
          description: "Describes the action being done, such as: ack, clear"
        extensionInfo:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
          description: "A generic list of any type of elements. Used for vendor Extensions\
            \ or loose element encapsulation from other namespaces"
        id:
          type: "string"
          description: "Identifier of the TrackingRecord"
        systemId:
          type: "string"
          description: "Describes the system Id from which the action was done"
        time:
          type: "string"
          format: "date-time"
          description: "Describes the time at which the action was done"
        user:
          type: "string"
          description: "Describes the user doing the action"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    FirstAlert:
      type: "object"
      description: "Indicates what first alerted the system to the problem. It is not\
        \ the root cause of the Service Problem. Examples: Threshold crossing alert"
      properties:
        href:
          type: "string"
          description: "Reference of the object"
        id:
          type: "string"
          description: "Unique identifier of the object"
        alertType:
          type: "string"
          description: "Type of the object"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceOrder:
      type: "object"
      properties:
        category:
          type: "string"
          description: "Used to categorize the order, useful for the OM system, such\
            \ as: Broadband, TVOption"
        completionDate:
          type: "string"
          format: "date-time"
          description: "Effective delivery date amended by the provider"
        description:
          type: "string"
          description: "A free-text description of the service order"
        expectedCompletionDate:
          type: "string"
          format: "date-time"
          description: "Expected delivery date amended by the provider"
        externalId:
          type: "string"
          description: "ID given by the consumer to facilitate searches"
        href:
          type: "string"
          description: "Hyperlink to access the order"
        id:
          type: "string"
          description: "ID created on repository side"
        note:
          type: "array"
          description: "Extra-information about the order; e.g. useful to add extra\
            \ delivery information that could be useful for a human process"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Note'
        notificationContact:
          type: "string"
          description: "Contact attached to the order to send back information regarding\
            \ this order"
        orderDate:
          type: "string"
          format: "date-time"
        orderItem:
          type: "array"
          minItems: 1
          description: "A list of service order items to be processed by this order"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceOrderItem'
        orderRelationship:
          type: "array"
          description: "A list of service orders related to this order (e.g. prerequisite,\
            \ dependent on)"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceOrderRelationship'
        priority:
          type: "string"
          description: "Can be used by consumers to prioritize orders in a Service Order\
            \ Management system"
        relatedParty:
          type: "array"
          description: "A list of parties which are involved in this order and the role\
            \ they are playing"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        requestedCompletionDate:
          type: "string"
          format: "date-time"
          description: "Requested delivery date from the requestors perspective"
        requestedStartDate:
          type: "string"
          format: "date-time"
          description: "Order start date wished by the requestor"
        startDate:
          type: "string"
          format: "date-time"
          description: "Date when the order was started for processing"
        state:
          description: "State of the order: described in the state-machine diagram"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceOrderStateType'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceCategoryRef:
      description: "The (service) category resource is used to group service candidates\
        \ in logical containers. Categories can contain other categories."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Hypertext Reference of the category"
        id:
          type: "string"
          description: "Unique identifier of category"
        name:
          type: "string"
          description: "Name of the category."
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    TerminationError:
      description: "This indicates an error that caused a qualificationItem to be terminated."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier of the termination error"
        value:
          type: "string"
          description: "Text to describe the termination error - for example: Unable\
            \ to proceed to qualification because incomplete information provided"


    MetricDefMeasureThresholdRule:
      description: "A MetricDefMeasureThresholdRule is a rule that defines the condition\
        \ (raise or clear) to achieve to apply \nconsequences when a threshold is crossed\
        \ or ceased to be crossed. It also defines the severity of the \nraise or clear\
        \ of the threshold."
      type: "object"
      properties:
        conformanceComparatorLower:
          type: "string"
          description: "An operator that when applied on a value specifies whether a\
            \ \nthreshold is crossed or ceased to be crossed. This operator is used\
            \ to Service Test Management API REST Specification compare with the conformanceTargetLower."
        conformanceComparatorUpper:
          type: "string"
          description: "An operator that when applied on a value specifies whether a\
            \ \nthreshold is crossed or ceased to be crossed. This operator is used\
            \ to compare with the conformanceTargetUpper."
        conformanceTargetLower:
          type: "string"
          description: "A value used to determine if the threshold is crossed or ceases\
            \ \nto be crossed. It represents the lower limit. The value should be less\
            \ than the conformanceTargetUpper. The conformance comparators should also\
            \ be logically defined so as to not lead to a logically impossible condition."
        conformanceTargetUpper:
          type: "string"
          description: "A value used to determine if the threshold is crossed or ceases\
            \ \nto be crossed. It represents the Upper limit. The value should be greater\
            \ than the conformanceTargetLower. The conformance comparators should also\
            \ be logically defined so as to not lead to a logically impossible condition."
        consequence:
          type: "array"
          description: "A list of consequences (actions, notifications) that will arise\
            \ if the threshold is crossed"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/MetricDefMeasureConsequence'
        description:
          type: "string"
          description: "Description for the MetricDefMeasureThresholdRule ."
        name:
          type: "string"
          description: "Name for the MetricDefMeasureThresholdRule ."
        numberOfAllowedCrossing:
          type: "integer"
          description: "The number of allowed crossing occurrences in reference to the\
            \ \ntolerancePeriod without a consequence being initiated."
        thresholdRuleSeverity:
          type: "string"
          description: "A threshold can be generated in different severity levels. A\
            \ \ncrossing for each level may require a different condition and possibly\
            \ trigger a different consequence."
        tolerancePeriod:
          description: "An interval of time of allowed crossing occurrences before a\
            \ consequence being initiated."
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Duration'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceSpecification:
      description: "ServiceSpecification is a class that offers characteristics to describe\
        \ a type of service.\nFunctionally, it acts as a template by which Services\
        \ may be instantiated. By sharing the same  specification, these services would\
        \ therefore share the same set of characteristics."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier of the service specification"
        href:
          type: "string"
          description: "Reference of the service specification"
        name:
          type: "string"
          description: "Name of the service specification"
        description:
          type: "string"
          description: "A narrative that explains in detail what the service specification\
            \ is"
        version:
          type: "string"
          description: "Service specification version"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the service specification is valid"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date and time of the last update of the service specification"
        lifecycleStatus:
          type: "string"
          description: "Used to indicate the current lifecycle status of the service\
            \ specification"
        isBundle:
          type: "boolean"
          description: "isBundle determines whether a ServiceSpecification represents\
            \ a single ServiceSpecification (false), or a bundle of ServiceSpecification\
            \ (true)."
        resourceSpecification:
          type: "array"
          description: "A list of resource specification references (ResourceSpecificationRef\
            \ [*]). The ResourceSpecification is required for a service specification\
            \ with type ResourceFacingServiceSpecification (RFSS)."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Resource.yaml#/components/schemas/ResourceSpecificationRef'
        attachment:
          type: "array"
          description: "A list of attachments (Attachment [*]). Complements the description\
            \ of the specification through video, pictures..."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/AttachmentRef'
        serviceSpecCharacteristic:
          type: "array"
          description: "A list of service spec characteristics (ServiceSpecCharacteristic\
            \ [*]). This class represents the key features of this service specification."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceSpecCharacteristic'
        relatedParty:
          type: "array"
          description: "A list of related party references (RelatedParty [*]). A related\
            \ party defines party or party role linked to a specific entity."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        serviceSpecRelationship:
          type: "array"
          description: "A list of service specifications related to this specification,\
            \ e.g. migration, substitution, dependency or exclusivity relationship"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceSpecRelationship'
        serviceLevelSpecification:
          type: "array"
          description: "A list of service level specifications related to this service\
            \ specification, and which will need to be satisifiable for corresponding\
            \ service instances; e.g. Gold, Platinum"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceLevelSpecificationRef'
        targetServiceSchema:
          description: "A target service schema reference (TargetServiceSchemaRef).\
            \ The reference object to the schema and type of target service which is\
            \ described by service specification."
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/TargetServiceSchema'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceOfferingQualificationRef:
      description: "It could be a serviceQualification or a productOfferingQualification\
        \ that has been executed previously and captured in the productOrder to provide\
        \ eligibility information"
      type: "object"
      properties:
        href:
          type: "string"
          description: "href of the qualification"
        id:
          type: "string"
          description: "Identifier of a pre-existing qualification"
        qualificationItemId:
          type: "string"
          description: "Id of an item of a qualification"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    ServiceLevelSpecParameter:
      description: "Service Level Specification parameters can be one of two types.\
        \ A Key Quality Indicator (KQI) \nprovides a measurement of a specific aspect\
        \ of the performance of a Product (i.e., Product \nSpecification, Product Offering,\
        \ or Product) or a Service (i.e., Service Specification or Service)."
      type: "object"
      properties:
        name:
          type: "string"
          description: "The name of the parameter"
        serviceParmCategory:
          type: "string"
          description: "A string that specifies whether the Service Level Specification\
            \ Parameter is technology specific, service specific, or technology/service\
            \ independent"
        serviceParmPerspective:
          type: "string"
          description: "A string that specifies whether the Service Level Specification\
            \ Parameter represents a single user instance parameter or a parameter that\
            \ represents an aggregation"
        transformationAlgorithmOfKQI:
          type: "string"
          description: "The description of a logical step-by-step procedure used to\
            \ calculate the value of a KQI"
        parameterType:
          type: "string"
          description: "Types of Service Level Specification parameters are KQI or KPI"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "A valid duration of a thing"
        relatedEntity:
          type: "array"
          description: "A list of entities related to this parameter"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/RelatedEntityRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceEligibilityUnavailabilityReason:
      description: "Reason for eligibility result if the ServiceQualification result\
        \ is no (meaning the Service is not available)"
      type: "object"
      properties:
        code:
          type: "string"
          description: "Unavailability reason code"
        label:
          type: "string"
          description: "Unavailability reason label"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    Service:
      description: "Service is a base class for defining the Service hierarchy. All\
        \ Services are characterized as either being possibly visible and usable by\
        \ a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService\
        \ and ResourceFacingService."
      type: "object"
      properties:
        description:
          description: "Free-text description of the service"
          type: "string"
        isServiceEnabled:
          type: "boolean"
          description: "If FALSE, this particular Service has NOT been enabled for use"
        hasStarted:
          type: "boolean"
          description: "If TRUE, this Service has already been started"
        startMode:
          type: "string"
          description: "This attribute is an enumerated integer that indicates how the\
            \ Service is started, such as: 0: Unknown; 1: Automatically by the managed\
            \ environment; 2: Automatically by the owning device; 3: Manually by the\
            \ Provider of the Service; 4: Manually by a Customer of the Provider; 5:\
            \ Any of the above"
        isStateful:
          type: "boolean"
          description: "If TRUE, this Service can be changed without affecting any other\
            \ services"
        serviceDate:
          description: "Date when the service was created (whatever its status)."
          type: "string"
        startDate:
          type: "string"
          format: "date-time"
          description: "Date when the service starts"
        endDate:
          type: "string"
          format: "date-time"
          description: "Date when the service ends"
        serviceOrder:
          type: "array"
          description: "A list of service orders related to this service"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceOrderRef'
        note:
          type: "array"
          description: "A list of notes made on this service"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Note'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/BaseService'


    ServiceCandidateRef:
      description: "ServiceCandidate reference. ServiceCandidate is an entity that makes\
        \ a ServiceSpecification available to a catalog."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Unique reference of the service candidate"
        id:
          type: "string"
          description: "Unique identifier of the service candidate"
        name:
          type: "string"
          description: "Name of the service candidate"
        version:
          type: "string"
          description: "Version of the service candidate"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceSpecCharacteristicValue:
      description: "A ServiceSpecCharacteristicValue object is used to define a set\
        \ of attributes, each of which can be assigned to a corresponding set of attributes\
        \ in a ServiceSpecCharacteristic object. The values of the attributes in the\
        \ ServiceSpecCharacteristicValue object describe the values of the attributes\
        \ that a corresponding ServiceSpecCharacteristic object can take on."
      type: "object"
      properties:
        valueType:
          type: "string"
          description: "A kind of value that the characteristic can take on, such as\
            \ numeric, text, and so forth"
        isDefault:
          type: "boolean"
          description: "Indicates if the value is the default value for a characteristic"
        value:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Any'
          description: "A discrete value that the characteristic can take on, or the\
            \ actual value of the characteristic"
        unitOfMeasure:
          type: "string"
          description: "A length, surface, volume, dry measure, liquid measure, money,\
            \ weight, time, and the like. In general, a determinate quantity or magnitude\
            \ of the kind designated, taken as a standard of comparison for others of\
            \ the same kind, in assigning to them numerical values, as 1 foot, 1 yard,\
            \ 1 mile, 1 square foot."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period of time for which a value is applicable"
        valueFrom:
          type: "integer"
          description: "The low range value that a characteristic can take on"
        valueTo:
          type: "integer"
          description: "The upper range value that a characteristic can take on"
        rangeInterval:
          type: "string"
          description: "An indicator that specifies the inclusion or exclusion of the\
            \ valueFrom and valueTo attributes. If applicable, possible values are \"\
            open\", \"closed\", \"closedBottom\" and \"closedTop\"."
        regex:
          type: "string"
          description: "A regular expression constraint for given value"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceSpecCharRelationship:
      description: "An aggregation, migration, substitution, dependency or exclusivity\
        \ relationship between/among serviceSpecCharacteristics."
      type: "object"
      properties:
        relationshipType:
          type: "string"
          description: "Type of relationship such as aggregation, migration, substitution,\
            \ dependency, exclusivity"
        role:
          type: "string"
          description: "The association role for this service specification"
        id:
          type: "string"
          description: "Unique identifier of the target specification"
        href:
          type: "string"
          description: "Hyperlink reference to the target specification"
        name:
          type: "string"
          description: "Name of the target  characteristic"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the serviceSpecCharRelationship is valid"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceTestSpecificationRef:
      type: "object"
      description: "The service test specification used by the service test."
      properties:
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
        href:
          type: "string"
          description: "Hyperlink to access a service test specification."
        id:
          type: "string"
          description: "Identifier of a service test specification."
        version:
          type: "string"
          description: "Version of a service test specification "
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProblemUngroup:
      description: "Task resource that requests Service Problems to be ungrouped from\
        \ a parent"
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference to this task resource"
        id:
          type: "string"
          description: "Unique identifier of this task resource"
        childProblem:
          type: "array"
          description: "List of problems to be ungrouped from a parent problem"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceProblemRef'
        parentProblem:
          description: "The parent problem from which the problems are to be ungrouped"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceProblemRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceQualification:
      type: "object"
      description: "ServiceQualification is used to perform a technical eligibility.\
        \ It allows to retrieve a list of services that are technically available in\
        \ the context of the interaction (place, party, service characteristics, ...)."
      properties:
        description:
          type: "string"
          description: "Description of the serviceQualification"
        effectiveQualificationDate:
          type: "string"
          description: "Effective date to serviceQualification completion"
          format: "date-time"
        estimatedResponseDate:
          type: "string"
          description: "Date when the requester expect to provide an answer for the\
            \ qualification request."
          format: "date-time"
        expectedQualificationDate:
          type: "string"
          description: "A date (DateTime). Deadline date when the requester expected\
            \ a qualification answer."
          format: "date-time"
        expirationDate:
          type: "string"
          description: "Date when the qualification response expires"
          format: "date-time"
        href:
          type: "string"
          description: "Hyperlink to access the serviceQualification"
        id:
          type: "string"
          description: "Unique identifier of the serviceQualification resource"
        provideAlternative:
          type: "boolean"
          description: "When the value is TRUE means that alternative solutions should\
            \ be provided"
        provideOnlyAvailable:
          type: "boolean"
          description: "When the value is TRUE means that only available service must\
            \ be listed in the response"
        provideUnavailabilityReason:
          type: "boolean"
          description: "When the value is TRUE means that unavailability reason are\
            \ expected for non available service."
        serviceQualificationDate:
          type: "string"
          description: "Date when the serviceQualification was submitted"
          format: "date-time"
        state:
          type: "string"
          description: "State of the serviceQualification (acknowledged, inProgress,\
            \ terminatedWithError, done)"
        serviceQualificationItem:
          type: "array"
          description: "A list of service qualification items."
          minItems: 1
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceQualificationItem'
        relatedParty:
          type: "array"
          description: "A list of related party references, defines party or party role\
            \ linked to this request."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        externalId:
          description: "Identifier provided by the requester"
          type: "string"
        qualificationResult:
          description: "Qualification result for this serviceQualification. It could\
            \ be:  qualified (all qualification item are qualified), alternate (At least\
            \ one item alternate and no item with  unqualified), unqualified (At least\
            \ one item unqualified)"
          type: "string"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceLevelSpecification:
      description: "A Service Level Specification represents a pre-defined or negotiated\
        \ set of Service Level \nObjectives. In addition, certain consequences are associated\
        \ with not meeting the Service Level \nObjectives. Service Level Agreements\
        \ are expressed in terms of Service Level Specifications."
      type: "object"
      properties:
        description:
          type: "string"
          description: "A brief introduction of a service level specification."
        href:
          type: "string"
          description: "The hyperlink to access a service level specification."
        id:
          type: "string"
          description: "The identifier to a service level specification."
        name:
          type: "string"
          description: "The name of Service Level Specification"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "A valid duration of a thing."
        relatedServiceLevelObjective:
          type: "array"
          description: "A list of objectives related to this service level specification"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceLevelObjectiveRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceQualificationRelationship:
      type: "object"
      properties:
        id:
          type: "string"
          description: "The id of the target qualification pointed to by this relationship"
        relationshipType:
          type: "string"
          description: "The type of relationship"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceProblemEventRecord:
      type: "object"
      description: "A record of an event (related to a service problem) received from\
        \ another system"
      properties:
        eventTime:
          description: "Time at which the event occurred"
          type: "string"
          format: "date-time"
        eventType:
          description: "Type of the recorded event"
          type: "string"
        href:
          description: "reference to this resource"
          type: "string"
        id:
          description: "Identifier of the service problem event record."
          type: "string"
        recordTime:
          description: "Time at which the record was created"
          type: "string"
          format: "date-time"
        serviceProblem:
          description: "The service problem to which this record applies"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceProblemRef'
        notification:
          description: "A notification from the possible notifications for Service Problem\
            \ (such as creation, status change, information required, change)"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Any'


    TestMeasureDefinition:
      description: "A TestMeasureDefinition specifies a measure of a specific aspect\
        \ of a product, service, or resource test, such as lost packets or connectivity\
        \ status"
      type: "object"
      properties:
        captureFrequency:
          type: "string"
          description: "The frequency of capture for the metric. Note: This may be replaced\
            \ by a set of entities similar to the Performance Monitoring"
        captureMethod:
          type: "string"
          description: "The method used to capture the Metric. Note: This may be replaced\
            \ by a set of entities similar to the Performance Monitoring"
        capturePeriod:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Duration'
          description: "A period of the capture"
        metricDescription:
          type: "string"
          description: "Brief description of the metric"
        metricHref:
          type: "string"
          description: "Hyperlink to access a metric for detail information"
        metricName:
          type: "string"
          description: "The name of a metric that in the test measure"
        name:
          type: "string"
          description: "The name of the TestMeasureDefinition"
        unitOfMeasure:
          type: "string"
          description: "Name of a service test specification"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The time period for which this definition is valid"
        valueType:
          type: "string"
          description: "A kind of value that the Metric value can take on, such as numeric,\
            \ text, and so forth"
        thresholdRule:
          type: "array"
          description: "The rule(s) associated with the measure threshold"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/MetricDefMeasureThresholdRule'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceOrderActionType:
      description: "string"
      type: "string"
      enum:
      - "add"
      - "modify"
      - "delete"
      - "noChange"


    ServiceTestSpecification:
      description: "The service test specification describes the service test in terms\
        \ of parameters to be configured and \nmeasures to be taken."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description of a service test specification."
        href:
          type: "string"
          description: "Hyperlink to access a service test specification."
        id:
          type: "string"
          description: "Identifier of a service test specification."
        version:
          type: "string"
          description: "Version of a service test specification "
        name:
          type: "string"
          description: "Name of a service test specification."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period of time for which this specification is valid"
        testMeasureDefinition:
          type: "array"
          description: "A list of definitions for the measurements for the test defined\
            \ by this specification"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/TestMeasureDefinition'
        relatedServiceSpecification:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceSpecificationRef'
          description: "The related service specification."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceQualificationItemRelationship:
      description: "Structure used to describe relationship between serviceQualification\
        \ items from the same serviceQualification."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Id of the serviceQualificationItem (from the same serviceQualificationItem)."
        relationshipType:
          type: "string"
          description: "Type of relationship (ex: reliesOn, connectedTo, etc...)"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ProblemGroup:
      description: "Task resource that requests Service Problems to be grouped together\
        \ into a parent and set of children"
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference to this task resource"
        id:
          type: "string"
          description: "Unique identifier of this task resource"
        childProblem:
          type: "array"
          description: "List of problems to be grouped under a parent problem"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceProblemRef'
        parentProblem:
          description: "The parent problem to which the problems are to be grouped"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceProblemRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceSpecificationRef:
      description: "Service specification reference: ServiceSpecification(s) required\
        \ to realize a ProductSpecification."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier of the service specification"
        href:
          type: "string"
          description: "Reference of the serviceSpecification"
        name:
          type: "string"
          description: "Name of the requiredServiceSpecification"
        version:
          type: "string"
          description: "Service specification version"
        targetServiceSchema:
          description: "A target service schema reference (TargetServiceSchemaRef).\
            \ The reference object to the schema and type of target service which is\
            \ described by service specification."
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/TargetServiceSchema'
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceRelationship:
      description: "Describes links with services of the same category (useful for bundled\
        \ services)"
      type: "object"
      required:
      - "relationshipType"
      - "service"
      properties:
        relationshipType:
          type: "string"
          description: "The type of relationship (e.g. depends on, enables)"
        service:
          description: "The service being referred to"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceRef'


    ServiceSpecCharacteristic:
      description: "This class represents the key features of this service specification.\
        \ For example, bandwidth is a characteristic of many different types of services;\
        \ if bandwidth is a relevant characteristic (e.g., from the point-of-view of\
        \ a Customer obtaining this Service via a Product) then bandwidth would be a\
        \ ServiceSpecCharacteristic for that particular Service."
      type: "object"
      properties:
        name:
          type: "string"
          description: "A word, term, or phrase by which this characteristic specification\
            \ is known and distinguished from other characteristic specifications."
        description:
          type: "string"
          description: "A narrative that explains in detail what the serviceSpecCharacteristic\
            \ is"
        valueType:
          type: "string"
          description: "A kind of value that the characteristic can take on, such as\
            \ numeric, text and so forth"
        configurable:
          type: "boolean"
          description: "If true, the Boolean indicates that the serviceSpecCharacteristic\
            \ is configurable"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the serviceSpecCharacteristic is valid"
        '@valueSchemaLocation':
          type: "string"
          description: "This (optional) field provides a link to the schema describing\
            \ the value type."
        minCardinality:
          type: "integer"
          description: "The minimum number of instances a CharacteristicValue can take\
            \ on. For example, zero to five phone numbers in a group calling plan, where\
            \ zero is the value for the minCardinality."
        maxCardinality:
          type: "integer"
          description: "The maximum number of instances a CharacteristicValue can take\
            \ on. For example, zero to five phone numbers in a group calling plan, where\
            \ five is the value for the maxCardinality."
        isUnique:
          type: "boolean"
          description: "An indicator that specifies if a value is unique for the specification.\
            \ Possible values are; \"unique while value is in effect\" and \"unique\
            \ whether value is in effect or not\""
        regex:
          type: "string"
          description: "A rule or principle represented in regular expression used to\
            \ derive the value of a characteristic value."
        extensible:
          type: "boolean"
          description: "An indicator that specifies that the values for the characteristic\
            \ can be extended by adding new values when instantiating a characteristic\
            \ for an Entity."
        serviceSpecCharacteristicValue:
          type: "array"
          description: "A list of service spec characteristic values (ServiceSpecCharacteristicValue\
            \ [*]). A ServiceSpecCharacteristicValue object is used to define a set\
            \ of attributes, each of which can be assigned to a corresponding set of\
            \ attributes in a ServiceSpecCharacteristic object. The values of the attributes\
            \ in the ServiceSpecCharacteristicValue object describe the values of the\
            \ attributes that a corresponding ServiceSpecCharacteristic object can take\
            \ on."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceSpecCharacteristicValue'
        serviceSpecCharRelationship:
          type: "array"
          description: "A list of service spec char relationships (ServiceSpecCharRelationship\
            \ [*]). An aggregation, migration, substitution, dependency or exclusivity\
            \ relationship between/among Specification Characteristics."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceSpecCharRelationship'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceRef:
      description: "Service reference, for when Service is used by other entities"
      type: "object"
      properties: {}
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    ServiceCandidate:
      description: "ServiceCandidate is an entity that makes a service specification\
        \ available to a catalog. A\nServiceCandidate and its associated service specification\
        \ may be published - made visible - in any number of service catalogs, or in\
        \ none. One service specification can be composed of other service specifications."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier of this REST resource"
        href:
          type: "string"
          description: "Hyperlink reference to this REST resource"
        name:
          type: "string"
          description: "Name given to this REST resource"
        description:
          type: "string"
          description: "Description of this REST resource"
        version:
          type: "string"
          description: "the version of service candidate"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which this REST resource is valid"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date and time of the last update of this REST resource"
        lifecycleStatus:
          type: "string"
          description: "Used to indicate the current lifecycle status of the service\
            \ candidate."
        category:
          type: "array"
          description: "List of categories for this candidate"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceCategoryRef'
        serviceSpecification:
          description: "The service specification implied by this candidate"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceSpecificationRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceOrderRelationship:
      type: "object"
      description: "Linked service order to the one containing this attribute"
      required:
      - "id"
      properties:
        '@referredType':
          type: "string"
          description: "The entity type of the related order"
        href:
          type: "string"
          description: "A hyperlink to the related order"
        id:
          type: "string"
          description: "The id of the related order"
        relationshipType:
          type: "string"
          description: "The type of related order, such as: [dependency] if the order\
            \ needs to be [not started] until another order item is complete (a service\
            \ order in this case) or [cross-ref] to keep track of the source order (a\
            \ productOrder)"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceCharacteristic:
      description: "is a list of name value pairs that define the service characteristics"
      type: "object"
      properties:
        name:
          type: "string"
          description: "Name of the characteristic"
        valueType:
          type: "string"
          description: "Data type of the characteristic"
        value:
          description: "Actual value of the characteristio"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Value'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceOrderItem:
      type: "object"
      required:
      - "id"
      - "action"
      properties:
        id:
          type: "string"
          description: "Identifier of the individual line item"
        action:
          description: "The action to be carried out on the Service. Can be: add, modify,\
            \ delete, noChange"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceOrderActionType'
        state:
          description: "State of the order item: described in the state machine diagram.\
            \ This is the requested state."
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceOrderStateType'
        service:
          description: "The Service to be acted on by the order item"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/BaseService'
        appointment:
          description: "An appointment that was set up with a related party for this\
            \ order item"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/AppointmentRef'
        serviceOrderItemRelationship:
          type: "array"
          description: "A list of order items related to this order item"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/OrderItemRelationship'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceProblemRef:
      type: "object"
      properties:
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
        correlationId:
          type: "string"
          description: "Additional identifier coming from an external system"
        href:
          type: "string"
          description: "Reference of the Problem"
        id:
          type: "string"
          description: "Unique identifier of the Problem"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    TestMeasure:
      description: "A TestMeasure specifies a measure of a specific aspect of a product,\
        \ service, or resource test, such as lost packets or connectivity status"
      type: "object"
      properties:
        accuracy:
          type: "number"
          format: "float"
          description: "The number of digits of accuracy captured for associated Metrics"
        captureDateTime:
          type: "string"
          format: "date-time"
          description: "The date and time that the metric was captured"
        captureMethod:
          type: "string"
          description: "The method used to capture the Metrics (This may be replaced\
            \ by a set of entities similar to the Performance Monitoring Ref)"
        metricDescription:
          type: "string"
          description: "Brief description of the metric"
        metricHref:
          type: "string"
          description: "Hyperlink to access a metric for detail information"
        metricName:
          type: "string"
          description: "The name of the metric"
        ruleViolation:
          type: "array"
          description: "A list of rules that were violated in this test measure"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/MeasureThresholdRuleViolation'
        unitOfMeasure:
          type: "string"
          description: "The unit of measure for the metric values, such as meters, cubic\
            \ yards, kilograms [ISO 1000]."
        value:
          description: "The value of Metric in the test. This also could be a document\
            \ to record all values captured during the service test"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    BaseService:
      description: "In the context of a service order and depending on the action requested\
        \ (add/modify/delete/noChange) this data structure captures the configuration\
        \ to apply to an existing subscribed service or to a new one"
      type: "object"
      properties:
        id:
          description: "Unique identifier of the service"
          type: "string"
        href:
          description: "Reference of the service"
          type: "string"
        serviceType:
          description: "Business type of the service"
          type: "string"
        name:
          description: "Name of the service"
          type: "string"
        state:
          description: "The life cycle state of the service, such as: [feasibilityChecked],\
            \ [designed]"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceStateType'
        category:
          type: "string"
          description: "Is it a customer facing or resource facing service"
        serviceSpecification:
          description: "The specification from which this service was instantiated"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceSpecificationRef'
        serviceCharacteristic:
          type: "array"
          description: "A list of characteristics that characterize this service (ServiceCharacteristic\
            \ [*]) "
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
        serviceRelationship:
          type: "array"
          description: "A list of service relationships (ServiceRelationship [*]). Describes\
            \ links with other service(s) in the inventory (useful for describing relies-on,\
            \ relies-from between CFS for example)."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceRelationship'
        supportingService:
          type: "array"
          description: "A list of supporting services (SupportingService [*]). A collection\
            \ of services that support this service (bundling, link CFS to RFS)"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceRef'
        supportingResource:
          type: "array"
          description: "A list of supporting resources (SupportingResource [*]).Note:\
            \ only Service of type RFS can be associated with Resources"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Resource.yaml#/components/schemas/ResourceRef'
        relatedParty:
          type: "array"
          description: "A list of related party references (RelatedParty [*]). A related\
            \ party defines party or party role linked to a specific entity"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        place:
          type: "array"
          description: "A list of places (Place [*]). Used to define a place useful\
            \ for the service (for example a delivery geographical place)"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Place'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    SupportingService:
      description: "A collection of services that support this service (links between\
        \ CFS -> RFS)"
      type: "object"
      properties:
        category:
          type: "string"
          description: "Category of the supporting service"
        href:
          type: "string"
          description: "Reference of the supporting service"
        id:
          type: "string"
          description: "Unique identifier of the supporting service"
        name:
          type: "string"
          description: "Name of the supporting service"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceLevelSpecificationRef:
      description: "A Service Level Specification represents a pre-defined or negotiated\
        \ set of Service Level \nObjectives. In addition, certain consequences are associated\
        \ with not meeting the Service Level \nObjectives. Service Level Agreements\
        \ are expressed in terms of Service Level Specifications."
      type: "object"
      properties:
        href:
          type: "string"
          description: "The hyperlink to access a service level specification."
        id:
          type: "string"
          description: "The identifier to a service level specification."
        name:
          type: "string"
          description: "The name of Service Level Specification"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceTest:
      description: "A service test is an entity that exists for a controlled test invocation\
        \ on a service. The service \ntest is executed according to a schedule and contains\
        \ service test configuration parameters that are to be \napplied at execution\
        \ time, and service test measures that result."
      type: "object"
      properties:
        characteristic:
          type: "array"
          description: "List of characteristics with values that define the test run"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
        description:
          type: "string"
          description: "Description of the service test"
        endDateTime:
          type: "string"
          format: "date-time"
          description: "The end date and time of the service test"
        href:
          type: "string"
          description: "Hyperlink to access the service test"
        id:
          type: "string"
          description: "The identifier of the service test"
        mode:
          type: "string"
          description: "An indication of whether the service test is running in \n\"\
            PROACTIVE\" or \"ONDEMAND\" mode"
        name:
          type: "string"
          description: "The name of the service test"
        relatedService:
          description: "The actual service being tested"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceRef'
        startDateTime:
          type: "string"
          format: "date-time"
          description: "The start date and time of the service test."
        state:
          type: "string"
          description: "The actual state the service test is in"
        testMeasure:
          type: "array"
          description: "The results of the test in terms of the measured metrics"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/TestMeasure'
        testSpecification:
          description: "The specification for this test"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceTestSpecificationRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceProblem:
      type: "object"
      description: "The problem information for Middle B which is abstracted in the\
        \ service layer from the issued event information by First B"
      properties:
        affectedLocation:
          type: "array"
          description: "A list of the locations affected by the problem. At least one\
            \ of affectedResource, affectedService or affectedLocation should be present."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Place'
        affectedNumberOfServices:
          type: "integer"
          description: "Number of affected services"
        affectedResource:
          type: "array"
          description: "A list of the resources affected by the problem. At least one\
            \ of affectedResource, affectedService or affectedLocation should be present."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Resource.yaml#/components/schemas/ResourceRef'
        affectedService:
          type: "array"
          description: "List of affected services. At least one of affectedResource,\
            \ affectedService or affectedLocation should be present."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceRef'
        category:
          type: "string"
          description: "Classifier for the problem. Settable. For example, this is used\
            \ for distinguish the category of problem originator in [role].[category]\
            \ format. Example: serviceProvider.declarer, supplier.originated, system.originated"
        comment:
          type: "array"
          description: "A list of comments or notes made on the problem"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Note'
        correlationId:
          type: "string"
          description: "Additional identifier coming from an external system"
        description:
          type: "string"
          description: "Free form text describing the Service Problem"
        extensionInfo:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
          description: "A generic list of any type of elements. Used for vendor Extensions\
            \ or loose element encapsulation from other namespaces"
        firstAlert:
          description: "Indicates what first alerted the system to the problem. It is\
            \ not the root cause of the Service Problem. Examples: Threshold crossing\
            \ alert"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/RelatedEntityRef'
        href:
          type: "string"
          description: "Reference to the Service Problem"
        id:
          type: "string"
          description: "Identifier of the service problem"
        impactImportanceFactor:
          type: "string"
          description: "Impact Importance is characterized by an Impact Importance Factor:\
            \ overall importance of the impact of all the affected services, e.g. 0\
            \ (zero impact) to 100 (worst impact). The Impact Importance is a calculated\
            \ field which is set by the OSS determining the impact."
        impactPatterns:
          description: "Define the patterns of impact (optional)- e.g. other service\
            \ characteristics- Used when defining impact through another pattern than\
            \ the predefined attributes."
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ImpactPattern'
        originatingSystem:
          type: "string"
          description: "Indicates where the problem was generated"
        parentProblem:
          type: "array"
          description: "The parent problem to which this problem is attached."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceProblemRef'
        priority:
          type: "integer"
          description: "An indication varying from 1 (highest) to 10 (lowest) of how\
            \ important it is for the service provider to correct the Service Problem."
        problemEscalation:
          type: "string"
          description: "Indicates if this service problem has been escalated or not.\
            \ Possible values are 0 to 10. A value of zero means no escalation. The\
            \ meanings of values 1-10 are to be determined by the user of the interface,\
            \ but they show increasing levels of escalation."
        reason:
          type: "string"
          description: "Free text or optionally structured text. It can be Unknown."
        relatedEvent:
          type: "array"
          description: "List of events associated to this problem"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EventRef'
        relatedObject:
          type: "array"
          description: "List of objects associated to this problem"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/RelatedEntityRef'
        originatorParty:
          description: "Individual or organization that created the problem"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        responsibleParty:
          description: "Individual or organization responsible for handling this problem"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        relatedParty:
          type: "array"
          description: "List of parties or party roles playing a role within the service\
            \ problem"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        rootCauseResource:
          type: "array"
          description: "Resource(s) that are associated to the underlying service problems\
            \ that are the Root Cause of this one if any (used only if applicable)."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Resource.yaml#/components/schemas/ResourceRef'
        rootCauseService:
          type: "array"
          description: "Service(s) that are associated to the underlying service problems\
            \ that are the Root Cause of this one if any (used only if applicable)"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceRef'
        resolutionDate:
          type: "string"
          format: "date-time"
          description: "Time the problem was resolved"
        status:
          type: "string"
          description: "The current status of the service problem. Possible values are\
            \ Submitted, Rejected, Acknowledged, In Progress [Held, Pending], Resolved,\
            \ Closed, and Cancelled."
        statusChangeDate:
          type: "string"
          format: "date-time"
          description: "Time the problem was last status changed"
        statusChangeReason:
          type: "string"
          description: "The reason of state change"
        timeChanged:
          type: "string"
          format: "date-time"
          description: "Time the problem was last changed"
        timeRaised:
          type: "string"
          format: "date-time"
          description: "Time the problem was raised"
        trackingRecord:
          type: "array"
          description: "List of tracking records that allow the tracking of modifications\
            \ on the problem.The tracking records should not be embedded in the problem\
            \ to allow retrieving the problem without the tracking records"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/TrackingRecord'
        underlyingAlarm:
          type: "array"
          description: "A list of alarms underlying this problem."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Resource.yaml#/components/schemas/ResourceAlarmRef'
        associatedSLAViolation:
          type: "array"
          description: "A List of SLA violations associated with this problem."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/SLAViolationRef'
        associatedTroubleTicket:
          type: "array"
          description: "A list of trouble tickets associated with this problem."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TroubleTicketRef'
        underlyingProblem:
          type: "array"
          description: "A list of underlying problems. Relevant only if this problem\
            \ is derived from other problems."
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceProblemRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceCatalog:
      description: "The root entity for service catalog management.\nA service catalog\
        \ is a group of service specifications made available through service candidates\
        \ that an organization provides to the consumers (internal consumers like its\
        \ employees or B2B customers or B2C customers). \nA service catalog typically\
        \ includes name, description and time period that is valid for. It will have\
        \ a list of ServiceCandidate catalog items. A ServiceCandidate is an entity\
        \ that makes a ServiceSpecification available to a catalog.\nA ServiceCandidate\
        \ and its associated ServiceSpecification may be \"published\" - made visible\
        \ -in any number of ServiceCatalogs, or in none."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier of the ServiceCatalog"
        href:
          type: "string"
          description: "Unique reference of the service catalog"
        name:
          type: "string"
          description: "Name of the service catalog"
        description:
          type: "string"
          description: "Description of this catalog"
        version:
          type: "string"
          description: "ServiceCatalog version"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the service catalog is valid"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date and time of the last update"
        lifecycleStatus:
          type: "string"
          description: "Used to indicate the current lifecycle status"
        category:
          type: "array"
          description: "List of service categories associated with this catalog"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceCategoryRef'
        relatedParty:
          type: "array"
          description: "List of parties or party roles related to this category"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceCategory:
      description: "The (service) category resource is used to group service candidates\
        \ in logical containers. Categories can contain other categories."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier of the category"
        href:
          type: "string"
          description: "Reference of the category"
        name:
          type: "string"
          description: "Name of the category"
        description:
          type: "string"
          description: "Description of the category"
        version:
          type: "string"
          description: "ServiceCategory version"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the category is valid"
        lifecycleStatus:
          type: "string"
          description: "Used to indicate the current lifecycle status"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date and time of the last update"
        parentId:
          type: "string"
          description: "Unique identifier of the parent category"
        isRoot:
          type: "boolean"
          description: "If true, this Boolean indicates that the category is a root\
            \ of categories"
        serviceCandidate:
          type: "array"
          description: "List of service candidates associated with this category"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceCandidateRef'
        category:
          type: "array"
          description: "List of child categories in the tree for in this category"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceCategoryRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    TargetServiceSchema:
      type: "object"
      description: "The reference object to the schema and type of target service which\
        \ is described by service specification"
      properties:
        '@type':
          type: "string"
          description: "Class type of the target service"
        '@schemaLocation':
          type: "string"
          description: "This field provides a link to the schema describing the target\
            \ service"
      required:
      - "@type"
      - "@schemaLocation"


    ProblemAcknowledgement:
      type: "object"
      description: "Task resource that requests acknowledgement of problems by the problem\
        \ handler."
      properties:
        href:
          type: "string"
          description: "Reference to this task resource"
        id:
          type: "string"
          description: "Unique identifier of this task resource"
        problem:
          description: "The problems to be acknowledged, relevant in the input to this\
            \ task"
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceProblemRef'
        ackProblem:
          description: "The problems that were acknowledged, populated in the output\
            \ to this task"
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/ServiceProblemRef'
        trackingRecord:
          description: "A record of the action taken in this acknowledgement"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Service.yaml#/components/schemas/TrackingRecord'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    ServiceSpecRelationship:
      description: "A migration, substitution, dependency or exclusivity relationship\
        \ between/among service specifications."
      type: "object"
      properties:
        relationshipType:
          type: "string"
          description: "Type of relationship such as migration, substitution, dependency,\
            \ exclusivity"
        role:
          type: "string"
          description: "The association role for this service specification"
        id:
          type: "string"
          description: "Unique identifier of the target serviceSpecification"
        href:
          type: "string"
          description: "Reference of the target serviceSpecification"
        name:
          type: "string"
          description: "The name given to the target service specification instance"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the serviceSpecRelationship is valid"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


