#############################################################################
## 1. OPENAPI
#############################################################################
openapi: 3.0.2

#############################################################################
## 2. INFO
#############################################################################
info:
  version: 1.0.0
  title: TMFORUM Common Schema (Data Type) Definitions for APIs
  contact:
    name: MonetizeHub.IO Project Support
    
  license:
    name: TMFORUM RAND
    url: https://github.com/tmforum-rand/RAND-LICENSE 
  description: |
    <!-- Note that this description is a MARKDOWN Block -->

    **This Open API specification does NOT contain any valid PATHS/OPERATIONS!!!. It ONLY contains COMMON SCHEMA (TYPE) DEFINITIONS referred by other API specifications.**

    Thus, in this context COMMON SCHEMA (TYPE) DEFINITIONS mean shared entity models or baseline objects that can be reused with or without extension.
    
#############################################################################
## 3. SERVERS
#############################################################################
servers:
  - url: https://monetizehub.io/demos/current/apis/private/
    description: MonE Private APIs and Schemas Specification

#############################################################################
## 4. PATHS
#############################################################################
paths:
  /readMe:
    get:
      summary: This is a placeholder nouse operation. (to bypass Swagger UI limitation of a specification with ONLY data models without operation)
      operationId: readMe
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string


#############################################################################
## 5. COMPONENTS
#############################################################################
components:
  schemas:


    PartnershipRef:
      description: "Partnership reference. A partnership contains all the information\
        \ for the setup of a partnership of a given kind. This includes the list of\
        \ identified role types for the partnership with the corresponding agreement\
        \ specifications."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference url for the partnership"
        id:
          type: "string"
          description: "Identifier of the partnership"
        name:
          type: "string"
          description: "Name of the partnership"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    SLA:
      description: "Part of a business agreement between a Service Provider and a Customer,\
        \ quantitatively specifying the service performance level the Service Provider\
        \ commits to deliver."
      type: "object"
      properties:
        approvalDate:
          type: "string"
          format: "date-time"
        approved:
          type: "boolean"
        description:
          type: "string"
          description: "Description of the Service Level Agreement (SLA)"
        href:
          type: "string"
          description: "Reference of the Service Level Agreement (SLA)"
        id:
          type: "string"
          description: "Unique identifier of the Service Level Agreement (SLA)"
        name:
          type: "string"
          description: "Name of the Service Level Agreement (SLA)"
        state:
          type: "string"
          description: "State of the Service Level Agreement (SLA)"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "Period where the clauses of the SLA are applicable"
        version:
          type: "string"
          description: "Version of the Service Level Agreement (SLA)"
        rule:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/Rule'
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        template:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/TemplateRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    Violation:
      type: "object"
      properties:
        actualValue:
          type: "string"
        comment:
          type: "string"
        consequence:
          type: "string"
        operator:
          type: "string"
        referenceValue:
          type: "string"
        tolerance:
          type: "string"
        unit:
          type: "string"
        violationAverage:
          type: "string"
        attachment:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/AttachmentRef'
        rule:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RuleRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    Contact:
      description: "An individual or an organization used as a contact point for a given\
        \ account and accessed via some contact medium."
      type: "object"
      required:
      - "contactType"
      properties:
        contactName:
          type: "string"
          description: "A displayable name for that contact"
        contactType:
          type: "string"
          description: "Type of contact (primary, secondary...)"
        partyRoleType:
          type: "string"
          description: "Identifies what kind of party role type is linked to the contact\
            \ (a account manager...)"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "Validity period of that contact"
        contactMedium:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/ContactMedium'
        relatedParty:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    OtherName:
      description: "To keep track of other names (for example the old name of a woman\
        \ before marriage or an artist name)"
      type: "object"
      properties:
        familyName:
          type: "string"
          description: "Last name"
        formattedName:
          type: "string"
          description: "A formatted name useful for specific contexts (chinese, japanese,\
            \ korean...)"
        fullName:
          type: "string"
          description: "Full name flatten (first, middle, and last name)"
        givenName:
          type: "string"
          description: "First name"
        middleName:
          type: "string"
          description: "Middle name"
        nameType:
          type: "string"
          description: "Co., Inc., Ltd., Plc., Gmbh."
        title:
          type: "string"
          description: "useful for titles (aristocratic, social...) Dr, Pr, Sir..."
        tradingName:
          type: "string"
          description: "The name that the organization trades under"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the other name is valid"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    BankAccountTransferMethod:
      type: "object"
      properties:
        details:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/BankAccountTransferDetails'
        description:
          type: "string"
          description: "Text describing the contents of the payment method"
        href:
          type: "string"
          description: "A resource URI pointing to the resource in the server that stores\
            \ the detailed information. This is typically the resource url to retrieve\
            \ individual details for the specific payment method"
        id:
          type: "string"
          description: "Unique Identifier within the server for the payment method."
        name:
          type: "string"
          description: "Friendly name assigned to the payment method"
        preferred:
          type: "boolean"
          description: "If the method is the preferred one by the owner. Typically used\
            \ when querying for the payment methods of a specific customer or account"
        status:
          type: "string"
        statusDate:
          type: "string"
          format: "date-time"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "Date interval in which the payment method is valid"
        relatedParty:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        account:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AccountRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    Account:
      description: "Generic Account structure used to define commonalities between sub\
        \ concepts of PartyAccount and Financial Account."
      type: "object"
      required:
      - "name"
      properties:
        creditLimit:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Money'
          description: "The maximum amount of money that may be charged on an account"
        description:
          type: "string"
          description: "Detailed description of the party account"
        href:
          type: "string"
          description: "Unique reference of the account"
        id:
          type: "string"
          description: "Unique identifier of the account"
        lastModified:
          type: "string"
          format: "date-time"
          description: "Date of last modification of the account"
        name:
          type: "string"
          description: "Name of the account"
        state:
          type: "string"
          description: "Contains the lifecycle state such as: Active, Closed, Suspended\
            \ and so on."
        accountType:
          type: "string"
          description: "A categorization of an account, such as individual, joint, and\
            \ so forth, whose instances share some of the same characteristics. Note:\
            \ for flexibility we use a String here but an implementation may use an\
            \ enumeration with a limited list of valid values."
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        taxExemption:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AccountTaxExemption'
        contact:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/Contact'
        accountBalance:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AccountBalance'
        accountRelationship:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AccountRelationship'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    RelatedPartyRef:
      description: "RelatedParty reference. A related party defines party or party role\
        \ linked to a specific entity."
      type: "object"
      properties:
        id:
          type: "string"
          description: "Unique identifier of a related party"
        href:
          type: "string"
          description: "Reference of the related party, could be a party reference or\
            \ a party role reference"
        name:
          type: "string"
          description: "Name of the related party"
        role:
          type: "string"
          description: "Role of the related party."
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PartyAccount:
      description: "Account used for billing or for settlement purposes concerning a\
        \ given party (an organization or an individual). It is a specialization of\
        \ entity Account."
      type: "object"
      required:
      - "name"
      - "relatedParty"
      properties:
        paymentStatus:
          type: "string"
          description: "The condition of the account, such as due, paid, in arrears."
        billStructure:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/BillStructure'
        paymentPlan:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/PaymentPlan'
        financialAccount:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/FinancialAccountRef'
        defaultPaymentMethod:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/PaymentMethodRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/Account'


    SLAViolation:
      type: "object"
      properties:
        date:
          type: "string"
          format: "date-time"
        href:
          type: "string"
        id:
          type: "string"
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        violation:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/Violation'
        sla:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/SLARef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    SLARef:
      description: "ServiceLevelAgreement reference: A service level agreement (SLA)\
        \ is a type of agreement that represents a formal negotiated agreement between\
        \ two parties designed to create a common understanding about products, services,\
        \ priorities, responsibilities, and so forth. The SLA is a set of appropriate\
        \ procedures and targets formally or informally agreed between parties in order\
        \ to achieve and maintain specified Quality of Service."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the service level agreement"
        id:
          type: "string"
          description: "Unique identifier of service level agreement"
        name:
          type: "string"
          description: "Name of the service level agreement"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    Partner:
      description: "The part played by a party in a given context."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Url used to reference the partner."
        id:
          type: "string"
          description: "Unique identifier for Partners"
        name:
          type: "string"
          description: "A word, term, or phrase by which the Partner is known and distinguished\
            \ from other Partners."
        status:
          type: "string"
          description: "Used to track the lifecycle status of the partner."
        statusReason:
          type: "string"
          description: "A string providing an explanation on the value of the status\
            \ lifecycle. For instance if the status is Rejected, statusReason will provide\
            \ the reason for rejection."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The time period that the Partner is valid for."
        engagedParty:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
          description: "The reference to the party engaged in this partnership."
        account:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AccountRef'
        paymentMethod:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/PaymentMethodRef'
        contactMedium:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/ContactMedium'
        characteristic:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
          description: "Describes the characteristic of a partner."
        creditProfile:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/CreditProfile'
        agreement:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementRef'
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'
      required:
      - "name"
      - "engagedParty"


    FinancialAccountRef:
      description: "AccountReceivable reference. An account of money owed by a party\
        \ to another entity in exchange for goods or services that have been delivered\
        \ or used. An account receivable aggregates the amounts of one or more party\
        \ accounts (billing or settlement) owned by a given party."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Unique reference of the account"
        id:
          type: "string"
          description: "Unique identifier of the account"
        name:
          type: "string"
          description: "Name of the account"
        accountBalance:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AccountBalance'
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    BankAccount:
      description: "Describes the information of a bank account"
      type: "object"
      properties:
        accountHolder:
          type: "string"
          description: "Name of the holder of the bank account"
        BIC:
          type: "string"
          description: "Identifier of the bank according to its international code"
        domiciliation:
          type: "string"
          description: "Address of the bank agency which manages the bank account"
        IBAN:
          type: "string"
          description: "International Bank Account Number"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AccountBalanceRef:
      description: "Balances linked to the account"
      type: "object"
      properties:
        amount:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Money'
          description: "Balance amount"
        status:
          type: "string"
          description: "The condition of the account balance, such as due, paid, in\
            \ arrears."
        balanceType:
          type: "string"
          description: "Type of the balance : deposit balance, disputed balance, loyalty\
            \ balance, receivable balance..."
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    OrganizationParentRelationship:
      type: "object"
      description: "Parent references of an organization in a structure of organizations."
      properties:
        relationshipType:
          type: "string"
          description: "Type of the relationship. Could be juridical, hierarchical,\
            \ geographical, functional for example."
        organization:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/OrganizationRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AccountBalance:
      description: "Balances linked to the account"
      type: "object"
      required:
      - "amount"
      - "balanceType"
      - "validFor"
      properties:
        amount:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Money'
          description: "Balance amount"
        balanceType:
          type: "string"
          description: "Type of the balance : deposit balance, disputed balance, loyalty\
            \ balance, receivable balance..."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "Balance validity period"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    Skill:
      type: "object"
      description: "Skills evaluated for an individual with a level and possibly with\
        \ a limited validity when an obsolescence is defined (Ex: the first-aid certificate\
        \ first level is limited to one year and an update training is required each\
        \ year to keep the level)."
      properties:
        skillCode:
          type: "string"
          description: "Code of the skill"
        skillName:
          type: "string"
          description: "Name of the skill such as Java language,…"
        evaluatedLevel:
          type: "string"
          description: "Level of expertise in a skill evaluated for an individual"
        comment:
          type: "string"
          description: "A free text comment linked to the evaluation done"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PartnershipTypeRef:
      description: "PartnershipType reference. A partnership type contains all the information\
        \ for the setup of a partnership of a given kind. This includes the list of\
        \ identified role types for the partnership with the corresponding agreement\
        \ specifications."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference url for the partnership type"
        id:
          type: "string"
          description: "Identifier of the partnership"
        name:
          type: "string"
          description: "Name of the partnership type"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AgreementSpecification:
      description: "A template of an agreement that can be used when establishing partnerships"
      type: "object"
      required:
      - "name"
      - "attachment"
      properties:
        description:
          type: "string"
          description: "A narrative that explains in detail what the agreement specification\
            \ is about"
        href:
          type: "string"
          description: "Reference of the agreement specification"
        id:
          type: "string"
          description: "Unique identifier of the agreement specification"
        isBundle:
          type: "boolean"
          description: "If true, this agreement specification is a grouping of other\
            \ agreement specifications. The list of bundled agreement specifications\
            \ is provided by the specificationRelationship property"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date and time of the last update"
        lifecycleStatus:
          type: "string"
          description: "Indicates the current lifecycle status"
        name:
          type: "string"
          description: "Name of the agreement specification"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the agreement specification is valid"
        version:
          type: "string"
          description: "Agreement specification version"
        serviceCategory:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/CategoryRef'
        specificationCharacteristic:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementSpecCharacteristic'
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        attachment:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/AttachmentRefOrValue'
        specificationRelationship:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementSpecificationRelationship'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PartnershipSpecificationRoleRef.schema.json:
      description: "Reference to the RoleSpecification reference contained within a\
        \ given partnership specification."
      type: "object"
      properties:
        href:
          type: "string"
          description: "The href of the containing partnership specification."
        id:
          type: "string"
          description: "The id of the containing partnership specification."
        name:
          type: "string"
          description: "The name of the partnership specification."
        roleName:
          type: "string"
          description: "The name of the role specification - which should be defined\
            \ within the partnership specification"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    BankAccountTransferDetails:
      description: "Detailed information for a bank account debit. Bear in mind that\
        \ this could be extended to add any required authorization fields to allow recurring\
        \ payments"
      type: "object"
      properties:
        accountNumber:
          type: "integer"
          description: "Bank Account Number (this could refer to the IBAN or SWIFT number)"
        accountNumberType:
          type: "string"
          description: "Type of account number (e.g.: IBAN, SWIFT, ...)"
        BIC:
          type: "string"
          description: "Business Identifier Code/Swift code of the financial institution\
            \ where the account is located"
        blank:
          type: "string"
          description: "Display name of the bank"
        owner:
          type: "string"
          description: "Owner of the bank account"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    OrganizationStateType:
      type: "string"
      description: "Valid values for the lifecycle state of the organization"
      enum:
      - "initialized"
      - "validated"
      - "closed"


    PartnershipSpecification:
      description: "A partnership specification contains all the information for the\
        \ setup of a partnership of a given kind. This includes the list of identified\
        \ role types for the partnership with the corresponding agreement specifications."
      type: "object"
      required:
      - "name"
      properties:
        description:
          type: "string"
          description: "An explanatory text regarding this partnership specification"
        href:
          type: "string"
          description: "The reference url for this partnership specification"
        id:
          type: "string"
          description: "The identifier of the partnership specification"
        name:
          type: "string"
          description: "An identifying name for the partnership specification."
        roleSpecification:
          description: "The list of roles specifications a engaged party will be able\
            \ to play for this kind of partnership"
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RoleSpecification'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    Agreement:
      description: "An agreement represents a contract or arrangement, either written\
        \ or verbal and sometimes enforceable by law, such as a service level agreement\
        \ or a customer price agreement. An agreement involves a number of other business\
        \ entities, such as products, services, and resources and/or their specifications."
      type: "object"
      required:
      - "name"
      - "agreementType"
      - "engagedPartyRole"
      - "agreementItem"
      properties:
        agreementPeriod:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The time period during which the Agreement is in effect."
        completionDate:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "Date at which the agreement is completed"
        description:
          type: "string"
          description: "Narrative that explains the agreement and details about the\
            \ it , such as why the agreement is taking place."
        documentNumber:
          type: "integer"
          description: "A reference number assigned to an Agreement that follows a prescribed\
            \ numbering system."
        href:
          type: "string"
          description: "Unique url identifying the agreement as a resource"
        id:
          type: "string"
          description: "Unique identifier for the agreement"
        initialDate:
          type: "string"
          format: "date-time"
          description: "Date at which the agreement was initialized"
        name:
          type: "string"
          description: "A human-readable name for the agreement"
        statementOfIntent:
          type: "string"
          description: "An overview and goals of the Agreement"
        status:
          type: "string"
          description: "The current status of the agreement. Typical values are: in\
            \ process, approved and rejected"
        agreementType:
          type: "string"
          description: "The type of the agreement. For example commercial"
        version:
          type: "string"
          description: "A string identifying the version of the agreement"
        agreementSpecification:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementSpecificationRef'
        agreementItem:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementItem'
          minItems: 1
        engagedPartyRole:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        agreementAuthorization:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementAuthorization'
        characteristic:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
        associatedAgreement:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    Individual:
      type: "object"
      description: "Individual represents a single human being (a man, woman or child).\
        \ The individual can be a customer, an employee or any other person that the\
        \ organization needs to store information about."
      properties:
        gender:
          type: "string"
          description: "Gender"
        placeOfBirth:
          type: "string"
          description: "Reference to the place where the individual was born"
        countryOfBirth:
          type: "string"
          description: "Country where the individual was born"
        nationality:
          type: "string"
          description: "Nationality"
        maritalStatus:
          type: "string"
          description: "Marital status (married, divorced, widow ...)"
        birthDate:
          type: "string"
          format: "date-time"
          description: "Birth date"
        deathDate:
          type: "string"
          format: "date-time"
          description: "Date of death"
        title:
          type: "string"
          description: "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
        aristocraticTitle:
          type: "string"
          description: "e.g. Baron, Graf, Earl,…"
        generation:
          type: "string"
          description: "e.g.. Sr, Jr, III (the third),…"
        givenName:
          type: "string"
          description: "First name of the individual"
        preferredGivenName:
          type: "string"
          description: "Contains the chosen name by which the individual prefers to\
            \ be addressed. Note: This name may be a name other than a given name, such\
            \ as a nickname"
        familyNamePrefix:
          type: "string"
          description: "Family name prefix"
        familyName:
          type: "string"
          description: "Contains the non-chosen or inherited name. Also known as last\
            \ name in the Western context"
        legalName:
          type: "string"
          description: "Legal name or birth name (name one has for official purposes)"
        middleName:
          type: "string"
          description: "Middles name or initial"
        fullName:
          type: "string"
          description: "Full name flatten (first, middle, and last names)"
        formattedName:
          type: "string"
          description: "A fully formatted name in one string with all of its pieces\
            \ in their proper place and all of the necessary punctuation. Useful for\
            \ specific contexts (Chinese, Japanese, Korean,…)"
        location:
          type: "string"
          description: "Temporary current location od the individual (may be used if\
            \ the individual has approved its sharing)"
        status:
          description: "Status of the individual"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/IndividualStateType'
        otherName:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/OtherNameIndividual'
        individualIdentification:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/IndividualIdentification'
        disability:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/Disability'
        languageAbility:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/LanguageAbility'
        skill:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/Skill'
      required:
      - "id"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/Party'
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    OrganizationIdentification:
      description: "Represents our registration of information used as proof of identity\
        \ by an organization"
      type: "object"
      properties:
        identificationId:
          type: "string"
          description: "Identifier"
        issuingAuthority:
          type: "string"
          description: "Authority which has issued the identifier (chamber of commerce...)"
        issuingDate:
          type: "string"
          format: "date-time"
          description: "Date at which the identifier was issued"
        identificationType:
          type: "string"
          description: "Type of identification information used to identify the company\
            \ in a country or internationally"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the identification information is valid."
        attachment:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/AttachmentRefOrValue'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    OrganizationRef:
      type: "object"
      properties: {}
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    SettlementAccount:
      description: "A party account used for settlement purposes. It includes a description\
        \ of the bill structure (frequency, presentation media, format and so on). It\
        \ is a specialization of entity PartyAccount."
      type: "object"
      required:
      - "name"
      - "relatedParty"
      properties: {}
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/PartyAccount'


    AgreementRef:
      description: "Agreement reference. An agreement represents a contract or arrangement,\
        \ either written or verbal and sometimes enforceable by law, such as a service\
        \ level agreement or a customer price agreement. An agreement involves a number\
        \ of other business entities, such as products, services, and resources and/or\
        \ their specifications."
      type: "object"
      properties:
        name:
          type: "string"
          description: "Name of the agreement"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    TemplateRef:
      type: "object"
      properties:
        description:
          type: "string"
        href:
          type: "string"
        id:
          type: "string"
        name:
          type: "string"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    OtherNameOrganization:
      type: "object"
      description: "Keeps track of other names, for example the old name of an organization."
      properties:
        tradingName:
          type: "string"
          description: "The name that the organization trades under"
        nameType:
          type: "string"
          description: "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
        name:
          type: "string"
          description: "Organization name (department name for example)"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    BankAccountDebitDetails:
      description: "Detailed information for a bank account debit. Bear in mind that\
        \ this could be extended to add any required authorization fields to allow recurring\
        \ payments"
      type: "object"
      properties:
        accountNumber:
          type: "integer"
          description: "Bank Account Number (this could refer to the IBAN or SWIFT number)"
        accountNumberType:
          type: "string"
          description: "Type of account number (e.g.: IBAN, SWIFT, ...)"
        BIC:
          type: "string"
          description: "Business Identifier Code/Swift code of the financial institution\
            \ where the account is located"
        blank:
          type: "string"
          description: "Display name of the bank"
        owner:
          type: "string"
          description: "Owner of the bank account"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AgreementSpecificationRef:
      description: "AgreementSpecification reference. An AgreementSpecification represents\
        \ a template of an agreement that can be used when establishing partnerships."
      type: "object"
      properties:
        description:
          type: "string"
          description: "A narrative that explains in detail what the agreement specification\
            \ is about."
        name:
          type: "string"
          description: "Name of the agreement specification"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    RoleType:
      description: "A RoleType represents the type of a PartyRole, defined in the context\
        \ of a given type of partnership, such as Buyer, Seller."
      type: "object"
      required:
      - "name"
      properties:
        description:
          type: "string"
          description: "An explanatory text documenting the role type"
        name:
          type: "string"
          description: "The name of the role type."
        requiresBilling:
          type: "boolean"
          description: "Indicates whether billing operations will be associated to parties\
            \ playing the role"
        requiresSettlement:
          type: "boolean"
          description: "Indicates whether settlement operations will be associated to\
            \ parties playing the role"
        agreementSpecification:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementSpecificationRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PartnershipSpecificationRef:
      description: "PartnershipSpecification reference. A partnership specification\
        \ contains all the information for the setup of a partnership of a given kind.\
        \ This includes the list of identified role types for the partnership with the\
        \ corresponding agreement specifications."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference url for the partnership specification"
        id:
          type: "string"
          description: "Identifier of the partnership specification"
        name:
          type: "string"
          description: "Name of the partnership specification"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    FinancialAccount:
      description: "An account of money owed by a party to another entity in exchange\
        \ for goods or services that have been delivered or used. A financial (account\
        \ receivable account/account payable) aggregates the amounts of one or more\
        \ party accounts (billing or settlement) owned by a given party. It is a specialization\
        \ of entity Account."
      type: "object"
      required:
      - "name"
      properties: {}
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/Account'


    PartyOrPartyRoleRef:
      description: "Party reference. A party represents an organization or an individual."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Text describing the referred party"
        href:
          type: "string"
          description: "Reference of the referred party (such as a partner or any other\
            \ party role)."
        id:
          type: "string"
          description: "Unique identifier of the referred party"
        name:
          type: "string"
          description: "Name of the referred party (such as a partner or any other party\
            \ role)"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    IndividualStateType:
      type: "string"
      description: "Valid values for the lifecycle state of the individual"
      enum:
      - "initialized"
      - "validated"
      - "deceaded"


    IssuerRef:
      description: "Issuer reference. The issuer is the party role who will issue the\
        \ settlement note."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the issuer"
        id:
          type: "string"
          description: "Identifier of the issuer"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AccountDirectMethod:
      description: "A payment method using an internal account that could be billed\
        \ directly to perform the payment"
      type: "object"
      properties:
        details:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AccountRef'
        description:
          type: "string"
          description: "Text describing the contents of the payment method"
        href:
          type: "string"
          description: "A resource URI pointing to the resource in the server that stores\
            \ the detailed information. This is typically the resource url to retrieve\
            \ individual details for the specific payment method"
        id:
          type: "string"
          description: "Unique Identifier within the server for the payment method."
        name:
          type: "string"
          description: "Friendly name assigned to the payment method"
        preferred:
          type: "boolean"
          description: "If the method is the preferred one by the owner. Typically used\
            \ when querying for the payment methods of a specific customer or account"
        status:
          type: "string"
        statusDate:
          type: "string"
          format: "date-time"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "Date interval in which the payment method is valid"
        relatedParty:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        account:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AccountRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AgreementSpecCharacteristic:
      description: "A characteristic quality or distinctive feature of an agreement."
      type: "object"
      properties:
        configurable:
          type: "boolean"
          description: "If true, the Boolean indicates that the characteristic is configurable"
        description:
          type: "string"
          description: "A narrative that explains in detail what the characteristic\
            \ is"
        name:
          type: "string"
          description: "Name of the characteristic being specified."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the specification characteristic is valid"
        valueType:
          type: "string"
          description: "A kind of value that the characteristic can take on, such as\
            \ numeric, text and so forth"
        specCharacteristicValue:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementSpecCharacteristicValue'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AccountRef:
      description: "Account reference. A account may be a party account or a financial\
        \ account."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Detailed description of the account"
        href:
          type: "string"
          description: "Reference of the account"
        id:
          type: "string"
          description: "Unique identifier of the account"
        name:
          type: "string"
          description: "Name of the account"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    TaxExemptionCertificate:
      type: "object"
      description: "A tax exemption certificate represents a tax exemption granted to\
        \ a party (individual or organization) by a tax jurisdiction which may be a\
        \ city, state, country,... An exemption has a certificate identifier (received\
        \ from the jurisdiction that levied the tax) and a validity period. An exemption\
        \ is per tax types and determines for each type of tax what portion of the tax\
        \ is exempted (partial by percentage or complete) via the tax definition."
      properties:
        id:
          type: "string"
          description: "Unique identifier of the certificate of the tax exemption"
        taxDefinition:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TaxDefinition'
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
        attachment:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/AttachmentRefOrValue'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PartnershipType:
      description: "A partnership type contains all the information for the setup of\
        \ a partnership of a given kind. This includes the list of identified role types\
        \ for the partnership with the corresponding agreement specifications."
      type: "object"
      required:
      - "name"
      properties:
        description:
          type: "string"
          description: "An explanatory text regarding this partnership type"
        href:
          type: "string"
          description: "The reference url for this partnership type"
        id:
          type: "string"
          description: "The identifier of the partnership type"
        name:
          type: "string"
          description: "An identifying name for the partnership type."
        roleType:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RoleType'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AccountDirectDetails:
      type: "object"
      properties:
        account:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AccountRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AgreementItem:
      description: "A part of the agreement expressed in terms of a product offering\
        \ and possibly including specific terms and conditions."
      type: "object"
      properties:
        productOffering:
          description: "The list of product offerings referred by this agreement item"
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductOfferingRef'
        termOrCondition:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementTermOrCondition'
        product:
          description: "The list of products indirectly referred by this agreement item\
            \ (since an agreement item refers primarily to product offerings)"
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Product.yaml#/components/schemas/ProductRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AgreementSpecificationRelationship:
      description: "A relationship between agreement specifications. Typical relationships\
        \ are substitution and dependency."
      type: "object"
      properties:
        relationshipType:
          type: "string"
          description: "Type of relationship such as, substitution or dependency."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the relationship is valid"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    AccountRelationship:
      description: "Significant connection between accounts. For instance an aggregating\
        \ account for a list of shop branches each having its own billing account."
      type: "object"
      required:
      - "relationshipType"
      properties:
        relationshipType:
          type: "string"
          description: "Type of relationship"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "Validity period of that relationship"
        account:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AccountRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    IndividualIdentification:
      description: "Represents our registration of information used as proof of identity\
        \ by an individual (passport, national identity card, drivers license, social\
        \ security number, birth certificate)"
      type: "object"
      properties:
        identificationId:
          type: "string"
          description: "Identifier"
        issuingAuthority:
          type: "string"
          description: "Authority which has issued the identifier, such as: social security,\
            \ town hall"
        issuingDate:
          type: "string"
          format: "date-time"
          description: "Date at which the identifier was issued"
        identificationType:
          type: "string"
          description: "Identification type (passport, national identity card, drivers\
            \ license, social security number, birth certificate)"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period for which the identification information is valid."
        attachment:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/AttachmentRefOrValue'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    Organization:
      type: "object"
      description: "Organization represents a group of people identified by shared interests\
        \ or purpose. Examples include business, department and enterprise. Because\
        \ of the complex nature of many businesses, both organizations and organization\
        \ units are represented by the same data."
      properties:
        isLegalEntity:
          type: "boolean"
          description: "If value is true, the organization is a legal entity known by\
            \ a national referential."
        isHeadOffice:
          type: "boolean"
          description: "If value is true, the organization is the head office"
        organizationType:
          type: "string"
          description: "Type of Organization (company, department...)"
        tradingName:
          type: "string"
          description: "Name that the organization (unit) trades under"
        existsDuring:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
        name:
          type: "string"
          description: "Organization name (department name for example)"
        nameType:
          type: "string"
          description: "Type of the name : Co, Inc, Ltd,…"
        status:
          description: "Status of the organization"
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/OrganizationStateType'
        otherName:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/OtherNameOrganization'
        organizationIdentification:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/OrganizationIdentification'
        organizationChildRelationship:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/OrganizationChildRelationship'
        organizationParentRelationship:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/OrganizationParentRelationship'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/Party'
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'
      required:
      - "id"


    AgreementTermOrCondition:
      description: "Aspects of the agreement not formally specified elsewhere in the\
        \ agreement and that cannot be captured elsewhere in a formal notation, or automatically\
        \ monitored and require a more human level of management."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Text that explains the term or condition of the agreement."
        id:
          type: "string"
          description: "Unique number assigned for reference."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period of time during which the term or condition of the\
            \ agreement applies."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PartyAccountRef:
      description: "PartyAccount reference. A party account is an arrangement that a\
        \ party has with an enterprise that provides products to the party."
      type: "object"
      properties:
        description:
          type: "string"
          description: "Detailed description of the party account"
        href:
          type: "string"
          description: "Reference of the party account"
        id:
          type: "string"
          description: "Unique identifier of the party account"
        name:
          type: "string"
          description: "Name of the party account"
        status:
          type: "string"
          description: "The condition of the account, such as due, paid, in arrears."
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PartyBill:
      type: "object"
      properties:
        amountDue:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Money'
          description: "Amount due for this bill expressed in the given currency"
        billDate:
          type: "string"
          format: "date-time"
          description: "Bill date"
        billingPeriod:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "Billing period of the bill (used for onCycle bill only)"
        billNo:
          type: "string"
          description: "Bill reference known by the customer or the party and displayed\
            \ on the bill. Could be different from the id."
        category:
          type: "string"
          description: "Category of the bill produced : normal, duplicate, interim,\
            \ last, trial customer or credit note"
        href:
          type: "string"
          description: "Bill unique reference"
        id:
          type: "string"
          description: "Bill unique identifier"
        lastUpdate:
          type: "string"
          format: "date-time"
          description: "Date of bill last update"
        nextBillDate:
          type: "string"
          format: "date-time"
          description: "Approximate date of  the next bill production given for information\
            \ (only used for onCycle bill)"
        paymentDueDate:
          type: "string"
          format: "date-time"
          description: "Date at which the amount due should have been paid"
        remainingAmount:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Money'
          description: "Remaining amount to be paid for this bill expressed in the given\
            \ currency"
        runType:
          type: "string"
          description: "onCycle (a bill can be created as a result of a cycle run) or\
            \ offCycle (a bill can be created as a result of other events such as customer\
            \ request or account close)"
        state:
          type: "string"
          description: "State that a bill could take during its lifecycle : New, Validated,\
            \ On Hold, Sent, Partially paid or Settled"
        taxExcludedAmount:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Money'
          description: "Total tax excluded amount expressed in the given currency"
        taxIncludedAmount:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Money'
          description: "Total tax included amount expressed in the given"
        billDocument:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/FileDocument'
          description: "Document(s) associated to the bill"
        paymentItem:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/PaymentItem'
          description: "Payment items already lettered on this bill."
        billingAccount:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/BillingAccountRef'
        taxItem:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/TaxItem'
        paymentMethod:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/PaymentMethodRef'
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        financialAccount:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/FinancialAccountRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PartyRoleRef:
      description: "Party role reference. A party role represents the part played by\
        \ a party in a given context."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the product"
        id:
          type: "string"
          description: "Unique identifier of the product"
        name:
          type: "string"
          description: "The name of the referred party role."
        partyId:
          type: "string"
          description: "The identifier of the engaged party that is linked to the PartyRole\
            \ object."
        partyName:
          type: "string"
          description: "The name of the engaged party that is linked to the PartyRole\
            \ object."
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    OtherNameIndividual:
      type: "object"
      description: "Keeps track of other names, for example the old name of a woman\
        \ before marriage or an artist name."
      properties:
        title:
          type: "string"
          description: "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
        aristocraticTitle:
          type: "string"
          description: "e.g. Baron, Graf, Earl,…"
        generation:
          type: "string"
          description: "e.g. Sr, Jr…"
        givenName:
          type: "string"
          description: "First name"
        preferredGivenName:
          type: "string"
          description: "Contains the chosen name by which the person prefers to be addressed.\
            \ Note: This name may be a name other than a given name, such as a nickname"
        familyNamePrefix:
          type: "string"
          description: "Family name prefix"
        familyName:
          type: "string"
          description: "Contains the non-chosen or inherited name. Also known as last\
            \ name in the Western context"
        legalName:
          type: "string"
          description: "Legal name or birth name (name one has for official purposes)"
        middleName:
          type: "string"
          description: "Middle name or initial"
        fullName:
          type: "string"
          description: "Full name flatten (first, middle, and last names)"
        formattedName:
          type: "string"
          description: ". A fully formatted name in one string with all of its pieces\
            \ in their proper place and all of the necessary punctuation. Useful for\
            \ specific contexts (Chinese, Japanese, Korean,…)"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    RuleRef:
      description: "Rule reference. Rule is a common pattern or Template for the SLA\
        \ parameters, metrics, and thresholds"
      type: "object"
      properties:
        description:
          type: "string"
        href:
          type: "string"
          description: "The reference of the rule"
        id:
          type: "string"
          description: "The identifier of the referred rule"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    RoleSpecification:
      description: "A RoleSpecification represents a specification of a role, which\
        \ may be defined in the context of a given type of partnership (PartnershipSpecification),\
        \ such as Buyer, Seller."
      type: "object"
      required:
      - "name"
      properties:
        description:
          type: "string"
          description: "An explanatory text documenting the role specification"
        name:
          type: "string"
          description: "The name of the role specification. This name uniquely identifies\
            \ the role specification within the partnership"
        requiresBilling:
          type: "boolean"
          description: "Indicates whether billing operations will be associated to parties\
            \ playing the role"
        requiresSettlement:
          type: "boolean"
          description: "Indicates whether settlement operations will be associated to\
            \ parties playing the role"
        agreementSpecification:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementSpecificationRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PartyCreditProfile:
      type: "object"
      description: "An individual might be evaluated for its worthiness and this evaluation\
        \ might be based on a credit rating given by a credit agency."
      properties:
        creditAgencyName:
          type: "string"
          description: "Name of the credit agency giving the score"
        creditAgencyType:
          type: "string"
          description: "Type of the credit agency giving the score"
        ratingReference:
          type: "string"
          description: "Reference corresponding to the credit rating"
        ratingScore:
          type: "integer"
          format: "int32"
          description: "A measure of a party’s creditworthiness calculated on the basis\
            \ of a combination of factors such as their income and credit history"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AgreementSpecCharacteristicValue:
      description: "A number or text that can be assigned to an agreement specification\
        \ characteristic."
      type: "object"
      properties:
        default:
          type: "boolean"
          description: "Indicates if the value is the default value for a characteristic"
        unitOfMeasure:
          type: "string"
          description: "Unit of measure for the characteristic, such as minutes, gigabytes\
            \ (GB) and so on."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The period of time for which a value is applicable"
        value:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Any'
          description: "A discrete value that the characteristic can take on"
        valueFrom:
          type: "string"
          description: "The low range value that a characteristic can take on"
        valueTo:
          type: "string"
          description: "The upper range value that a characteristic can take on"
        valueType:
          type: "string"
          description: "A kind of value that the characteristic can take on, such as\
            \ numeric, text, and so forth"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    BankAccountDebitMethod:
      type: "object"
      properties:
        details:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/BankAccountDebitDetails'
        description:
          type: "string"
          description: "Text describing the contents of the payment method"
        href:
          type: "string"
          description: "A resource URI pointing to the resource in the server that stores\
            \ the detailed information. This is typically the resource url to retrieve\
            \ individual details for the specific payment method"
        id:
          type: "string"
          description: "Unique Identifier within the server for the payment method."
        name:
          type: "string"
          description: "Friendly name assigned to the payment method"
        preferred:
          type: "boolean"
          description: "If the method is the preferred one by the owner. Typically used\
            \ when querying for the payment methods of a specific customer or account"
        status:
          type: "string"
        statusDate:
          type: "string"
          format: "date-time"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "Date interval in which the payment method is valid"
        relatedParty:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        account:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AccountRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    LanguageAbility:
      type: "object"
      description: "Ability of an individual to understand or converse in a language."
      properties:
        languageCode:
          type: "string"
          description: "Language code (RFC 5646)"
        languageName:
          type: "string"
          description: "Language name"
        isFavouriteLanguage:
          type: "boolean"
          description: "A “true” value specifies whether the language is considered\
            \ by the individual as his favourite one"
        writingProficiency:
          type: "string"
          description: "Writing proficiency evaluated for this language"
        readingProficiency:
          type: "string"
          description: "Reading proficiency evaluated for this language"
        speakingProficiency:
          type: "string"
          description: "Speaking proficiency evaluated for this language"
        listeningProficiency:
          type: "string"
          description: "Listening proficiency evaluated for this language"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    RoleTypeRef:
      description: "RoleType reference."
      type: "object"
      properties:
        name:
          type: "string"
          description: "The name of the role type. It uniquely identifies the role type\
            \ within the partnership type."
        partnershipHref:
          type: "string"
          description: "Reference url of the partnership type containing the role type"
        partnershipId:
          type: "string"
          description: "The identifier of the partnership type containing the role type"
        partnershipName:
          type: "string"
          description: "The name of the partnership type defining this role type"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PartyRef:
      type: "object"
      required:
      - "@referredType"
      properties: {}
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    Partnership:
      description: "A partnership represents a formalized collaboration between various\
        \ parties, each party playing a role in the partnership. The parties playing\
        \ a role in the partnership represented by the Partner entity. The structure\
        \ of a partnership is specified by a PartnershipSpecification which contain\
        \ all the information for the setup of the partnership, including the list of\
        \ identified roles and the agreement that should apply."
      type: "object"
      required:
      - "name"
      - "specification"
      properties:
        description:
          type: "string"
          description: "An explanatory text regarding this partnership"
        href:
          type: "string"
          description: "The reference url for this partnership"
        id:
          type: "string"
          description: "The identifier of the partnership"
        name:
          type: "string"
          description: "An identifying name for the partnership."
        specification:
          description: "The specification of this partnership."
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/PartnershipSpecificationRef'
        partner:
          description: "The list of partners of the partnership, where a partner represents\
            \ a party playing a given role. Hence a partner structure includes primarily\
            \ a reference to the engaged party and a role name matching necessarily\
            \ the name of one of the role specifications defined in the specification\
            \ of the partnership."
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/Partner'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    Rule:
      type: "object"
      properties:
        consequence:
          type: "string"
        id:
          type: "string"
        metric:
          type: "string"
        operator:
          type: "string"
        referenceValue:
          type: "string"
        tolerance:
          type: "string"
        unit:
          type: "string"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    PartyRole:
      description: "The part played by a party in a given context."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Url used to reference the party role."
        id:
          type: "string"
          description: "Unique identifier for PartyRoles"
        name:
          type: "string"
          description: "A word, term, or phrase by which the PartyRole is known and\
            \ distinguished from other PartyRoles."
        status:
          type: "string"
          description: "Used to track the lifecycle status of the party role."
        statusReason:
          type: "string"
          description: "A string providing an explanation on the value of the status\
            \ lifecycle. For instance if the status is Rejected, statusReason will provide\
            \ the reason for rejection."
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "The time period that the PartyRole is valid for."
        engagedParty:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        account:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AccountRef'
        paymentMethod:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/PaymentMethodRef'
        contactMedium:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/ContactMedium'
        characteristic:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
          description: "Describes the characteristic of a party role."
        creditProfile:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/Customer.yaml#/components/schemas/CreditProfile'
        agreement:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/AgreementRef'
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'
      required:
      - "name"
      - "roleType"


    AgreementAttachment:
      description: "Represents a complementary piece of information to describe the\
        \ agreement. Could be a document, picture, a video or any kind of multimedia\
        \ content."
      type: "object"
      properties:
        href:
          type: "string"
          description: "Reference of the attachment"
        id:
          type: "string"
          description: "Unique identifier of the attachment"
        attachmentType:
          type: "string"
          description: "The type of attachment, such as video, picture"
        url:
          type: "string"
          format: "uri"
          description: "Uniform Resource Locator, is a web page address (a subset of\
            \ URI)"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AccountTaxExemption:
      description: "Proof of freedom from taxes imposed by a taxing jurisdiction"
      type: "object"
      required:
      - "issuingJurisdiction"
      - "validFor"
      properties:
        certificateNumber:
          type: "string"
          description: "Identifier of a document that shows proof of exemption from\
            \ taxes for the taxing jurisdiction"
        issuingJurisdiction:
          type: "string"
          description: "Name of the taxing jurisdiction for which taxes are exempt"
        reason:
          type: "string"
          description: "Reason of the tax exemption"
        validFor:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/TimePeriod'
          description: "Period for which the exemption is valid"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    RelatedPartyRefOrValue:
      description: "Entity reference. A related party defines party or party role linked\
        \ to a specific entity."
      type: "object"
      properties:
        role:
          type: "string"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/Party'
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/PartyRef'


    RelatedParty:
      description: "Related Entity reference. A related party defines party or party\
        \ role linked to a specific entity."
      type: "object"
      required:
      - "id"
      - "@referredType"
      properties:
        role:
          type: "string"
          description: "Role played by the related party"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    SLAViolationRef:
      type: "object"
      properties:
        href:
          type: "string"
        id:
          type: "string"
        '@referredType':
          type: "string"
          description: "The actual type of the target instance when needed for disambiguation."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    OrganizationChildRelationship:
      type: "object"
      description: "Child references of an organization in a structure of organizations."
      properties:
        relationshipType:
          type: "string"
          description: "Type of the relationship. Could be juridical, hierarchical,\
            \ geographical, functional for example."
        organization:
          $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/OrganizationRef'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AgreementItemRef:
      description: "Agreement reference. An agreement represents a contract or arrangement,\
        \ either written or verbal and sometimes enforceable by law, such as a service\
        \ level agreement or a customer price agreement. An agreement involves a number\
        \ of other business entities, such as products, services, and resources and/or\
        \ their specifications."
      type: "object"
      properties:
        agreementItemId:
          type: "string"
          description: "Identifier of the agreement"
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/EntityRef'


    Party:
      type: "object"
      description: "Generic Party structure used to define commonalities between sub\
        \ concepts of Individual and Organization."
      properties:
        id:
          type: "string"
          description: "Unique identifier of the organization"
        href:
          type: "string"
          description: "Hyperlink to access the organization"
        externalReference:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/ExternalReference'
        partyCharacteristic:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Characteristic'
        taxExemptionCertificate:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/TaxExemptionCertificate'
        creditRating:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/PartyCreditProfile'
        relatedParty:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/EngagedParty.yaml#/components/schemas/RelatedParty'
        contactMedium:
          type: "array"
          items:
            $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/ContactMedium'
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


    AgreementAuthorization:
      description: "A business participant that is responsible for approving the agreement."
      type: "object"
      properties:
        date:
          type: "string"
          format: "date-time"
          description: "The date associated with the authorization state."
        signatureRepresentation:
          type: "string"
          description: "Indication that represents whether the signature is a physical\
            \ paper signature or a digital signature."
        state:
          type: "string"
          description: "Current status of the authorization, for example in process,\
            \ approved, rejected."
      allOf:
      - $ref: '/INTERFACES/API-SPECIFICATION/YAML/TMFORUM/DATA_MODEL/Common.yaml#/components/schemas/Entity'


