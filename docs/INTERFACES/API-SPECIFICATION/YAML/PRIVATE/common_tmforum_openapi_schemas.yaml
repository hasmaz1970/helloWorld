#############################################################################
## 1. OPENAPI
#############################################################################
openapi: 3.0.2

#############################################################################
## 2. INFO
#############################################################################
info:
  version: 1.0.0
  title: Common Private TMFORUM OpenAPI Utilized Schema (Data Tyype) Definitions
  contact:
    name: MonE Product Development

  license:
    name: GNU AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  description: |
    <!-- Note that this description is a MARKDOWN Block -->

    **This Open API specification does NOT contain any valid PATHS/OPERATIONS!!!. It ONLY contains COMMON SCHEMA (TYPE) DEFINITIONS referred by other API specifications.**

    Thus, in this context COMMON SCHEMA (TYPE) DEFINITIONS mean shared entity models or baseline objects that can be reused with or without extension.
#############################################################################
## 3. SERVERS
#############################################################################
servers:
  - url: https://{environment}.monetizehub.io:{port}/private/TMFORUM_OPENAPI_SCHEMAS
    description: The production API server
    variables:
      environment:
        enum:
          - 'dev'
          - 'test'
          - 'staging'
          - ''
        default: 'dev'
      port:
        enum:
          - '443'
          - '8443'
        default: '443'
      version:
        default: 'v1'

#############################################################################
## 4. PATHS
#############################################################################
paths:
  /readMe:
    get:
      summary: This is a placeholder nouse operation. (to bypass Swagger UI limitation of a specification with ONLY data models without operation)
      operationId: readMe
      responses:
        default:
          description: default response
          content:
            "*/*":
              schema:
                type: string

#############################################################################
## 5. COMPONENTS
#############################################################################
components:
  #############################################################################
  ## 5.x. SECURITY SCHEMES
  #############################################################################
  securitySchemes:
    JWT_Bearer:
      type: http
      scheme: bearer 
      bearerFormat: JWT
    IAM_OAuth:
      type: oauth2
      description: |
        **OAuth Grant Type: Password Credentials**
      flows:
        password:
          tokenUrl: https://iam.monetizehub.io/oauth/v1/token
          scopes:
            write:resources: modify resources
            read:resources: read resources

  #############################################################################
  ## 5.x. SCHEMA DEFINITIONS
  #############################################################################
  schemas:
    #############################################################################
    #############################################################################
    ## 5.1. TMFORUM Common
    #############################################################################
    #############################################################################
    Any:
      type: string

    Entity:
      type: object
      description: |
        Root schema for use in MonE Open-APIs.<br>
        Root of all Entity or Value Objects.<br>
      discriminator:
        propertyName: "@type"
      properties:
        "@baseType":
          description: "When sub-classing, this defines the super-class"
          type: string
        "@schemaLocation":
          description: "A URI to a JSON-Schema file that defines additional attributes and relationships"
          type: string
          format: uri
        "@type":
          description: "When sub-classing, this defines the sub-class entity name"
          type: string
        ## MonE: specific added to have name as an optional common attribute in all entities
        name:
          description: Name of the related entity when needed.
          type: string
## MonE: Added
        externalId:
          description: "Externally provided, Unique identifier of a related entity." 
          type: string

## MonE: Comment out
##      dependencies:
##        '@schemaLocation':
##        - "@baseType"
##        - "@type"

    EntityRef:
      description: |
        Root schema for use in MonE Open-APIs.<br>
        Root of all Entity Reference Objects.

      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          properties:
            id:
              description: "Unique identifier of a related entity."
              type: string
            href:
              description: "Reference of the related entity."
              type: string
            '@referredType':
              description: "The actual type of the target instance when needed for disambiguation."
              type: string

    RelatedEntityRef:
      description: Root schema for use in MonE Open-APIs.<br>
        Root of all Entity Reference Objects.
        (TMFORUM EntityRef)

      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          properties:
            id:
              description: "Unique identifier of a related entity."
              type: string
            href:
              description: "Reference of the related entity."
              type: string
            '@referredType':
              description: "The actual type of the target instance when needed for disambiguation."
              type: string


    RelatedEntity:
      description: Root schema for use in MonE Open-APIs.<br>
        Root of all Related Entity Objects that shows the relation with a mandatory **role**
        (TMFORUM RelatedEntity)
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          properties:
            id:
              description: "Unique identifier of a related entity."
              type: string
            href:
              description: "Reference of the related entity."
              type: string
            '@referredType':
              description: "The actual type of the target instance when needed for disambiguation."
              type: string
            role:
              description: The role of an entity.
              type: string


    Characteristic:
      description: |
        Describes a given characteristic of an object or entity through a name/value pair.
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          properties:
            name:
              description: "Name of the characteristic"
              type: string
            ## MonE: Instead of a string, a well defined enumaration (list of named constants of supported MonE priminitve types)
            valueType:
              $ref: "#/components/schemas/ValueType"
            value:
              $ref: "#/components/schemas/Any"
          required:
            - name
            - value

    TMFEvent:
      description: |
        Event with common attributes.<br>
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          properties:
            correlationId:
              description: "The correlation id for this event."
              type: string
            description:
              description: "An explanatory of the event."
              type: string
            domain:
              description: "The domain of the event."
              type: string
            eventId:
              description: "The identifier of the notification."
              type: string
            eventTime:
              description: "Time of the event occurrence."
              type: string
              format: date-time
            eventType:
              description: "The type of the notification."
              type: string
              enum:
                - charging
                - billing
                - publicapi
                - notification
                - other
            priority:
              type: string
              description: "A priority."
            timeOcurred:
              description: "The time the event occured."
              type: string
              format: date-time
            title:
              description: "The title of the event."
              type: string
            payload:
              description: "The event payload Object"
              type: object
            analyticCharacteristic:
              type: array
              items:
                $ref: "#/components/schemas/Characteristic"
            reportingSystem:
              description: "Reporting System described by EntityRef"
              $ref: "#/components/schemas/EntityRef"
            source:
              description: "Source Entity of the Event"
              $ref: "#/components/schemas/EntityRef"

    Topic:
      description: |
        Topic is the event channel resource provided by the Event Streaming API.<br>
        MonE and/or external components publish, subscribe and read events via Topic.
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            contentQuery:
              description: "is the filter that will be applied on the content of the Event."
              type: string
            headerQuery:
              description: "is the filter that will be applied on the Event header properties."
              type: string

    Hub:
      description: |
        A Hub is used to subscribe to an event notification.<br>
        Sets the communication endpoint LISTENER address the service instance must use to deliver notification information.
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed



    FileDocument:
      description: |
        A document accompanying an entity.
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - name          
            - fileType
          properties:
            downloadUrl:
              description: "URL where the document could be downloaded"
              type: string
              format: uri
            fileType:
              description: "Document file format of the file : csv, pdf, xls, txt... for example"
              type: string
              enum:
                - json
                - xml
                - html
                - pdf
            name:
              description: "Document name"
              type: string
            size:
              description: "Document file size  (by default in bytes)"
              type: integer
            sizeUnit:
              description: "Size unit (in bytes by default)"
              type: string
              enum:
                - byte
                - Kb
                - Mb
                - Gb


    TimePeriod:
      description: |
        A period of time that defines the application start/end dates for the associated Entity.
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - startDateTime
          properties:
            startDateTime:
              description: |
                Start of the time period, using IETC-RFC-3339 format. <br>
                If you define a start, you must also define an end
              type: string
              format: date-time
              example: "2018-09-21T09:13:16-07:00"
            endDateTime:
              description: |
                End of the time period, using IETC-RFC-3339 format
              type: string
              format: date-time
              example: "2018-09-21T09:13:16-07:00"

    Money:
      description: |
        A base / value business entity used to represent money.
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - unit
            - value
          properties:
            unit:
              description: "Currency (ISO4217 norm uses 3 letters to define the currency)"
              type: string
              default: "USD"
              maxLength: 4
            value:
              description: "A positive floating point number"
              type: number
              format: double

    Quantity:
      description: Quantity that specifies an amount with a well defined unit
      type: object
      properties:
        amount:
          type: "number"
          format: "double"
          description: "Numeric value in a given unit"
        units:
          $ref: "#/components/schemas/UnitOfMeasure"
        ## MonE: Added
        unitType:
          $ref: "#/components/schemas/UnitType"
        ## MonE: Added
        roundedAmount:
          type: "number"
        ## MonE: Modified to doublet
          format: "double"
          description: "Numeric value in a given unit"

    ContactMedium:
      description: |
        Indicates the contact medium that could be used to contact the party.
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - mediumType
            - characteristic
          properties:
            mediumType:
              $ref: "#/components/schemas/ContactMediumType"
            preferred:
              type: boolean
            characteristic:
              $ref: "#/components/schemas/MediumCharacteristic"
            validFor:
              $ref: "#/components/schemas/TimePeriod"

    MediumCharacteristic:
      description: |
        Describes the contact medium characteristics that could be used to contact a party (an individual or an organization)
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          properties:
            city:
              type: string
              description: The city
            contactType:
              description: "The type of contact, for example: phone number such as mobile, fixed home, fixed office. postal address such as shipping instalation…"
              $ref: "#/components/schemas/MediumCharacteristicContactType"
            country:
              description: "The country"
              type: string
            emailAddress:
              description: "Full email address in standard format"
              $ref: "#/components/schemas/Email"        
            faxNumber:
              description: "The fax number of the contact"
              $ref: "#/components/schemas/PhoneNumber"            
            phoneNumber:
              description: "The primary phone number of the contact"
              $ref: "#/components/schemas/PhoneNumber"
            postCode:
              description: "Postcode"
              type: string
            socialNetworkId:
              description: "Identifier as a member of a social network"
              type: string
            stateOrProvince:
              description: "State or province"
              type: string
            street1:
              description: "Describes the street"
              type: string
            street2:
              description: "Complementary street description"
              type: string

    Channel:
      description: |
        The channel to which the resource reference to. e.g. channel for
        selling product offerings, channel for opening a trouble ticket etc.
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    ChannelRef:
      description: |
        The channel to which the resource reference to. e.g. channel for
        selling product offerings, channel for opening a trouble ticket etc.
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    RelatedChannel:
      description: |
        Related channel to another entity. May be online web, mobile app, social etc.
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            role:
              description: "Role playing by the channel."
              type: string

    Note:
      description: |
        Extra information about a given entity
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          properties:
            id:
              description: |
                Identifier of the note within its containing entity (may or
                may not be globally unique, depending on provider implementation)
              type: string
            author:
              description: "Author of the note"
              type: string
            date:
              description: "Date of the note"
              type: string
              format: date-time
            text:
              description: Text of the note
              type: string

    RelatedPlaceRefOrValue:
      description: |
        Related Entity reference. A related place defines a place described
        by reference or by value linked to a specific entity. The polymorphic attributes
        @type, @schemaLocation & @referredType are related to the place entity and
        not the RelatedPlaceRefOrValue class itself
      allOf:
        - $ref: "#/components/schemas/Place"
        - type: object
          properties:
            role:
              type: string

    PlaceRef:
      description: |
        Reference. Place. name describes a user friendly name 
        where the products are sold or delivered.
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    Place:
      description: |
        Reference. Place. name describes a user friendly name 
        where the products are sold or delivered.
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    #############################################################################
    ## !!!!!!!! END TMFORUM Common
    #############################################################################

    #############################################################################
    #############################################################################
    ## 5.2. TMFORUM EngagedParty
    #############################################################################
    #############################################################################

    AccountBalance:
      description: |
        Balances linked to the account
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            balanceType:
              description: "Type of the balance : deposit balance, disputed balance, loyalty balance, receivable balance..."
              $ref: "#/components/schemas/AccountBalanceType"
            amount:
              $ref: "#/components/schemas/Money"
              description: Balance amount
            validFor:
              $ref: "#/components/schemas/TimePeriod"
              description: Balance validity period
          required:
            - amount
            - balanceType
            - validFor

    AccountRelationship:
      description: |
        Significant connection between accounts. 
        For instance an aggregating account for a list of shop branches each having its own billing account.
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - "relationshipType"
            - "validFor"
          properties:
            relationshipType:
              description: "Type of relationship"
              type: string
            validFor:
              $ref: "#/components/schemas/TimePeriod"
            account:
              $ref: "#/components/schemas/AccountRef"

    AccountTaxExemption:
      description: |
        Proof of freedom from taxes imposed by a taxing jurisdiction
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          properties:
            certificateNumber:
              type: string
              description: "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
            issuingJurisdiction:
              type: string
              description: "Name of the taxing jurisdiction for which taxes are exempt"
            reason:
              type: string
              description: "Reason of the tax exemption"
            validFor:
              $ref: "#/components/schemas/TimePeriod"
              description: "Period for which the exemption is valid"
          required:
            - issuingJurisdiction
            - validFor

    RelatedParty:
      description: |
        Related Entity reference. A related party defines party or party role linked to a specific entity.
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          properties:    
            id:
              description: "Unique identifier of a related entity."
              type: string
            href:
              description: "Reference of the related entity."
              type: string
            '@referredType':
              description: "The actual type of the target instance when needed for disambiguation."
              type: string
            role:
              description: The role of an entity.
              type: string

    RelatedPartyRef:
      description: |
        Related Entity reference. A related party defines party or party role linked to a specific entity.
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          properties:    
            id:
              description: "Unique identifier of a related entity."
              type: string
            href:
              description: "Reference of the related entity."
              type: string
            '@referredType':
              description: "The actual type of the target instance when needed for disambiguation."
              type: string
            role:
              description: The role of an entity.
              type: string

    Contact:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          required:
            - contactType
            - contactMedium
          properties:
            contactName:
              type: string
            contactType:
              $ref: '#/components/schemas/AccountContactType'
            partyRoleType:
              type: string
            relatedParty:
              $ref: '#/components/schemas/RelatedParty'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'

    Account:
      description: |
        Generic Account structure used to define commonalities between sub
        concepts of PartyAccount and Financial Account."
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          required:
            - "name"
            - contact
          properties:
            lastModified:
              description: "Date of last modification of the account"
              type: string
              format: date-time
            state:
              $ref: '#/components/schemas/AccountStateType'
            accountType:
              $ref: '#/components/schemas/AccountType'
            ratingType:
              $ref: '#/components/schemas/AccountRatingType'
            description:
              description: "Detailed description of the party account"
              type: string
            creditLimit:
              description: "The maximum amount of money that may be charged on an account"
              $ref: "#/components/schemas/Money"
            relatedParty:
              type: array
              items:
                $ref: "#/components/schemas/RelatedParty"
            taxExemption:
              type: array
              items:
                $ref: "#/components/schemas/AccountTaxExemption"
            contact:
              type: array
              items:
                $ref: "#/components/schemas/Contact"
            accountBalance:
              type: array
              items:
                $ref: '#/components/schemas/AccountBalance'
            accountRelationship:
              type: array
              items:
                $ref: '#/components/schemas/AccountRelationship'
            lastBillDate:
              type: string
              format: date-time



    FinancialAccount:
      description: |
        An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. 
        A financial (account receivable account/account payable) aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party. 
        It is a specialization of entity Account.
      allOf:
        - $ref: "#/components/schemas/Account"

    PartyAccount:
      description: |
        B2B Account used for billing or for settlement purposes concerning a given party (an organization or an individual). 
        It is a specialization of entity Account.
      allOf:
        - $ref: "#/components/schemas/Account"
        - type: object
          required:
            - name
            - relatedParty
            - billStructure
          properties:
            paymentStatus:
              $ref: "#/components/schemas/AccountPaymentStatus"
            billStructure:
              $ref: "#/components/schemas/BillStructure"
            paymentPlan:
              type: array
              items:
                $ref: "#/components/schemas/PaymentPlan"
            financialAccount:
              $ref: "#/components/schemas/FinancialAccountRef"
            defaultPaymentMethod:
              $ref: "#/components/schemas/PaymentMethodRef"



    ##MonE: Added [Resource]Model Object

    BillingAccount:
      description: |
        B2C Account used for billing or for settlement purposes concerning a given party (an organization or an individual). 
        It is a specialization of entity Account.
      allOf:
        - $ref: "#/components/schemas/Account"
        - type: object
          required:
            - name
            - relatedParty
          properties:
            paymentStatus:
              $ref: "#/components/schemas/AccountPaymentStatus"
            billStructure:
              $ref: "#/components/schemas/BillStructure"
            paymentPlan:
              type: array
              items:
                $ref: "#/components/schemas/PaymentPlan"
            financialAccount:
              $ref: "#/components/schemas/FinancialAccountRef"
            defaultPaymentMethod:
              $ref: "#/components/schemas/PaymentMethodRef"

    SettlementAccount:
      description: |
        B2C Account used for billing or for settlement purposes concerning a given party (an organization or an individual). 
        It is a specialization of entity Account.
      allOf:
        - $ref: "#/components/schemas/Account"
        - type: object
          required:
            - name
            - relatedParty
            - billStructure
          properties:
            paymentStatus:
              $ref: "#/components/schemas/AccountPaymentStatus"
            billStructure:
              $ref: "#/components/schemas/BillStructure"
            paymentPlan:
              type: array
              items:
                $ref: "#/components/schemas/PaymentPlan"
            financialAccount:
              $ref: "#/components/schemas/FinancialAccountRef"
            defaultPaymentMethod:
              $ref: "#/components/schemas/PaymentMethodRef"

    AccountRef:
      description: |
        Reference. Account.
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    FinancialAccountRef:
      description: |
        Reference. FinancialAccount.
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    PartyAccountRef:
      description: |
        Reference. PartyAccount.
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    BillingAccountRef:
      description: |
        Reference. Account.
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    AgreementRef:
      description: |
        Agreement reference. An agreement represents a contract or arrangement,
        either written or verbal and sometimes enforceable by law, such as a service
        level agreement or a customer price agreement. An agreement involves a number
        of other business entities, such as products, services, and resources and/or
        their specifications."
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    AgreementItemRef:
      description: |
        Agreement reference. An agreement represents a contract or arrangement,
        either written or verbal and sometimes enforceable by law, such as a service
        level agreement or a customer price agreement. An agreement involves a number
        of other business entities, such as products, services, and resources and/or
        their specifications."
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            agreementItemId:
              description: "Identifier of the agreement"
              type: string

    #############################################################################
    ## !!!!!!!! END TMFORUM EngagedParty
    #############################################################################

    #############################################################################
    #############################################################################
    ## 5.3. TMFORUM Customer
    #############################################################################
    #############################################################################

    Price:
      description: |
        Provides all amounts (tax included, duty free, tax rate), used currency and percentage to apply for Price Alteration.
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          properties:
            dutyFreeAmount:
              description: "All taxes excluded amount (expressed in the given currency)"
              $ref: "#/components/schemas/Money"
            taxIncludedAmount:
              description: "All taxes included amount (expressed in the given currency)"
              $ref: "#/components/schemas/Money"
##MonE: Added taxCategory              
            taxExcludedAmount:
              description: "All taxes excluded amount (expressed in the given currency)"
              $ref: "#/components/schemas/Money"
            taxCategory:
              description: "Tax category"
              type: string
            taxRate:
              description: "Tax rate"
              type: number
              format: float
            percentage:
              description: "Percentage to apply for ProdOfferPriceAlteration"
              type: number
              format: float
            appliedTax:
              type: array
              items:
                $ref: '#/components/schemas/AppliedBillingTaxRate'
##MonE: Added external Tariff Ref      
            externalTariffRef:
              description: "External Tariff Reference for complex usage charge calculations"
              $ref: "#/components/schemas/EntityRef"                

    ##MonE: Added [Resource]Value Object
    BillFormat:
      description: |
        A detailed description of the way in which a bill is presented.
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          required:
            - name
          properties:
            description:
              type: string
              description: An explanatory text for this bill format

    BillFormatRef:
      description: Reference. BillFormat.
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    ## MonE: Obsoleted: BillFormatRefOrValue ... Wrong design. No need for a redundant isRef

    BillPresentationMedia:
      description: |
        A mean of communicating a bill, supported by the associated bill format.
        For example, post mail, email, web page.
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          required:
            - name
          properties:
            description:
              type: string
              description: An explanatory text for this bill format

    BillPresentationMediaRef:
      description: |
        Reference. BillPresentationMedia.
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    BillStructure:
      description: |
        The structure of the bill for party accounts (billing or settlement).
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - cycleSpecification
          properties:
            cycleSpecification:
              $ref: "#/components/schemas/BillingCycleSpecificationRefOrValue"
            format:
              $ref: "#/components/schemas/BillFormat"
            presentationMedia:
              type: array
              items:
                $ref: "#/components/schemas/BillPresentationMedia"
##MonE  
            preferredBillingCurrency:
              description: "Currency (ISO4217 norm uses 3 letters to define the currency)"
              type: string
              default: "USD"
              maxLength: 4



    BillingCycleSpecification:
      description: |
        A detailed description of when to initiate a billing cycle and the various sub steps of a billing cycle.
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          required:
            - id
          properties:
            description:
              type: string
              description: An explanation regarding this billing cycle specification
            billingDateShift:
              type: integer
              description: An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period.
            billingPeriod:
              $ref: "#/components/schemas/BillingPeriodType"
            chargeDateOffset:
              type: integer
              description: An offset of a date through which charges previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod.
            creditDateOffset:
              type: integer
              description: An offset of a date through which credits previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod.
##MonE: Changed type to integer
            frequency:
              type: integer
              description: Frequency as per billingPeriod.
              default: 1

            mailingDateOffset:
              type: integer
              description: An offset of a customer bill mailing date. The offset is expressed as number of days with regard to the start of the BillingPeriod.
            paymentDueDateOffset:
              type: integer
              description: An offset of a payment due date. The offset is expressed as number of days with regard to the start of the BillingPeriod.
            validFor:
              $ref: "#/components/schemas/TimePeriod"
              description: The period for which the billing specification cycle is valid

    BillingCycleSpecificationRefOrValue:
      description: |
        Reference. BillingCycleSpecification.
      allOf:
        - $ref: "#/components/schemas/BillingCycleSpecification"
        - type: object
          required:
            - name
            - isRef
          properties:
            isRef: 
              type: boolean

    BillingCycleSpecificationRef:
      description: |
        Reference. BillingCycleSpecification.
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    #############################################################################
    #############################################################################
    #############################################################################
    ##
    ## ######     #    #          #    #     #  #####  ####### 
    ## #     #   # #   #         # #   ##    # #     # #       
    ## #     #  #   #  #        #   #  # #   # #       #       
    ## ######  #     # #       #     # #  #  # #       #####   
    ## #     # ####### #       ####### #   # # #       #       
    ## #     # #     # #       #     # #    ## #     # #       
    ## ######  #     # ####### #     # #     #  #####  ####### 
    ##
    #############################################################################
    #############################################################################
    #############################################################################

    Bucket:
      description: |
        A bucket (called UsageVolumProduct in the SID Model) represents
        and tracks a quantity of usage (remaining or consumed). It could be either
        a quantity or an amount in a currency. It can represent an account balance bucket, fixed number of
        SMS,MMS, call minutes, quantity of data and so on
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            status:
              $ref: "#/components/schemas/BucketStatusType"
              description: "status for the bucket"
            requestedDate:
              type: string
              format: date-time
              description: "Date when the deduction request was received in the server"            
            confirmationDate:
              type: string
              format: date-time
              description: "Date when the deduction was confirmed in the server"
            description:
              type: string
              description: "Text describing the contents of the balance managed by the bucket"
            isShared:
              type: boolean
              description: "True if the bucket is shared between several devices or users"
            remainingValueName:
              type: string
              description: "For display purposes. Remaining amount in a formatted string for the bucket given, such as 1.9Gb"
            logicalResource:
              type: array
              items:
                $ref: "#/components/schemas/LogicalResourceRef"
            partyAccount:
              $ref: "#/components/schemas/PartyAccountRef"
              description: "A reference to the account that owns the bucket"
            product:
              type: array
              items:
                $ref: "#/components/schemas/ProductRef"
            relatedParty:
              type: array
              items:
                $ref: "#/components/schemas/RelatedParty"
              description: |
                Used to provide information about any other entity with relation
                 to the balance, for instance to define customer hierarchy for the balance
                 (e.g.: customerId, userId, )
            remainingValue:
              $ref: "#/components/schemas/Quantity"
              description: "Indicate the amount on the bucket"
            reservedValue:
              $ref: "#/components/schemas/Quantity"
              description: "Indicate the amount reserved on the bucket"
            usageType:
              $ref: "#/components/schemas/UsageType"
            validFor:
              $ref: "#/components/schemas/TimePeriod"
              description: "The period for which the balance in the bucket is valid"


    BucketRef:
      description: |
        Reference. Bucket
      allOf:
        - $ref: "#/components/schemas/EntityRef"


##MonE AccountBalanceBucket
    AccountBalanceBucket:
      description: |
        Represents a detailed description of aa Bucket to hold Account Balances
      allOf:
        - $ref: "#/components/schemas/Bucket"
        - type: object
          required:
            - unitType
            - units
            - partyAccount
            - balanceType
          properties:
            balanceType:
              description: "Type of the Account balance : credit, spendingWallet, deposit ..."
              $ref: "#/components/schemas/AccountBalanceType"
            unitType:
              $ref: "#/components/schemas/UnitType"
            units:
              $ref: "#/components/schemas/UnitOfMeasure"


##MonE AccountBalanceBucket
    OnlineChargingBucket:
      description: |
        Represents a detailed description of aa Bucket to hold Account Balances
      allOf:
        - $ref: "#/components/schemas/Bucket"
        - type: object
          required:
            - unitType
            - units
            - partyAccount
            - balanceType
          properties:
            balanceType:
              description: "Type of the online charging balance : mainWallet, freeUnits, complexDiscounts, costControl ..."
              $ref: "#/components/schemas/OnlineChargingBalanceType"
            unitType:
              $ref: "#/components/schemas/UnitType"
            units:
              $ref: "#/components/schemas/UnitOfMeasure"



    BucketStatusType:
      type: string
      description: "Valid values for the Balance Status Type"
      enum:
      - active
      - suspended
      - expired

    UsageType:
      type: string
      description: "Business perspective Logical Usage Type: monetary, voice, data, sms, other, etc."


    LogicalResourceRef:
      description: |
        Reference. Logical Resource.
      allOf:
        - $ref: "#/components/schemas/EntityRef"

##MonE Abstract Type
    AbstractBalanceRequest:
      description: |
        Represents a detailed description of an Abstract balance operation requested
        over a bucket.
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          required: 
            - bucket
            - amount
          properties:
            requestedDate:
              type: string
              format: date-time
              description: "Date when the deduction request was received in the server"
            amount:
              $ref: "#/components/schemas/Quantity"
              description: "Indicate the amount on the bucket"
            bucket:
              $ref: "#/components/schemas/BucketRef"
              description: |
                A reference to the bucket impacted by the request or the value itself."
##MonE
            oldRemainingValue:
              $ref: "#/components/schemas/Quantity"
              description: "Indicate the amount on the bucket"
            reason:
              type: string
              description: "Text describing the reason for the action/task"
            confirmationDate:
              type: string
              format: date-time
              description: "Date when the topup was confirmed in the server"
            status:
              $ref: "#/components/schemas/ActionStatusType"
              description: "Status of the operation"
            description:
              type: string
              description: "Description of the recharge operation"
            channel:
              $ref: "#/components/schemas/ChannelRef"
              description: |
                Indicator for the channel used to request the transfer operation. Structure including at least attribute name
            requestor:
              $ref: "#/components/schemas/RelatedParty"
              description: |
                Identifier for the user/customer/entity that performs the top-up
                action. This can be used to indicate the identifier of an agent that performs
                the operation on behalf of a user via a customer service channel. Structure
                including at least attributes role and name.
            logicalResource:
              type: array
              items:
                $ref: "#/components/schemas/LogicalResourceRef"
            partyAccount:
              $ref: "#/components/schemas/PartyAccountRef"
              description: |
                A reference to the account that owns the bucket impacted by
                the balance related operation"
            relatedParty:
              type: array
              items:
                $ref: "#/components/schemas/RelatedParty"
              description: |
                Used to provide information about any other entity with relation to the operation
            product:
              type: array
              items:
                $ref: "#/components/schemas/ProductRef"                
            validFor:
              $ref: "#/components/schemas/TimePeriod"
              description: "The period for which the balance in the bucket is valid"      
### MonE commented out
### balance already has usageType and units
##            usageType:
##              $ref: "#/components/schemas/UsageType"

    TopupBalance:
      description: |
        Represents a detailed description of a recharge balance operation requested
        over a bucket.
      allOf:
        - $ref: "#/components/schemas/AbstractBalanceRequest"
        - type: object
          required: 
            - bucket
            - amount
          properties:
            isAutoTopup:
              type: boolean
              description: |
                Indicates if the topup requested is an autotopup (to be processed periodically)
            numberOfPeriods:
              type: integer
              description: For autotopup indicates the number of occurrences of the period
                the recharge operation must be executed. If not included then no limit
                is set to stop the executionof the topup every period
            recurringPeriod:
              $ref: "#/components/schemas/RecurringPeriodType"
              description: |
                For autotopup indicates the periodicity for the recharge operation (monthly, weekly, )
            voucher:
              type: string
              description: |
                Identifier for a voucher when the topup can be performed by this means
            balanceTopup:
              $ref: "#/components/schemas/RelatedTopupBalance"
            paymentMethod:
              $ref: "#/components/schemas/PaymentMethodRef"
              description: |
                Payment method used for the recharge operation (e.g.: cash,
                credit card). Structure including at least attribute name. Notice that
                the use of a voucher can be managed as a specific methodtype, where the
                voucher code can be passed as value.
##MonE added                
            payment:
              type: array
              items:
                $ref: "#/components/schemas/PaymentRef"

    ActionStatusType:
      type: "string"
      description: "Valid values for the Action Status Type"
      enum:
      - created
      - failed
      - cancelled
      - completed

    RelatedTopupBalance:
      description: |
        Reference. Related Topup Balance.
      allOf:
        - $ref: "#/components/schemas/EntityRef"



    AdjustBalance:
      description: |
        Represents a detailed description of an adjust balance operation requested
        over a bucket.
      allOf:
        - $ref: "#/components/schemas/AbstractBalanceRequest"
        - type: object
          required: 
            - bucket
            - amount
          properties:
            adjustType:
              $ref: "#/components/schemas/AdjustType"
            relatedRatedProductTransaction:
              type: array
              items:
                $ref: "#/components/schemas/RatedProductTransactionType"

    AdjustType:
      type: string
      description: "Valid values for the Balance Adjust types"
      enum:
      - onetime
      - recurring
      - usage
      - correction
      - other



    TransferBalance:
      description: |
        Represents a detailed description of a transfer balance operation requested
        over a bucket.
      allOf:
        - $ref: "#/components/schemas/AbstractBalanceRequest"
        - type: object
          required: 
            - bucket
            - amount
          properties:
            costOwner:
              $ref: "#/components/schemas/CostOwnerType"
            transferCost:
              $ref: "#/components/schemas/Money"
            receiver:
              $ref: "#/components/schemas/RelatedParty"
              description: |
                Used to provide reference to receiver party
            receiverBucket:
              $ref: "#/components/schemas/BucketRef"
              description: |
                A reference to the receiver bucket impacted by the request."
### MonE commented out
### balance already has usageType and units
##            receiverBucketUsageType:
##              $ref: "#/components/schemas/UsageType"
            receiverLogicalResource:
              type: array
              items:
                $ref: "#/components/schemas/LogicalResourceRef"
            receiverProduct:
              type: array
              items:
                $ref: "#/components/schemas/ProductRef"   

    CostOwnerType:
      type: string
      description: "Valid values for this type"
      enum:
      - originator
      - receiver

    ReserveBalance:
      description: |
        Represents a detailed description of a reserve balance operation requested
        over a bucket.
      allOf:
        - $ref: "#/components/schemas/AbstractBalanceRequest"


    BalanceActionHistory:
      description: |
        Represents a detailed description of balance action history.
      allOf:
        - $ref: "#/components/schemas/AbstractBalanceRequest"
        - type: object
          required: 
            - bucket
            - amount
            - "@referredType"
          properties:
            isAutoTopup:
              type: boolean
              description: |
                Indicates if the topup requested is an autotopup (to be processed periodically)
            numberOfPeriods:
              type: integer
              description: For autotopup indicates the number of occurrences of the period
                the recharge operation must be executed. If not included then no limit
                is set to stop the executionof the topup every period
            recurringPeriod:
              $ref: "#/components/schemas/RecurringPeriodType"
              description: |
                For autotopup indicates the periodicity for the recharge operation (monthly, weekly, )
            voucher:
              type: string
              description: |
                Identifier for a voucher when the topup can be performed by this means
            balanceTopup:
              $ref: "#/components/schemas/RelatedTopupBalance"
            paymentMethod:
              $ref: "#/components/schemas/PaymentMethodRef"
              description: |
                Payment method used for the recharge operation (e.g.: cash,
                credit card). Structure including at least attribute name. Notice that
                the use of a voucher can be managed as a specific methodtype, where the
                voucher code can be passed as value.            
            adjustType:
              $ref: "#/components/schemas/AdjustType"
            relatedRatedProductTransaction:
              type: array
              items:
                $ref: "#/components/schemas/RatedProductTransactionType"
            costOwner:
              $ref: "#/components/schemas/CostOwnerType"
            transferCost:
              $ref: "#/components/schemas/Money"
            receiver:
              $ref: "#/components/schemas/RelatedParty"
              description: |
                Used to provide reference to receiver party
            receiverBucket:
              $ref: "#/components/schemas/BucketRef"
              description: |
                A reference to the receiver bucket impacted by the request."
### MonE commented out
### balance already has usageType and units
##            receiverBucketUsageType:
##              $ref: "#/components/schemas/UsageType"
            receiverLogicalResource:
              type: array
              items:
                $ref: "#/components/schemas/LogicalResourceRef"
            receiverProduct:
              type: array
              items:
                $ref: "#/components/schemas/ProductRef"   
### MonE added
            payment:
              type: array
              items:
                $ref: "#/components/schemas/PaymentRef"


    #############################################################################
    #############################################################################
    #############################################################################
    ##
    ##                #####    ##   #   # #    # ###### #    # #####
    ##                #    #  #  #   # #  ##  ## #      ##   #   #
    ##                #    # #    #   #   # ## # #####  # #  #   #
    ##                #####  ######   #   #    # #      #  # #   #
    ##                #      #    #   #   #    # #      #   ##   #
    ##                #      #    #   #   #    # ###### #    #   #
    ##
    #############################################################################
    #############################################################################
    #############################################################################

##TODO: Installment

    PaymentPlan:
      description: |
        Defines a plan for payment (when a party wants to spread his payments)
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - numberOfPayments
            - paymentPeriodType
            - paymentFrequency
            - totalAmount
            - externalId
          properties:
            planType:
              type: string
              description: Type of payment plan
            numberOfPayments:
              type: integer
              description: Number of payments used to spread the global payment
##MonE: New field makes it the same as bill cycle specification Actual Period = frequency x periodType
            paymentPeriodType:
              $ref: "#/components/schemas/DurationPeriodType"
##MonE: Changed type to integer
            paymentFrequency:
              type: integer
              description: "Frequency as per Payment Period"
              default: 1
            priority:
              type: integer
              description: Priority of the payment plan
              default: 0
            status:
              $ref: "#/components/schemas/PaymentPlanStatusType"
            paymentMethod:
              $ref: "#/components/schemas/PaymentMethodRef"
            totalAmount:
              $ref: "#/components/schemas/Money"
              description: Amount paid
            validFor:
              $ref: "#/components/schemas/TimePeriod"
              description: Validity period of the payment plan

    PaymentMethodRef:
      description: |
        Reference. A payment method defines a specific mean of payment (e.g direct debit).
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    PaymentMethodRefOrValue:
      description: |
        Reference. A payment method reference or PaymentMethod Value
      allOf:
        - $ref: "#/components/schemas/PaymentMethod"


    PaymentMethod:
      description: |
        A payment method defines a specific method of payment (e.g. direct debit with all details associated)
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          required:
            - name
            - "@type"
          properties:
            "@type":
              type: string
              pattern: "^(Cash|DigitalWallet|TokenizedCard|BankAccountTransfer|BankAccountDebit|BankCard|Voucher|Check|DirectDebit|BucketPaymentMethod|AccountPaymentMethod|LoyaltyPaymentMethod)$"            
            description:
              type: string
              description: "Text describing the contents of the payment method"
            isPreferred:
              type: boolean
              description: |
                If the method is the preferred one by the owner. Typically used 
                when querying for the payment methods of a specific customer or account"
            authorizationCode:
              description: |
                Authorization code provided by a financial institution. 
                Typically this would be populated for recurring payments using the method, 
                as payments have an authorization code of their own.
              type: string
            status:
              type: string
            statusDate:
              type: string
              format: date-time
            statusReason:
              type: string
              description: The reason for the last status change.
            validFor:
              $ref: "#/components/schemas/TimePeriod"
              description: "Date interval in which the payment method is valid"
            relatedParty:
              $ref: "#/components/schemas/RelatedParty"
            relatedPlace:
              $ref: "#/components/schemas/RelatedPlaceRefOrValue"
              description: 'Reference to a place for billing or delivery address, if different to that of the related party.'
            account:
              type: array
              items:
                $ref: "#/components/schemas/AccountRef"
            ## MonE: Customization
            paymentMethodCharacteristic:
              type: array
              items:
                $ref: "#/components/schemas/Characteristic"


    Cash:
      description: 'A cash method of payment. It has no additional data, but it could be extended to add information e.g.: the cashier who took the payment, the person who paid, etc'
      allOf:
        - $ref: "#/components/schemas/PaymentMethod"
        - type: object
          required:
            - name
            - "@type"
          properties:
            note:
              type: string


    DigitalWallet:
      description: "A digital wallet method of payment."
      allOf:
        - $ref: "#/components/schemas/PaymentMethod"
        - type: object
          required:
            - name
            - "@type"
            - service
            - walletId
          properties:
            service:
              description: "Wallet service (e.g.: PayPal)"
              type: string
            walletId:
              description: "Unique Id of the account in the service"
              type: string
            walletUrl:
              description: "URI pointing at the digital wallet (e.g.: https://paypal.me/johndoe)"
              type: string


    TokenizedCard:
      description: "Details of a tokenized bank card"
      allOf:
        - $ref: "#/components/schemas/PaymentMethod"      
        - type: object
          required:
            - name
            - "@type"
            - "tokenType"
            - "token"
          properties:
            tokenType:
              description: "Token type (e.g.: emv)"
              type: string
            token:
              description: "The token itself"
              type: string
            brand:
              description: "Credit card brand. E.g.: Visa, MasterCard, AmericanExpress..."
              type: string
            cardType:
              description: "Card type. Might be used for display purposes"
              type: string
            lastFourDigits:
              description: "Last four digits of the card"
              type: string
            issuer:
              type: string
              description: The entity that issued the token.
            expirationDate:
              type: string
              description: "The tokenised card's expiration date."
              format: date-time

    BankAccountTransfer:
      description: A bank transfer method of payment.
      allOf:
        - $ref: "#/components/schemas/PaymentMethod"      
        - type: object
          required:
            - name
            - "@type"
            - "accountNumber"
            - "accountNumberType"
          properties:
            accountNumber:
              description: 'The bank account number, this could refer to the iban or swift number.'
              type: string
            accountNumberType:
              description: 'The type of account number (e.g.: IBAN, SWIFT, ...)'
              type: string
            BIC:
              description: "Business Identifier Code/Swift code of the financial institution where the account is located"
              type: string
            owner:
              description: The owner of the bank account. This is also the account name.
              type: string
            bank:
              description: The display name of the bank.
              type: string


    BankAccountDebit:
      description: A bank account debit method of payment. This could be extended to add any required authorization fields to allow recurring payments
      allOf:
        - $ref: "#/components/schemas/PaymentMethod"      
        - type: object
          required:
            - name
            - "@type"
            - "accountNumber"
            - "accountNumberType"
          properties:
            accountNumber:
              type: string
              description: The Bank Account Number (this could refer to the IBAN or SWIFT number)
            accountNumberType:
              type: string
              description: 'The type of account number (e.g.: IBAN, SWIFT, ...)'
            BIC:
              type: string
              description: The Business Identifier Code/Swift code of the financial institution where the account is located.
            owner:
              type: string
              description: The owner of the bank account. This is also the account name.
            bank:
              type: string
              description: The display name of the bank.

    BankCard:
      description: A bank card method of payment.
      allOf:
        - $ref: "#/components/schemas/PaymentMethod"      
        - type: object
          required:
            - name
            - "@type"
            - "brand"
            - "cardNumber"
            - "expirationDate"
          properties:
            brand:
              type: string
              description: The card brand
            cardType:
              type: string
              enum:
                - "Debit"
                - "Credit card number"
              description: 'The type of card e.g. Credit, debit etc.'
            cardNumber:
              type: string
              description: The bank card number.
            expirationDate:
              type: string
              description: Expiration date of the bank card.
              format: date-time
            cvv:
              type: string
              description: 'The security code (e.g.: CVV, CVV2) of the card.'
            lastFourDigits:
              type: string
              description: The last four digits of the credit card.
            nameOnCard:
              type: string
              description: The name on the card.
            bank:
              type: string
              description: The bank that issued the card.



    Voucher:
      description: A voucher method of payment.
      allOf:
        - $ref: "#/components/schemas/PaymentMethod"      
        - type: object
          required:
            - name
            - "@type"
            - "code"
          properties:
            code:
              type: string
              description: Code that identifies the voucher.
            description:
              type: string
              description: 'Description of the voucher i.e.: get one and receive one free.'
            value:
              $ref: '#/components/schemas/Quantity'
              description: The value of the voucher.
            discount:
              type: string
              description: "The discount that the voucher applies when it's a discount voucher."
            expirationDate:
              type: string
              description: "The voucher's expiration date."
              format: date-time
            campaign:
              type: string
              description: Campaign this voucher belongs to.

    Check:
      description: A check method of payment.
      allOf:
        - $ref: "#/components/schemas/PaymentMethod"      
        - type: object
          required:
            - name
            - "@type"
            - "drawer"
            - "payee"
            - "bank"
          properties:
            checkId:
              type: string
              description: Unique identifier of the check.
            drawer:
              type: string
              description: Person or entity writing the check.
            payee:
              type: string
              description: Person or entity the check is addressed to.
            signedDate:
              type: string
              description: Date when the check was signed.
              format: date-time
            bank:
              type: string
              description: Bank performing the payment of the check.


    DirectDebit:
      description: 'Direct Debit is a fully automated payment instrument which is generally used for recurrent payments. It allows a creditor to initiate the payment order. In doing so, it exempts the debtor from having to send a separate payment order at each due date'
      allOf:
        - $ref: "#/components/schemas/PaymentMethod"      
        - type: object
          required:
            - name
            - "@type"
          properties:
            mandateId:
              type: string
              description: Unique mandate reference
            mandateStatus:
              type: string
              description: The status of the mandate(Active/Inactive/Pending)
            mandateType:
              type: string
              description: 'The type of mandate e.g., single-use(single)/multi-use(recurring)'
            mandateCategory:
              type: string
              description: 'The identification code of the Scheme e.g., core/b2b'
            signature:
              type: string
              description: The (e)Mandate electronic signature data
            signatureDate:
              type: string
              description: The date of signing of the (e)Mandate
              format: date-time
            mandateStatusDate:
              type: string
              description: The date of the mandate status change
              format: date-time
            firstDebitDate:
              type: string
              description: The first debit date. The debit date of the collection is the day when the payment of the Debtor is due to the Creditor
              format: date-time
            lastDebitDate:
              type: string
              description: The last debit date. The debit date of the collection is the day when the payment of the Debtor is due to the Creditor
              format: date-time
            cancellationDate:
              type: string
              description: The date on which the (e)Mandate has been cancelled by the Debtor or the Creditor.
              format: date-time
            accountNumber:
              type: string
              description: 'The bank account number, this could refer to the iban or swift number.'
            accountNumberType:
              type: string
              description: 'The type of account number (e.g.: IBAN, SWIFT, ...)'
            reference:
              type: string
              description: A reference that the party can later use to identify the direct debit.
            BIC:
              type: string
              description: The Business Identifier Code/Swift code of the financial institution where the account is located.
            owner:
              type: string
              description: The owner of the bank account. This is also the account name.
            bank:
              type: string
              description: The display name of the bank.
            attachment:
              type: array
              items:
                $ref: "#/components/schemas/AttachmentRefOrValue"


    AttachmentRefOrValue:
      description: 'An attachment by value or by reference. An attachment complements the description of an element, for example through a document, a video, a picture.'
      allOf:
        - $ref: "#/components/schemas/EntityRef"     
        - type: object
          properties:
            attachmentType:
              type: string
              description: 'Attachment type such as video, picture'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            description:
              type: string
              description: A narrative text describing the content of the attachment
            mimeType:
              type: string
              description: 'Attachment mime type such as extension file for video, picture and document'
            name:
              type: string
              description: The name of the attachment
            url:
              type: string
              format: uri
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
            size:
              $ref:  "#/components/schemas/Quantity"
              description: The size of the attachment.
            validFor:
              $ref: "#/components/schemas/TimePeriod"
              description: The period of time for which the attachment is valid


    PaymentItem:
      description: |
        The paymentItem is the result of lettering process. It enables to
        assign automatically or manually part of incoming payment amount to a bill.
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          required:
            - item
          properties:
            id:
              type: "string"
              description: "Unique identifier of the payment Item"
            amount:
              $ref: "#/components/schemas/Money"
              description: "Amount to be paid (net of taxes)"
            item:
              $ref: "#/components/schemas/EntityRef"
            subItem:
              $ref: "#/components/schemas/EntityRef"
            taxAmount:
              $ref: "#/components/schemas/Money"
              description: "Tax applied"
            totalAmount:
              $ref: "#/components/schemas/Money"
              description: "Amount to be paid (including taxes)"
            paymentTransactionType:
              type: "string"
              description: "Provides additional details about payment"
              enum:
                - CustomerBill
                - ProductOrder
                - ProductOrderItem
                - AccountBalance.creditLimit
                - AccountBalance.spendingWallet
                - AccountBalance.deposit
                - AccountBalance.advancePayment

    PaymentRef:
      description: |
        If an immediate payment has been done at the product order submission,
        the payment information are captured and stored (as a reference) in the order.
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    Payment:
      description: |
        The Payment resource represents a performed payment. It contains
        both information about the payment and the payment method used to perform it.
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          required:
            - account
          properties:
            authorizationCode:
              description: "Authorization code retrieved from an external payment gateway for reconciliation"
              type: string
            correlatorId:
              description: "Unique identifier in the client for the payment in case it is needed to correlate"
              type: string
            description:
              description: "Text describing the contents of the payment"
              type: string
            paymentDate:
              description: "Date when the payment was performed"
              type: string
              format: date-time
            status:
              $ref: "#/components/schemas/PaymentStatus"
            statusDate:
              type: string
              format: date-time
              description: "Date when the status was recorded"
            account:
              $ref: "#/components/schemas/AccountRef"
            amount:
              description: "Amount to be paid (net of taxes)"
              $ref: "#/components/schemas/Money"
            channel:
              $ref: "#/components/schemas/ChannelRef"
            payer:
              $ref: "#/components/schemas/RelatedParty"
            paymentItem:
              type: array
              items:
                $ref: "#/components/schemas/PaymentItem"
            paymentMethod:
              $ref: "#/components/schemas/PaymentMethodRefOrValue"
            taxAmount:
              description: "Tax applied"
              $ref: "#/components/schemas/Money"
            totalAmount:
              description: "Amount to be paid (including taxes)"
              $ref: "#/components/schemas/Money"

    Refund:
      description: |
        The Refund resource represents a performed Refund. It contains both
        information about the refund and the payment method used to perform it.
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          required:
            - account
            - paymentMethod
          properties:
            authorizationCode:
              description: "Authorization code retrieved from an external payment gateway for reconciliation"
              type: string
            correlatorId:
              description: "Unique identifier in the client for the payment in case it is needed to correlate"
              type: string
            description:
              description: "Text describing the contents of the payment"
              type: string
            refundDate:
              description: "Date when the refund was performed"
              type: string
              format: date-time
            status:
              $ref: "#/components/schemas/PaymentStatus"
            statusDate:
              type: string
              format: date-time
              description: "Date when the status was recorded"
            account:
              $ref: "#/components/schemas/AccountRef"
            amount:
              description: "Amount to be paid (net of taxes)"
              $ref: "#/components/schemas/Money"
            channel:
              $ref: "#/components/schemas/ChannelRef"
            payment:
              $ref: "#/components/schemas/PaymentRef"
            paymentMethod:
              $ref: "#/components/schemas/PaymentMethod"
            requestor:
              $ref: "#/components/schemas/RelatedParty"
            taxAmount:
              description: "Tax applied"
              $ref: "#/components/schemas/Money"
            totalAmount:
              description: "Amount to be paid (including taxes)"
              $ref: "#/components/schemas/Money"



        


    #############################################################################
    #############################################################################
    #############################################################################
    ##
    ##                       ####  #####  #####  ###### #####
    ##                      #    # #    # #    # #      #    #
    ##                      #    # #    # #    # #####  #    #
    ##                      #    # #####  #    # #      #####
    ##                      #    # #   #  #    # #      #   #
    ##                       ####  #    # #####  ###### #    #
    ##
    #############################################################################
    #############################################################################
    #############################################################################


    QuoteRef:
      description: |
        It's a Quote that has been executed previously
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    AppointmentRef:
      description: |
        Refers an appointment, such as a Customer presentation or internal meeting or site visit
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    ProductOrderStateType:
      type: string
      description: "Possible values for the state of the order"
      enum:
        - "acknowledged"
        - "rejected"
        - "pending"
        - "held"
        - "inProgress"
        - "cancelled"
        - "completed"
        - "failed"
        - "partial"
        - "assessingCancellation"
        - "pendingCancellation"

    OrderItemActionType:
      description: "action to be performed on the product"
      type: string
      enum:
        - "add"
        - "modify"
        - "delete"
        - "noChange"

    ProductOrderItemStateType:
      description: "Possible values for the state of the product order item"
      type: string
      enum:
        - "acknowledged"
        - "rejected"
        - "pending"
        - "held"
        - "inProgress"
        - "cancelled"
        - "completed"
        - "failed"
        - "assessingCancellation"
        - "pendingCancellation"

    OrderItemRelationship:
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          properties:
            id:
              type: string
            relationshipType:
              description: "The type of order item relationship"
              type: string

    QuoteItemRef:
      description: |
        It's a Quote item that has been executed previously.
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          required:
            - "id"
            - "quoteId"
          properties:
            quoteHref:
              type: string
              description: "Reference of the related entity."
            quoteId:
              type: string
              description: "Unique identifier of a related entity."
            quoteName:
              type: string
              description: "Name of the related entity."
            id:
              type: string
              description: "Id of an item of a quote"

    OrderPrice:
      description: |
        An amount, usually of money, that represents the actual price paid by the Customer for this item or this order
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - "priceType"
            - "price"
          properties:
            description:
              description: "A narrative that explains in detail the semantics of this product price."
              type: string
            productOfferingPrice:
              $ref: "#/components/schemas/ProductOfferingPriceRef"
            billingAccount:
              $ref: "#/components/schemas/BillingAccountRef"
            priceType:
              $ref: "#/components/schemas/PriceType"
##            recurringChargePeriod:
##              description: "Could be month, week..."
##              type: string
            ## MonE: Added
            unitType:
              $ref: "#/components/schemas/UnitType"
            unitOfMeasure:
              $ref: "#/components/schemas/UnitOfMeasure"
            price:
              $ref: "#/components/schemas/Price"
            productPriceAlteration:
              type: "array"
              items:
                $ref: "#/components/schemas/PriceAlteration"



    OrderTerm:
      description: |
        Description of a orderTerm linked to this product. This represent
        a commitment with a duration
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          properties:
            description:
              description: "Description of the Entity"
              type: string
            duration:
              description: "Duration of the productTerm"
              $ref: "#/components/schemas/DurationQuantity"
            validFor:
              description: "productTerm validity period"
              $ref: "#/components/schemas/TimePeriod"

    ProductOrder:
      description: |
        A Product Order is a type of order which  can  be used to place
        an order between a customer and a service provider or between a service provider
        and a partner and vice versa
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          required:
            - billingAccount
            - productOrderItem
          properties:
            category:
              description: |
                Used to categorize the order from a business perspective that can be useful for the OM system.
              type: string
            description:
              description: "Description of the product order"
              type: string
            orderDate:
              description: "Date when the order was created"
              type: string
              format: date-time
            completionDate:
              description: |
                Date when the order was completed
              type: string
              format: date-time
            priority:
              description: "A way that can be used by consumers to prioritize orders in OM system (from 0 to 4 : 0 is the highest priority, and 4 the lowest)"
              type: integer
              format: int32 
              minimum: 0 
            state:
              description: |
                Tracks the lifecycle status of the product order, such as; 
                Acknowledged, Rejected, InProgress, Pending and so on."
              $ref: "#/components/schemas/ProductOrderStateType"
            billingAccount:
              $ref: "#/components/schemas/AccountRef"
            productOrderItem:
              type: array
              items:
                $ref: "#/components/schemas/ProductOrderItem"
              minItems: 1
            orderTotalPrice:
              type: array
              items:
                $ref: "#/components/schemas/OrderPrice"
            payment:
              type: array
              items:
                $ref: "#/components/schemas/PaymentRef"
            requestedStartDate:
              description: |
                Order fulfillment start date wished by the requestor. This is
                used when, for any reason, requestor cannot allow seller to begin to operationally
                begin the fulfillment before a date.
              type: string
              format: date-time
            requestedCompletionDate:
              description: "Requested delivery date from the requestor perspective"
              type: string
              format: date-time
            expectedCompletionDate:
              description: "Expected delivery date amended by the provider"
              type: string
              format: date-time
            cancellationDate:
              description: |
                Date when the order is cancelled. This is used when order is cancelled.
              type: string
              format: date-time
            cancellationReason:
              description: |
                Reason why the order is cancelled. This is used when order is cancelled.
              type: string
            notificationContact:
              description: "Contact attached to the order to send back information regarding this order"
              type: string
            agreement:
              description: |
                A reference to an agreement defined in the context of the product order
              type: array
              items:
                $ref: "#/components/schemas/AgreementRef"
            channel:
              type: array
              items:
                $ref: "#/components/schemas/RelatedChannel"
            relatedParty:
              type: array
              items:
                $ref: "#/components/schemas/RelatedParty"
            note:
              type: array
              items:
                $ref: "#/components/schemas/Note"
            productOfferingQualification:
              type: array
              items:
                $ref: "#/components/schemas/ProductOfferingQualificationRef"
            quote:
              type: array
              items:
                $ref: "#/components/schemas/QuoteRef"

    ProductOrderItem:
      description: |
        An identified part of the order. A product order is decomposed into one or more order items.
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - action
            - productOffering
          properties:
            id:
              description: "Identifier of the line item (generally it is a sequence number 01, 02, 03, ...)"
              type: string
            quantity:
              description: "Quantity ordered"
              type: integer
            action:
              description: "The action to be carried out on the Product. Can be: add, modify, delete, noChange"
              $ref: "#/components/schemas/OrderItemActionType"
            state:
              description: "State of the order item : described in the state machine diagram"
              $ref: "#/components/schemas/ProductOrderItemStateType"
            appointment:
              $ref: "#/components/schemas/AppointmentRef"
            billingAccount:
              $ref: "#/components/schemas/BillingAccountRef"
            itemPrice:
              type: array
              items:
                $ref: "#/components/schemas/OrderItemPrice"
            itemTerm:
              type: array
              items:
                $ref: "#/components/schemas/OrderTerm"
            itemTotalPrice:
              type: array
              items:
                $ref: "#/components/schemas/OrderPrice"
            payment:
              type: array
              items:
                $ref: "#/components/schemas/PaymentRef"
            product:
              $ref: "#/components/schemas/ProductRefOrValue"
            productOffering:
              $ref: "#/components/schemas/ProductOfferingRef"
            productOfferingQualificationItem:
              $ref: "#/components/schemas/ProductOfferingQualificationItemRef"
            quoteItem:
              $ref: "#/components/schemas/QuoteItemRef"
            productOrderItem:
              type: array
              items:
                $ref: "#/components/schemas/ProductOrderItem"
            productOrderItemRelationship:
              type: array
              items:
                $ref: "#/components/schemas/OrderItemRelationship"
            qualification:
              type: array
              items:
                $ref: "#/components/schemas/ProductOfferingQualificationRef"

    #############################################################################
    #############################################################################
    #############################################################################
    ##
    ##                      ######  ### #       #       
    ##                      #     #  #  #       #       
    ##                      #     #  #  #       #       
    ##                      ######   #  #       #       
    ##                      #     #  #  #       #       
    ##                      #     #  #  #       #       
    ##                      ######  ### ####### ####### 
    ##                                                      
    #############################################################################
    #############################################################################

    TaxItem:
      description: |
        A tax item is created for each tax rate and tax type used in the bill.
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - taxCategory
            - taxRate
          properties:
            taxAmount:
              description: "Amount of tax expressed in the given currency"
              $ref: '#/components/schemas/Money'
            taxCategory:
              description: "Tax category"
              type: string
            taxRate:
              description: "Applied rate of the tax"
              type: number
              format: float

    AppliedBillingTaxRate:
      description: |
        A tax item that shows applied tax rate
      allOf:
        - $ref: "#/components/schemas/TaxItem"

    AppliedPayment:
      description: |
        The applied payment is the result of lettering process. It enables
        to assign automatically or manually part of incoming payment amount to a bill.
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - appliedAmount
            - payment
          properties:
            appliedAmount:
              $ref: "#/components/schemas/Money"
            payment:
              $ref: "#/components/schemas/PaymentRef"

    CustomerBill:
      description: |
        The billing account receives all charges (recurring, one time and usage) of the offers and products assigned to it during order process. 
        Periodically according to billing cycle specifications attached to the billing account or as a result of an event, a customer bill (aka invoice) is produced. 
        This customer bill concerns different related parties which play a role on it : for example, a customer bill is produced by an operator, is sent to a bill receiver and has to be paid by a payer.
        A payment method could be assigned to the customer bill to build the call of payment. 
        Lettering process enables to assign automatically or manually incoming amount from payments to customer bills (payment items).
        A tax item is created for each tax rate used in the customer bill.
        The financial account represents a financial entity which records all customer’s accounting events : 
          payment amount are recorded as credit and invoices amount are recorded as debit. It gives the customer overall balance (account balance).
        The customer bill is linked to one or more documents that can be downloaded via a provided url.        
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          required:
            - billingAccount
            - billNo
            - amountDue
            - remainingAmount
            - runType
            - billingPeriod
          properties:
            billNo:
              description: "Bill reference known by the customer or the party and displayed on the bill. Could be different from the id."
              type: string
            billDate:
              description: "Bill date"
              type: string
              format: date-time
            billingPeriod:
              description: "Billing period of the bill (used for onCycle bill only)"
              $ref: '#/components/schemas/TimePeriod'
            amountDue:
              description: "Amount due for this bill expressed in the given currency"
              $ref: '#/components/schemas/Money'
            remainingAmount:
              description: "Remaining amount to be paid for this bill expressed in the given currency"
              $ref: '#/components/schemas/Money'
##MonE added
            paidAmount:
              description: "Amount paid for this bill item expressed in the given currency"
              $ref: '#/components/schemas/Money'
            appliedPayment:
              type: array
              items:
                $ref: '#/components/schemas/AppliedPayment'
              description: "Applied Payments to this entity"
            taxExcludedAmount:
              description: "Total tax excluded amount expressed in the given currency"
              $ref: '#/components/schemas/Money'
            taxIncludedAmount:
              description: "Total tax included amount expressed in the given"
              $ref: '#/components/schemas/Money'
            taxItem:
              type: array
              items:
                $ref: '#/components/schemas/TaxItem'
            paymentDueDate:
              description: "Date at which the amount due should have been paid"
              type: string
              format: date-time
            billingAccount:
              $ref: '#/components/schemas/BillingAccountRef'
            runType:
              $ref: '#/components/schemas/BillRunType'
            category:
              description: "Category of the bill produced : normal, duplicate, interim, last, trial customer or credit note"
              type: string

            lastUpdate:
              description: "Date of bill last update"
              type: string
              format: date-time
            nextBillDate:
              description: "Approximate date of  the next bill production given for information (only used for onCycle bill)"
              type: string
              format: date-time
            state:
              $ref: '#/components/schemas/BillStateType'
            billDocument:
              description: "Document(s) associated to the bill"
              type: array
              items:
                $ref: '#/components/schemas/FileDocument'
            paymentMethod:
              $ref: '#/components/schemas/PaymentMethodRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedParty'
            financialAccount:
              $ref: '#/components/schemas/FinancialAccountRef'

    BillRef:
      description: |
        Reference. CustomerBill.
      allOf:
        - $ref: "#/components/schemas/EntityRef"




    AppliedCustomerBillingRate:
      description: |
        A customer bill displays applied billing rates created before or during the billing process. This is detailed invoice items listing.
      allOf:
        - type: object
          properties:
            billNo:
              description: "Bill reference known by the customer or the party and displayed on the bill. Could be different from the id."
              type: string
            bill:
              $ref: '#/components/schemas/BillRef'
        - $ref: "#/components/schemas/RatedProductTransactionType"


    AppliedBillingRateCharacteristic:
      description: |
        Applied Billing Rate Characteristic.
      allOf:
        - $ref: "#/components/schemas/Characteristic"

    CustomerBillOnDemand:
      description: |
        This resource is used to manage the creation request of a customer bill in real-time (on demand).
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            description:
              description: "Additional data describing the customer bill on demand request"
              type: string
            lastUpdate:
              description: "The last date time when the customer bill on demand has been updated"
              type: string
              format: date-time
            billingAccount:
              $ref: "#/components/schemas/BillingAccountRef"
            customerBill:
              $ref: "#/components/schemas/BillRef"
            relatedParty:
              $ref: "#/components/schemas/RelatedPartyRef"
            state:
              $ref: "#/components/schemas/RequestStateValues"

    #############################################################################
    ## !!!!!!!! END TMFORUM Customer
    #############################################################################

    #############################################################################
    #############################################################################
    ## 5.4. TMFORUM Product
    #############################################################################
    #############################################################################

    ProductOfferingRef:
      description: |
        ProductOffering reference. A product offering represents entities
        that are orderable from the provider of the catalog, this resource includes
        pricing information.
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    ProductOfferingQualificationRef:
      description: |
        It's a productOfferingQualification that has been executed previously
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    ProductOfferingQualificationItemRef:
      description: |
        It's a productOfferingQualification item that has been executed previously."
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - "id"
            - "productOfferingQualificationId"
          properties:
            "@referredType":
              type: string
              description: "The actual type of the target instance when needed for disambiguation."
            productOfferingQualificationHref:
              type: string
              description: "Reference of the related entity."
            productOfferingQualificationId:
              type: string
              description: "Unique identifier of a related entity."
            productOfferingQualificationName:
              type: string
              description: "Name of the related entity."
            id:
              type: string
              description: "Id of an item of a product offering qualification"

    RelatedProductOrderItem:
      description: |
        RelatedProductOrderItem (ProductOrder item) .The product order item
        which triggered product creation/change/termination."
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - "orderItemId"
            - "productOrderId"
          properties:
            "@referredType":
              type: string
              description: "The actual type of the target instance when needed for disambiguation."
            productOrderHref:
              type: string
              description: "Reference of the related entity."
            productOrderId:
              type: string
              description: "Unique identifier of a related entity."
            orderItemAction:
              type: string
              description: "Action of the order item for this product"
            orderItemId:
              type: string
              description: "Identifier of the order item where the product was managed"
            role:
              type: string
              description: "role of the product order item for this product"

    ProductSpecificationRef:
      description: |
        Product specification reference: A ProductSpecification is a detailed
        description of a tangible or intangible object made available externally in
        the form of a ProductOffering to customers or other parties playing a party
        role.
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            version:
              type: string
              description: "Version of the product specification"
            targetProductSchema:
              description: |
                A target product schema reference. The reference object to the
                schema and type of target product which is described by product specification.
              $ref: "#/components/schemas/Entity"

    ProductTerm:
      description: |
        Description of a productTerm linked to this product. This represent
        a commitment with a duration
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          properties:
            description:
              description: "Description of the Entity"
              type: string
            duration:
              description: "Duration of the productTerm"
              $ref: "#/components/schemas/DurationQuantity"
            validFor:
              description: "productTerm validity period"
              $ref: "#/components/schemas/TimePeriod"

    ProductStatusType:
      description: "Possible values for the status of the product"
      type: string
      enum:
        - "created"
        - "pendingActive"
        - "cancelled"
        - "active"
        - "pendingTerminate"
        - "terminated"
        - "suspended"
        - "aborted"

    ProductRelationship:
      description: |
        Linked products to the one instantiate, such as [bundled] if the
        product is a bundle and you want to describe the bundled products inside this
        bundle; [reliesOn] if the product needs another already owned product to rely
        on (e.g. an option on an already owned mobile access product) [targets] or
        [isTargeted] (depending on the way of expressing the link) for any other kind
        of links that may be useful
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - "relationshipType"
            - "product"
          properties:
            relationshipType:
              description: |
                Linked products to the one instantiate, such as [bundled] if the
                product is a bundle and you want to describe the bundled products inside this
                bundle; [reliesOn] if the product needs another already owned product to rely
                on (e.g. an option on an already owned mobile access product) [targets] or
                [isTargeted] (depending on the way of expressing the link) for any other kind
                of links that may be useful
              type: string
            product:
              $ref: "#/components/schemas/ProductRefOrValue"

    ProductOfferingPriceRef:
      description: |
        ProductPriceOffering reference. An amount, usually of money, that
        is asked for or allowed when a ProductOffering is bought, rented, or leased
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    PriceAlteration:
      description: |
        Is an amount, usually of money, that modifies the price charged
        for an order item.
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - "priceType"
          properties:
            priceType:
              $ref: "#/components/schemas/PriceType"
            price:
              $ref: "#/components/schemas/Price"
            relativePriceAlterationFactor:
              description: |
                Either an alteration price must be provided OR a relativePriceAlterationFactor must be Provided
                Such as: 0.90 means 0.90 of original (related) Product Price Type
              type: number
              format: double
            applicationDuration:
              description: |
                Duration during which the alteration applies on the order item
                Duration is in units of recurringChargePeriod of related ProductPrice of priceType=recurrent
                Either application duration of validFor shall be provided
              type: integer
## MonE: Removed
##            recurringChargePeriod:
##              $ref: "#/components/schemas/RecurringChargePeriodType"

## MonE: Added
            validFor:
              $ref: "#/components/schemas/TimePeriod"
            description:
              description: "A narrative that explains in detail the semantics of this order item price alteration"
              type: string
            productOfferingPrice:
              $ref: "#/components/schemas/ProductOfferingPriceRef"
            priority:
              type: integer
              description: "Priority level for applying this alteration among all the defined alterations on the order item price"
              format: int32
              minimum: 0



#############################################################################
## ORDER ITEM PRICE
#############################################################################


    ProductPrice:
      description: |
        An amount, usually of money, that represents the actual price paid by the Customer for this item or this order
      allOf:
        - $ref: "#/components/schemas/Entity"
        - type: object
          required:
            - "priceType"
            - "price"
          properties:
            description:
              description: "A narrative that explains in detail the semantics of this product price."
              type: string
            productOfferingPrice:
              $ref: "#/components/schemas/EntityRef"
## Not used by MonE
##            billingAccount:
##              $ref: "#/components/schemas/EntityRef"
            priceType:
              $ref: "#/components/schemas/PriceType"
            recurringChargePeriod:
              $ref: "#/components/schemas/RecurringChargePeriodType"
            recurringChargeFrequency:
              description: "Indicates the frequency of recurring charge in cycle units of recurring charge period"
              type: integer  
            recurringChargeProrated:
              description: "Indicates if recurring charge prorated within the billcycle period"
              type: boolean
              default: false
            unitType:
              $ref: "#/components/schemas/UnitType"
            unitOfMeasure:
              $ref: "#/components/schemas/UnitOfMeasure"
            price:
              $ref: "#/components/schemas/Price"
            productPriceAlteration:
              type: "array"
              items:
                $ref: "#/components/schemas/PriceAlteration" 


    OrderItemPrice:
      description: |
        An amount, usually of money, that represents the actual price paid
        by a Customer for a purchase, a rent or a lease of a Product. The price is
        valid for a defined period of time.
      allOf:
        - $ref: "#/components/schemas/ProductPrice"


    Product:
      description: |
        A product offering procured by a customer or other interested party
        playing a party role. A product is realized as one or more service(s) and/or resource(s).
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            description:
              description: |
                Is the description of the product. It could be copied from the
                description of the Product Offering.
              type: string
            isBundle:
              description: |
                If true, the product is a ProductBundle which is an instantiation of a BundledProductOffering. 
                If false, the product is a ProductComponent which is an instantiation of a SimpleProductOffering."
              type: boolean
            orderDate:
              description: "Is the date when the product was ordered"
              type: string
              format: date-time
            status:
              description: "Is the lifecycle status of the product."
              $ref: "#/components/schemas/ProductStatusType"
            productCharacteristic:
              type: "array"
              items:
                $ref: "#/components/schemas/Characteristic"
            isCustomerVisible:
              type: boolean
              description: "If true, the product is visible by the customer."
            agreement:
              type: "array"
              items:
                $ref: "#/components/schemas/AgreementItemRef"
            billingAccount:
              $ref: "#/components/schemas/AccountRef"
            productOffering:
              $ref: "#/components/schemas/ProductOfferingRef"
            productOrderItem:
              type: "array"
              items:
                $ref: "#/components/schemas/RelatedProductOrderItem"
## MonE Product under Product not supported currently
##            product:
##              type: "array"
##              items:
##                $ref: "#/components/schemas/ProductRefOrValue"
            productPrice:
              type: "array"
              items:
                $ref: "#/components/schemas/ProductPrice"
            productRelationship:
              type: "array"
              items:
                $ref: "#/components/schemas/ProductRelationship"
            productSerialNumber:
              description: |
                Is the serial number for the product. This is typically applicable
                to tangible products e.g. Broadband Router."
              type: string
            productSpecification:
              $ref: "#/components/schemas/ProductSpecificationRef"
            productTerm:
              type: "array"
              items:
                $ref: "#/components/schemas/ProductTerm"
            realizingService:
              type: "array"
              items:
                $ref: "#/components/schemas/ServiceRef"
            realizingResource:
              type: "array"
              items:
                $ref: "#/components/schemas/ResourceRef"
            relatedParty:
              type: "array"
              items:
                $ref: "#/components/schemas/RelatedParty"
            place:
              type: "array"
              items:
                $ref: "#/components/schemas/Place"
            startDate:
              type: string
              format: date-time
              description: "Is the date from which the product starts"
            terminationDate:
              type: string
              format: "date-time"
              description: "Is the date when the product was terminated"

    ProductRefOrValue:
      $ref: "#/components/schemas/Product"

    ProductRef:
      description: "Product reference"
      allOf:
        - $ref: "#/components/schemas/EntityRef"

    #############################################################################
    ## !!!!!!!! END TMFORUM Product
    #############################################################################

    #############################################################################
    #############################################################################
    ## 5.5. TMFORUM Service
    #############################################################################
    #############################################################################

    ServiceRef:
      description: "Service reference"
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            name:
              type: string
              description: "Name of the service"
            ## MonE: Added below
            value:
              description: |
                The generic service value that can be used to identify a service with a public key
              type: string
            teleServiceCode:
              description: |
                The tele service value that can be used to identify a service with a public key
              type: string
            bearerServiceCode:
              description: |
                The bearer service value that can be used to identify a service with a public key
              type: string
            supplementaryServiceCode:
              description: |
                The supplementary service value that can be used to identify a service with a public key
              type: string

    #############################################################################
    ## !!!!!!!! END TMFORUM Service
    #############################################################################

    #############################################################################
    #############################################################################
    ## 5.6. TMFORUM Resource
    #############################################################################
    #############################################################################

    ResourceRef:
      description: "Resource reference"
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            name:
              type: string
              description: "Name of the resource"
            value:
              description: |
                The resource value that can be used to identify a resource with a public key (e.g.: a tel nr, an msisdn)
              type: string

    #############################################################################
    ## !!!!!!!! END TMFORUM Resource
    #############################################################################

    #############################################################################
    #############################################################################
    ## 5.7. TMFORUM MarketingSales
    #############################################################################
    #############################################################################

    #############################################################################
    ## !!!!!!!! END TMFORUM MarketingSales
    #############################################################################

    #############################################################################
    ## 5.x. EXTERNAL COMMON DATA TYPE REFERENCES
    #############################################################################

    ValueType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/ValueType"

    PriceType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/PriceType"

    PhoneNumber:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/PhoneNumber"
    Email:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/Email"

    UnitType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/UnitType"
    UnitOfMeasure:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/UnitOfMeasure"
    DurationPeriodType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/DurationPeriodType"
    DurationQuantity:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/DurationQuantity"

    RequestStateValues:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/RequestStateValues"

    RecurringPeriodType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/RecurringPeriodType"

    RecurringChargePeriodType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/RecurringChargePeriodType"
    BillingPeriodType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/BillingPeriodType"
    AccountType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/AccountType"
    AccountRatingType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/AccountRatingType"      
    AccountStateType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/AccountStateType"
    
    AccountBalanceType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/AccountBalanceType"
    OnlineChargingBalanceType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/OnlineChargingBalanceType"
    RatedProductTransactionType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_charging_type_schemas.yaml#/components/schemas/RatedProductTransactionType"

    AccountContactType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/AccountContactType"
    ContactMediumType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/ContactMediumType"
    MediumCharacteristicContactType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/MediumCharacteristicContactType"
    AccountPaymentStatus:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/AccountPaymentStatus"
    PaymentStatus:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/PaymentStatus"
    PaymentPlanStatusType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/PaymentPlanStatusType"



    BillStateType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/BillStateType"
    BillRunType:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/BillRunType"

    DecisionTree:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/DecisionTree"
    Rule:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/Rule"
    RuleResult:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/RuleResult"
    RuleAttribute:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/RuleAttribute"
    RuleAttributeItem:
      $ref: "/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/RuleAttributeItem"



    AppliedCustomerBillingRateItemType:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/AppliedCustomerBillingRateItemType'   

#############################################################################
## 6. SECURITY
#############################################################################
security:
  - JWT_Bearer: []
  - IAM_OAuth: []    

#############################################################################
## 7. TAGS
#############################################################################

#############################################################################
## 8. EXTERNAL DOCS
#############################################################################
externalDocs:
  description: Find more information here.
  url: https://monetizehub.io/docs/home/
#############################################################################
#############################################################################
