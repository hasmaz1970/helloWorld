#############################################################################
## 1. OPENAPI
#############################################################################
openapi: 3.0.2

#############################################################################
## 2. INFO
#############################################################################
info:
  version: 1.0.0
  title: Common Charging Schema (Data Type) Definitions
  contact:
    name: MonE Product Development
    
  license:
    name: GNU AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  description: |
    <!-- Note that this description is a MARKDOWN Block -->

    **This Open API specification does NOT contain any valid PATHS/OPERATIONS!!!. It ONLY contains COMMON SCHEMA (TYPE) DEFINITIONS referred by other API specifications.**

    Thus, in this context COMMON SCHEMA (TYPE) DEFINITIONS mean shared entity data models or baseline objects that can be reused with or without extension.

#############################################################################
## 3. SERVERS
#############################################################################

servers:
  - url: https://{environment}.monetizehub.io:{port}/private/COMMON_TYPE_DEFINITION
    description: The production API server
    variables:
      environment:
        enum:
          - 'dev'
          - 'test'
          - 'staging'
          - ''
        default: 'dev'
      port:
        enum:
          - '443'
          - '8443'
        default: '443'
      version:
        default: 'v1'


#############################################################################
## 4. PATHS
#############################################################################
paths:
  /readMe:
    get:
      summary: This is a placeholder nouse operation. (to bypass Swagger UI limitation of a specification with ONLY data models without operation)
      operationId: readMe
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: string


#############################################################################
## 5. COMPONENTS
#############################################################################
components:

#############################################################################
## 5.x. SECURITY SCHEMES
#############################################################################
  securitySchemes:
    JWT_Bearer:
      type: http
      scheme: bearer 
      bearerFormat: JWT
    IAM_OAuth:
      type: oauth2
      description: |
        **OAuth Grant Type: Password Credentials**
      flows:
        password:
          tokenUrl: https://iam.monetizehub.io/oauth/v1/token
          scopes:
            write:resources: modify resources
            read:resources: read resources
    



#############################################################################
## 5.x. RESPONSES
#############################################################################




#############################################################################
## 5.x. SCHEMA DEFINITIONS
#############################################################################

  schemas:

#############################################################################
## Charging related Data Models

    Event_Charging_FMF_Input:
      description: |
        Input Event to register Offline Charging Request to EMSP (Event Message Streaming Platform).<br>
        Event Type for CH_FMF Input


      allOf:
        - $ref: "#/components/schemas/Event"
        - type: object
          properties:
            payload: 
              $ref: "#/components/schemas/OfflineChargingRequest"


    Event_Charging_Convergent:
      description: |
        Generic Event Type for Input/Output of all Charging Modules, except for CH_FMF Input

      allOf:
        - $ref: "#/components/schemas/Event"
        - type: object
          properties:
            payload: 
              type: array
              items:
                $ref: "#/components/schemas/CDS"


#############################################################################
## Charging Events (DOES NOT INCLUDE NOTIFICATIONs)

    OfflineChargingRequest:
      description: 
        Offline Charging Data Stream Request

      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            chargingEventStreamRef:
              description: |
                Used to assign the correct mapper/converter to the stream prior to charging          
              $ref: "#/components/schemas/RelatedEntityRef"
            fieldDelimiter:
              description: |
                Delimiter for CSV. 
              type: string
              example: ","
            recordDelimiter:
              description: |
                Record Delimiter for CSV. Default newline.
              type: string
              example: "\n"
              default: "\n"
            streamConverter:
              description: |
                The mapper/converter to the stream prior to charging          
              type: object
              $ref: "#/components/schemas/VersionedRelatedEntityRef"



    CDSBase:
      description: 
        MonE CDS-Charging Data Stream Base (Uncharged, MonE Templated NOT applied)

      allOf:
        - $ref: "#/components/schemas/Entity"  
        - type: object    
          properties:
            chargingEventStreamRef:
              description: |
                Used to assign the correct mapper/converter to the stream prior to charging          
              $ref: "#/components/schemas/RelatedEntityRef"
            qualifierCollection:
              $ref: "#/components/schemas/Collection"
            quantifierCollection:
              $ref: "#/components/schemas/Collection"
            qualifierMap:
              $ref: '#/components/schemas/Any'
            quantifierMap:
              $ref: '#/components/schemas/Any'

    CDSMonETemplate:
      description: 
        MonE CDS-Charging Data Stream with Monetization Template (Uncharged, MonE Template applied)

      allOf:
        - $ref: "#/components/schemas/Entity"  
        - type: object    
          properties:
            chargingEventStreamRef:
              description: |
                Used to assign the correct mapper/converter to the stream prior to charging          
              $ref: "#/components/schemas/RelatedEntityRef"
            qualifierCollection:
              $ref: "#/components/schemas/Collection"
            quantifierCollection:
              $ref: "#/components/schemas/Collection"
            qualifierMap:
              $ref: '#/components/schemas/Any'
            quantifierMap:
              $ref: '#/components/schemas/Any'
            monetizationTemplate:
              $ref: "#/components/schemas/ChargingMonetizationTemplate"
            involvedAccount:
              type: array
              items:
                $ref: "#/components/schemas/InvolvedAccountItem"
            involvedProduct:
              type: array
              items:
                $ref: "#/components/schemas/InvolvedProductItem"                


    CDS:
      description: 
        MonE Rated and Discounted CDS-Charging Data Stream (Contains MonE Template Info, Charge Parts and/or Discount Parts)

      allOf:
        - $ref: "#/components/schemas/Entity"  
        - type: object    
          properties:
            chargingEventStreamRef:
              description: |
                Used to assign the correct mapper/converter to the stream prior to charging          
              $ref: "#/components/schemas/RelatedEntityRef"
            qualifierCollection:
              $ref: "#/components/schemas/Collection"
            quantifierCollection:
              $ref: "#/components/schemas/Collection"
            qualifierMap:
              $ref: '#/components/schemas/Any'
            quantifierMap:
              $ref: '#/components/schemas/Any'
            monetizationTemplate:
              $ref: "#/components/schemas/ChargingMonetizationTemplate"
            involvedAccount:
              type: array
              items:
                $ref: "#/components/schemas/InvolvedAccountItem"
            involvedProduct:
              type: array
              items:
                $ref: "#/components/schemas/InvolvedProductItem"     
            chargePart:
              type: array
              items:
                $ref: "#/components/schemas/RatedProductTransactionType"



    InvolvedAccountItem:
      description:
        Involved Accounts identified as per Monetization Template
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            accountRelationType:
              $ref: "#/components/schemas/AccountRelationType"
            role:
              type: string
              example: "customer"
      required:
        - id 
        - accountRelationType
        - role      

    InvolvedProductItem:
      description:
        Involved Products identified as per Monetization Template.<br>
        Note that Products imply charging tariffs for onetime, recurrent, usage

      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            description:
              type: string
              example: "description"
            role:
              type: string
              example: "usage"
      required:
        - id 
        - role      

    AbstractRatedProductTransactionSummaryRecord:
      description: 
        MonE AbstractRatedProductTransactionSummaryRecord to be used for persisting into relation DB
        Purpose is to defined minimum viable set of fields to be persisted into Rel.DB columns
      allOf:
        - $ref: "#/components/schemas/EntityRef"
        - type: object
          properties:
            accountId:
              type: string
            priceType:
              $ref: "#/components/schemas/PriceType"
            productNameRef:
              description: |
                Reference to Product Name that is charged and to be shown on the bill.
                The name to be chosen is applied in the following order
                If available product.name 
                else if available productOffering.name
                else productSpecification.name
              type: string
            date:
              type: string
              format: date-time
            transactionDate:
              description: |
                The datetime when the relevant usage/transaction occured
              type: string
              format: date-time                                 
            periodCoverage:
              description: "periodCoverage for RecurringCharge (RC)"
              $ref: '#/components/schemas/TimePeriod'
            isBilled:
              type: boolean
              description: |
                If isBilled, THEN in referenced bill, billNo (invoice no) is available.

            accountBillingCycleSpecificationId:
              description: |
                Bill cycle specification id of the account
              type: string

            taxExcludedAmount:
              $ref: "#/components/schemas/Money"
            taxIncludedAmount:
              $ref: "#/components/schemas/Money"
            paidAmount:
              description: "Amount paid for this bill item expressed in the given currency"
              $ref: '#/components/schemas/Money'
            taxExcludedAmountBeforeDiscount:
              $ref: "#/components/schemas/Money"
            taxIncludedAmountBeforeDiscount:
              $ref: "#/components/schemas/Money"
            quantity:
              $ref: "#/components/schemas/Quantity"
            product:
              $ref: "#/components/schemas/EntityRef"
            productOffering:
              $ref: "#/components/schemas/EntityRef"
            productSpecification:
              $ref: "#/components/schemas/EntityRef"
            isRevenueShareOnB2CPayment:
              type: boolean
              default: false
            accountRefForB2CPayment:
              $ref: "#/components/schemas/EntityRef"


    AbstractRatedProductTransaction:
      description: 
        MonE AbstractRatedProductTransaction
      allOf:
        - $ref: "#/components/schemas/EntityRef"        
        - type: object
          required:
            - account
            - quantity
            - priceType
            - transactionDate
            - taxExcludedAmount
          properties:
            description:
              description: "Additional data to be displayed on the bill for this customer applied billing rate"
              type: string
            date:
              type: string
              format: date-time
            transactionDate:
              description: |
                The datetime when the relevant usage/transaction occured
              type: string
              format: date-time                                 
            periodCoverage:
              description: "periodCoverage for RecurringCharge (RC)"
              $ref: '#/components/schemas/TimePeriod'
            isBilled:
              type: boolean
              description: |
                If isBilled, THEN in referenced bill, billNo (invoice no) is available.
            accountRelationType:
              $ref: '#/components/schemas/AccountRelationType'
            account:
              $ref: '#/components/schemas/EntityRef'
            accountBillingCycleSpecificationId:
              description: |
                Bill cycle specification id of the account
              type: string
            productNameRef:
              description: |
                Reference to Product Name that is charged and to be shown on the bill.
                The name to be chosen is applied in the following order
                If available product.name 
                else if available productOffering.name
                else productSpecification.name
              type: string
            priceType:
              $ref: "#/components/schemas/PriceType"
            taxExcludedAmount:
              $ref: "#/components/schemas/Money"
            taxIncludedAmount:
              $ref: "#/components/schemas/Money"
            paidAmount:
              description: "Amount paid for this bill item expressed in the given currency"
              $ref: '#/components/schemas/Money'
            appliedPayment:
              type: array
              items:
                $ref: '#/components/schemas/AppliedPayment'
              description: "Applied Payments to this entity"
            appliedTax:
              type: array
              items:
                $ref: '#/components/schemas/TaxItem'
            taxExcludedAmountBeforeDiscount:
              $ref: "#/components/schemas/Money"
            taxIncludedAmountBeforeDiscount:
              $ref: "#/components/schemas/Money"
            appliedTariffRuleSet:
              $ref: "#/components/schemas/VersionedEntityRef"
            appliedTariffRuleBranchPath:
              type: string
              example: "OutsideUSA_WeekDay"
            quantity:
              $ref: "#/components/schemas/Quantity"
            product:
              $ref: "#/components/schemas/EntityRef"
            productOffering:
              $ref: "#/components/schemas/EntityRef"
            productSpecification:
              $ref: "#/components/schemas/EntityRef"
            realizingService:
              type: "array"
              items:
                $ref: "#/components/schemas/ServiceRef"
            realizingResource:
              type: "array"
              items:
                $ref: "#/components/schemas/ResourceRef"
            isRevenueShareOnB2CPayment:
              type: boolean
              default: false
            accountRefForB2CPayment:
              $ref: "#/components/schemas/EntityRef"



#############################################################################
## RATED PRODUCT TRANSACTION TYPE
#############################################################################

    RatedProductTransactionType:
      description: |
        Rated Product Transaction Type
      allOf:
        - $ref: "#/components/schemas/AbstractRatedProductTransaction"
        - type: object
          properties:
            discountPart:
              type: array
              items:
                $ref: "#/components/schemas/DiscountPartItem"



    DiscountPartItem:
      description: 
        MonE Discount within CDS-Charging Data Stream
      allOf:
        - $ref: "#/components/schemas/Entity"        
        - type: object
          properties:
            to_be_defined:
              type: string


    ABMDS:
      description: 
        MonE ABMDS-Account Balance Management Data Stream (Persist Balance Delta Updates on DB)

      allOf:
        - $ref: "#/components/schemas/Entity"  
        - type: object    
          properties:
            TODO:
              type: string
              example: "TODO"


#############################################################################
#############################################################################
## ChargingMonetizationTemplate
#############################################################################
#############################################################################


    ChargingMonetizationTemplate:
      description:
        Charging MonetizationTemplate.
      allOf:
        - $ref: "#/components/schemas/VersionedEntityRef"
        - type: object
          properties:
            resourceNumberNormalizationRule:
              description: |
                Defines the list of normalizations to be applied.
              type: array
              items:
                $ref: "#/components/schemas/ResourceNumberNormalizationRule"
            accountIdentificationRule:
              description: |
                Defines the list of involved billing accounts to be identified, their roles and <br>
                the identification method for each whether be B2C or B2B.
              type: array
              items: 
                $ref: "#/components/schemas/AccountIdentificationRule"
            productIdentificationRule:
              description: |
                Defines the list of involved products to be identified and the identification method for each.
              type: array
              items: 
                $ref: "#/components/schemas/ProductIdentificationRule"
            chargeIdentificationRule:
              description: |
                Defines the list of charges to be created.
              type: array          
              items: 
                $ref: "#/components/schemas/ChargeIdentificationRule"


    ChargingMonetizationTemplateRef:
      description: 
        Reference. ChargingMonetizationTemplate.

      allOf:
        - $ref: "#/components/schemas/VersionedEntityRef"


    ResourceNumberNormalizationRule:
      description: |
        Defines a single identifier (address/number) normalization context to be applied.<br>
        Input: Operates on CDS.qualifierCollection<br>
        Output: Stored onto CDS.qualifierCollection<br>

        * Defines a source object key that represents to-be normalized identifier: network address, logical address, device address etc.
        * Defines a target object key to store normalized identifier information
        * Optionally defines additional object/field reference keys that act as additional information hints and impact normalization logic
      type: object
      properties:
        isContinueOnError:
          type: boolean
          default: false
        criteria:
          type: array
          items:
            $ref: "#/components/schemas/ResourceNumberNormalizationRuleCriteria"
        result:
            $ref: "#/components/schemas/ResourceNumberNormalizationRuleResult"

    ResourceNumberNormalizationRuleCriteria:
      description: ResourceNumberNormalization RuleCriteria
      type: object
      properties:
        sourceObjectKey:
          $ref: "#/components/schemas/ResourceNumberObjectKey"
        referencePrefixKey: 
          description: |
            Key to referencePrefix that provides hints to Normalization Logic regarding Specific Prefixes (such as + for international calls etc.)
          $ref: "#/components/schemas/CollectionPropertyKey"
        referenceLocationPrefixKey: 
          description: |
            Key to referenceLocation number that provides hints to location aware Normalization Logic regarding Location Specific Prefixes<br> 
            such as CC country code, NDC national destination code
          $ref: "#/components/schemas/CollectionPropertyKey"
      required:
        - sourceObjectKey

    ResourceNumberNormalizationRuleResult:
      description: ResourceNumberNormalization RuleResult
      type: object
      properties:
        resultObjectKey:
          $ref: "#/components/schemas/ResourceNumberObjectKey"
      required:
        - resultObjectKey

        

    ResourceNumberObjectKey:
      description:
        Describes the Network Address/Number Accessor within qualifierCollection
      type: object
      properties:
        resourceNumberKey: 
          description: |
            Key to Number/Address field
          $ref: "#/components/schemas/CollectionPropertyKey"
        typeOfNumberKey: 
          description: |
            Key or Value to Type of Number field
          $ref: "#/components/schemas/CollectionPropertyKey"
        numberingPlanKey: 
          description: |
            Key or Value to Numbering Plan field
          $ref: "#/components/schemas/CollectionPropertyKey"
      required:
        - numberKey



    AccountIdentificationRule:
      description: |
        Defines a single account identification context to be applied.<br>
        Input: Operates on CDS.qualifierCollection<br>
        Output: Stored onto CDS.involvedAccount<br>

        * Defines account searchType
        * Defines one or more source object key(s) to identify account
        * Defines type of account: b2b or b2c
        * Defines role of account

      type: object
      properties:
        isContinueOnError:
          type: boolean
          default: false
        criteria:
          type: array
          items:
            $ref: "#/components/schemas/AccountIdentificationRuleCriteria"
        result:
            $ref: "#/components/schemas/AccountIdentificationRuleResult"

          
    AccountIdentificationRuleCriteria:
      description: AccountIdentification RuleCriteria
      type: object
      properties:
        searchType:
          type: string
          enum:
            - accountName
            - resourceNumber
        searchDatetime:
          $ref: "#/components/schemas/CollectionPropertyKey"
        searchKey:
          $ref: "#/components/schemas/CollectionPropertyKey"



    AccountIdentificationRuleResult:
      description: AccountIdentification RuleResult
      type: object
      properties:        
        accountRelationType:
          $ref: "#/components/schemas/AccountRelationType"
        role:
          type: string
          example: "customer"
        involvedAccountIndex:
          description:
            index to store identified Account under CDS.involvedAccount list<br>
          type: integer
          minimum: 0


    ProductIdentificationRule:
      description: |
        Defines a single product identification context to be applied.<br>
        Input: Operates on CDS.qualifierCollection<br>
        Output: Stored onto CDS.involvedProduct<br>

        * Defines product searchType
        * Defines one or more source object key(s) to identify product
        * Defines role of product

      type: object
      properties:
        isContinueOnError:
          type: boolean
          default: false
        criteria:
          type: array
          items:
            $ref: "#/components/schemas/ProductIdentificationRuleCriteria"
        result:
            $ref: "#/components/schemas/ProductIdentificationRuleResult"

  
    ProductIdentificationRuleCriteria:
      description: ProductIdentification RuleCriteria
      type: object
      properties:
        defaultProductNameKey:
          description: "If product cannot be found, name is retrieved from this input field"
          $ref: "#/components/schemas/CollectionPropertyKey"
        searchType:
          type: string
          enum:
            - productName
            - serviceCode
            - resourceNumber
            - serviceCodeAndResourceNumber
        searchDatetime:
          $ref: "#/components/schemas/CollectionPropertyKey"
        searchKey:
          $ref: "#/components/schemas/ProductIdentificationSearchKey"        

    ProductIdentificationSearchKey:
      description: ProductIdentification SearchKey
      type: object
      properties:
        involvedAccountIndex:
          type: integer
          minimum: 0
        productNameKey:
          $ref: "#/components/schemas/CollectionPropertyKey"
        serviceCodeKey:
          $ref: "#/components/schemas/CollectionPropertyKey"
        resourceNumberKey:
          $ref: "#/components/schemas/CollectionPropertyKey"

    ProductIdentificationRuleResult:
      description: AccountIdentification RuleResult
      type: object
      properties:        
        role:
          type: string
          example: "abc"
        involvedProductIndex:
          description:
            index to store identified Product under CDS.involvedProduct list<br>
          type: integer
          minimum: 0


    ChargeIdentificationRule:
      description: |
        Defines a single charge identification context to be applied.<br>
        Input: Operates on CDS<br>
        Output: Stored onto CDS.chargePart<br>

        * Defines the dateTime to be applied for calculating the charge
        * Defines the billingAccount of the chargePart for the calculated charge
        * Defines the product of the chargePart for the calculated charge
        * Defines the quantity to be applied subject to charge calculation
        * Defines the charging method to be applied: tariffBased, calculatedChargeBased, templateBased.fixed, templateBased.linear, templateBased.tiered 


      type: object
      properties:
        isContinueOnError:
          type: boolean
          default: false
        criteria:
          $ref: "#/components/schemas/ChargeIdentificationRuleCriteria"
        result:
          $ref: "#/components/schemas/ChargeIdentificationRuleResult"

  
    ChargeIdentificationRuleCriteria:
      description: ChargeIdentification RuleCriteria
      type: object
      properties:

        chargeDatetimeRef:
          description: 
            Reference to CDS datetime field to be considered for applying charge
          $ref: "#/components/schemas/CollectionPropertyKey"
        chargePriceTypeRef:
          description: 
            Reference to CDS quantifier that determines the priceType
          $ref: "#/components/schemas/CollectionPropertyKey"        
        accountRef:
          description: 
            Index to involvedAccount
          type: integer
          minimum: 0
        chargeProductRef:
          description: 
            Index to involvedProduct
          type: integer
          minimum: 0
        realizingServiceRef:
          description: 
            Shall be provided to override the realizingServiceRef (if any) related to product order
          $ref: "#/components/schemas/CollectionPropertyKey"        
        chargeMethodType:
          type: string
          enum:
            - tariffModel.Global
            - tariffModel.Account
            - tariffModel.ChargeProductRef
            - tariffModel.TariffProductRef
            - templateDetermined.flatRate
            - templateDetermined.linearRate
            - templateDetermined.tieredRate
            - chargePartTotalPrice.linearRate
            - chargePartTotalPrice.tieredRate
        chargeQuantityRef:
          description: |
            Reference to CDS chargeQuantity field to be considered for applying charge.<br>
            Must be under quantifierCollection.
          $ref: "#/components/schemas/CollectionPropertyKey"
        chargeQuantityRoundingDigits:
          description: |
            If provided, the number of digits for rounding chargeQuantity.
          type: integer
          minimum: 0
        tariffProductRef:
          description: 
            Index to involvedProduct
          type: integer
          minimum: 0
        tariffRef:
          $ref: "#/components/schemas/VersionedEntityRef"

        flatRate:
          description: |
            flatRate when chargeMethodType=templateDeterminedModel.flatRate
          type: number
          format: double          
        linearRate:
          $ref: "#/components/schemas/LinearRateFunction"  
        tieredRate:
          $ref: "#/components/schemas/TieredRateFunction"  
        chargePartIndex:
          description: |
            index to chargePart (for using totalCharge as input) when chargeMethodType=chargePartTotalPrice
          type: integer
          minimum: 0
        percentage:
          description: |
            Final percentage to be applied on calculated charge as per chargeMethodType <br>
            if NOT provided, no percentage applied
          type: number
          format: double
          default: 1.0


    LinearRateFunction:
      description: |
        linearRate when chargeMethodType=templateDeterminedModel.linearRate<br><br>
        R(X) = m*ROUND( X/c, digits, round=normal/up/down) + b<br>
        where **m**:rate per **c**:conversion factor and **b**: fixed cost<br>
        (if **c** not provided, then c=1;no conversion) 

      type: object
      properties:
        m:
          type: number
          format: double
          default: 1
        b:
          type: number
          format: double
          default: 0
        c:
          type: number
          format: double
          default: 1.0
        round:
          type: string
          enum: 
            - normal
            - up 
            - down 
        digits:
          type: integer
          minimum: 0
          default: 5
          example: 5

    TieredRateFunctionItem:
      description: |
        tieredRate when chargeMethodType=templateDeterminedModel.tieredRate. <br>
        R(X) = m*ROUND( X/c, digits, round=normal/up/down) + b<br>
        where **m**:rate per **c**:conversion factor and **b**: fixed cost<br>
        (if **c** not provided, then c=1;no conversion) 

        Block [0, X1)]<br>
          R(X) = round( normal/up/down, **m1**X, **digits1** ) + **b1**<br>  
        Block [X1, X2)]<br>
          R(X) = round( normal/up/down, **m2**X, **digits2** ) + **b2**<br>
        <br>...<br><br>
        Block [Xn, Xn+1)]<br>
          R(X) = round( normal/up/down, **m(n)**X, **digits(n)** ) + **b(n))**<br>
      type: object
      properties:
        startValue:
          type: number
          format: double
        endValue:
          type: number
          format: double
        m:
          type: number
          format: double
          default: 1
        b:
          type: number
          format: double
          default: 0
        c:
          type: number
          format: double
          default: 1.0
        round:
          type: string
          enum: 
            - normal
            - up 
            - down 
        digits:
          type: integer
          minimum: 0
          default: 5
          example: 5


    TieredRateFunction:
      type: array
      items:
        $ref: "#/components/schemas/TieredRateFunctionItem"


    ChargeIdentificationRuleResult:
      description: AccountIdentification RuleResult
      type: object
      properties:        
        name:
          type: string
          example: "Name of charge part"
        chargePartIndex:
          description:
            index to store identified Product under CDS.chargePart list<br>
          type: integer
          minimum: 0
        isRevenueShareOnB2CPayment:
          type: boolean
          default: false
        accountRefForB2CPayment:
          description: 
            Index to involvedAccount. Required if isRevenueShareOnB2CPayment=true
          type: integer
          minimum: 0        
        




#############################################################################
## 5.x. EXTERNAL COMMON DATA TYPE REFERENCES
#############################################################################

    Entity:
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_tmforum_openapi_schemas.yaml#/components/schemas/Entity'
    EntityRef:
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_tmforum_openapi_schemas.yaml#/components/schemas/EntityRef'
    RelatedEntityRef:
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_tmforum_openapi_schemas.yaml#/components/schemas/RelatedEntityRef'
    Characteristic:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_tmforum_openapi_schemas.yaml#/components/schemas/Characteristic'
    Price:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_tmforum_openapi_schemas.yaml#/components/schemas/Price'    
    Quantity:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_tmforum_openapi_schemas.yaml#/components/schemas/Quantity' 
    Any:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_tmforum_openapi_schemas.yaml#/components/schemas/Any'       
    ServiceRef:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_tmforum_openapi_schemas.yaml#/components/schemas/ServiceRef'
    ResourceRef:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_tmforum_openapi_schemas.yaml#/components/schemas/ResourceRef'   
    TaxItem:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_tmforum_openapi_schemas.yaml#/components/schemas/TaxItem'            
    TimePeriod:
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_tmforum_openapi_schemas.yaml#/components/schemas/TimePeriod'
    Money:
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_tmforum_openapi_schemas.yaml#/components/schemas/Money'
    AppliedPayment:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_tmforum_openapi_schemas.yaml#/components/schemas/AppliedPayment'


    CollectionPropertyKey:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/CollectionPropertyKey'       
    PriceType:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/PriceType'    
    RelatedEntityRefWithRole:
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/RelatedEntityRefWithRole'

    VersionedEntity:
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/VersionedEntity'
    VersionedEntityRef:
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/VersionedEntityRef'
    VersionedRelatedEntityRef:
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/VersionedRelatedEntityRef'

    Event:
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/Event'
    Collection:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/Collection'

    CollectionItem:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/CollectionItem'
    CollectionItemKey:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/CollectionItemKey'   

    AccountRelationType:  
      $ref: '/INTERFACES/API-SPECIFICATION/YAML/PRIVATE/common_private_type_schemas.yaml#/components/schemas/AccountRelationType'   

#############################################################################
## 5.x. EXTERNAL COMMON API TYPE REFERENCES
#############################################################################


#############################################################################
## 6. SECURITY
#############################################################################
security:
  - JWT_Bearer: []
  - IAM_OAuth: []    

#############################################################################
## 7. TAGS
#############################################################################


#############################################################################
## 8. EXTERNAL DOCS
#############################################################################
externalDocs:
  description:
    Find more information here.
  url: https://monetizehub.io/docs/home/






#############################################################################
#############################################################################